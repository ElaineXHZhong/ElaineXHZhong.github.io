<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[server_connect]]></title>
    <url>%2F2019%2F04%2F22%2Fserver-connect%2F</url>
    <content type="text"><![CDATA[Nodejs server &amp;&amp; Python servernodejs server和python server之间用RESTful API通信，把前端上传图片的文件路径传给python server. Client.js (node.js server) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111var multer = require('multer');// var fs = require('fs');var path = require('path');var express = require('express');var app = express();// var request = require('request');app.get('/', function (req, res) &#123; res.send('Hello World');&#125;)var server = app.listen(8081, function () &#123; var host = server.address().address var port = server.address().port console.log("应用实例，访问地址为 http://%s:%s", host, port)&#125;)// upload imagevar storage01 = multer.diskStorage(&#123; destination: './images/', filename: function(req, file, cb) &#123; return cb(null, "" + file.originalname); &#125; &#125;);app.post("/user/image", multer(&#123; storage: storage01 &#125;).single('image'), function(req, res) &#123; console.log('Sign saved!'); var email = req.body.email; console.log(email); var path01 = path.join(__dirname,req.file.path); // console.log(path01);// var request = require('request'); var http = require('http'); var qs = require('querystring'); var opt = &#123; host:'127.0.0.1', port:'8888', method:'POST', path:'/', headers:&#123; 'content-type': "application/json" //'accept-encoding': 'gzip' &#125; &#125;; var body = ''; var req = http.request(opt, function(res) &#123; console.log("Got response: " + res.statusCode); res.on('data',function(d)&#123; body += d; &#125;); res.on('end', function()&#123; console.log(res.headers); console.log(body) &#125;); &#125;); req.on('error', function(e) &#123; console.log("Got error: " + e.message); &#125;); // var data = &#123;num:"1",num1:"123",type:"add"&#125;; var data = &#123;'path01':`'$&#123;path01&#125;'`&#125;; req.write(qs.stringify(data)); req.end();// return res.status(200).end('success');&#125;);// var request = require('request');// var http = require('http');// var qs = require('querystring');// var opt = &#123;// host:'127.0.0.1',// port:'8888',// method:'POST',// path:'/',// headers:&#123;// 'content-type': "application/json"// //'accept-encoding': 'gzip'// &#125;// &#125;;// var body = '';// var req = http.request(opt, function(res) &#123; // console.log("Got response: " + res.statusCode);// res.on('data',function(d)&#123;// body += d;// &#125;);// res.on('end', function()&#123;// console.log(res.headers);// console.log(body)// &#125;);// &#125;);// req.on('error', function(e) &#123;// console.log("Got error: " + e.message);// &#125;); // // var data = &#123;num:"1",num1:"123",type:"add"&#125;;// var data = &#123;'path01':'path01'&#125;; // req.write(qs.stringify(data));// req.end(); Server.js (python server) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107// var http = require("http"); // var url = require("url"); // var query = require("querystring"); // var server = function(request,response)&#123;// response.writeHead(200,&#123;"Content-Type":"text/json"&#125;);// var postdata = "";// request.addListener("data",function(postchunk)&#123;// postdata += postchunk; // &#125;)// request.addListener("end",function()&#123;// var params = query.parse(postdata);// console.log(params['path01'])// console.log(params['path01'])// // console.log(params['result']);// response.write(JSON.stringify(params));// response.end();// &#125;)// &#125;// http.createServer(server).listen(8888);// console.log("Server start!"); //---------------------//express.js 文件var express = require('express');var app = express();var server = app.listen(8888, function () &#123; var host = server.address().address var port = server.address().port console.log("应用实例，访问地址为 http://%s:%s", host, port)&#125;)app.post('/uploadFile',function(req,res)&#123; response.writeHead(200,&#123;"Content-Type":"text/json"&#125;); var postdata = ""; request.addListener("data",function(postchunk)&#123; postdata += postchunk; &#125;) request.addListener("end",function()&#123; var params = query.parse(postdata); console.log(params['path01']) console.log(params['path01']) // console.log(params['result']); response.write(JSON.stringify(params)); response.end(); &#125;)&#125;)//---------------------// var http = require("http"); //提供web服务// var url = require("url"); //解析GET请求 // var query = require("querystring"); //解析POST请求 // //服务// var server = function(request,response)&#123;// //定义报文头// response.writeHead(200,&#123;"Content-Type":"text/json"&#125;);// //判断是GET/POST请求// if(request.method == "GET")&#123;// var params = [];// params = url.parse(request.url,true).query;// params['result'] = compute(params);// response.write(JSON.stringify(params));// response.end();// &#125;else&#123;// var postdata = "";// request.addListener("data",function(postchunk)&#123;// postdata += postchunk; // &#125;) // //POST结束输出结果// request.addListener("end",function()&#123;// var params = query.parse(postdata);// console.log(params['path01'])// console.log(params['path01'])// params['result'] = compute(params);// // console.log(params['result']);// response.write(JSON.stringify(params));// response.end();// &#125;)// &#125;// &#125; // //计算// var compute = function(params)&#123;// switch(params['type'])&#123;// case "add": return parseFloat(params['num']) + parseFloat(params['num1']);break;// case "sub": return parseFloat(params['num']) - parseFloat(params['num1']);break;// case "mul": return parseFloat(params['num']) * parseFloat(params['num1']);break;// case "div": return parseFloat(params['num']) / parseFloat(params['num1']);break;// &#125;// &#125;; // http.createServer(server).listen(8888);// console.log("Server start!");]]></content>
      <categories>
        <category>coding_testing</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
