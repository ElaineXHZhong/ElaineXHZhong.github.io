<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Stopping_by_Woods_on_a_Snowy_Evening]]></title>
    <url>%2F2019%2F04%2F22%2Fthink-02-Stopping-by-Woods-on-a-Snowy-Evening%2F</url>
    <content type="text"><![CDATA[Stopping by Woods on a Snowy Evening ------ Robert Frost Whose woods these are I think I know. His house is in the village，though； He will not see me stopping here, To watch his woods fill up with snow. My little horse must think it queer, To stop without a farmhouse near, Between the woods and frozen lake, The darkest evening of the year. He gives his harness bells a shake, To ask if there is some mistake. The only other sound's the sweep, Of easy wind and downy flake. The woods are lovely, dark and deep, But I have promises to keep, And miles to go before I sleep, And miles to go before I sleep. 基本演绎法里华生送给夏洛克的戒毒礼物那句话正是出自这首《雪夜林畔小驻》: 夜林迷人幽静深 我却早已许诺言 路途遥远不能眠 路途遥远不能眠]]></content>
      <categories>
        <category>think</category>
      </categories>
      <tags>
        <tag>think</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Liao-Fan-Four-Lessons]]></title>
    <url>%2F2019%2F04%2F22%2Fthink-01-Liao-Fan-Four-Lessons%2F</url>
    <content type="text"><![CDATA[了凡四训 簡介 Introduction 袁了凡先生，生於明世宗嘉靖十四年（1535）、卒於明神宗萬曆三十六年（1608），享年七十四。江蘇吳江人，本名袁黃、字坤儀，早年被 孔先生將一生命運算定後，遇 雲谷禪師爲其開示「命自我立」之學，遂改別號學海為了凡。了凡先生盡其一生實踐改過積善之法，成為世人行善修德、改造命運的傑出典範。 「了凡四訓」是先生爲教育子孫後代所寫的四篇家訓，文理俱暢、豁人心目。清末民初 印光大師竭力提倡因而流傳甚廣，成為後人積善累德，改造命運的經典。淨空早年受教於 朱鏡宙老人，復印證於 印祖，畢生奉行，深受利益，是為解救今世眾生劫難之不二法門，又為佛門信解行證，入佛境界之大根大本也。願與我同倫共勉之。 “创造命运”就是形成一个人的命运，而不是受其束缚。这里学习创造命运的教训讨论了命运背后的原理和改变命运所需的知识。通过将自己的经验和考验与改变命运联系起来，廖孝凡先生教导他的儿子田智不受命运的束缚，而是尽最大努力实践仁慈，切断邪恶。一个人不应该拒绝做一种善意的行为，因为它似乎是一种微小的善良，或仅仅因为它似乎是一个小恶，就犯了一个邪恶的行为。如果一个人以正确的方式练习，就可以确保一个人的命运可以改变。人们常说，“避免一切邪恶，实行一切形式的善意，都会带来灾难的分散和财富的来临”。 “Creating Destiny” is about forming one’s fate rather than be bound by it. The Lesson of Learning to Create Destiny herein discusses the principle behind fate and the knowledge necessary to change it. By relating his own experience and trials at changing destiny, Mr. Liao-Fan Yuan taught his son, Tien-Chi not to be bound by fate, but rather to put forth his best effort in practicing kindness and cutting off evil. One should not reject doing a kind act simply because it seems to be a minute goodness, or commit an evil deed simply because it appears to be a small evil. If one practices in a proper manner, it is assured that one’s destiny can be changed. It is often said, “Refraining from all evil and practicing all forms of kindness brings about the dispersion of disasters and the coming of fortune”. This is the principle behind creating one’s destiny. 立命之學 The First Lesson: Learning To Create Destiny 【了凡】：余童年喪父。老母命棄舉業學醫。謂（「舉業」：從前讀書人學作八股文，去考秀才舉人謂之） 【我童年的時候父親就去逝了，母親要我放棄學業，不要去考功名，改學醫，並且說：】[Liao-Fan]: My father passed away when I was young, and mother persuaded me to learn medicine instead of becoming a scholar. Mother said to me: 【母親】：可以養生。可以濟人。且習一藝以成名。爾父夙心也。（「夙心」：向來有的心）【學醫可以賺錢養活生命，也可以救濟別人。並且醫術學得精，可以成為名醫，這是你父親從前的心願。】 [Mother]: Learning medicine will be a good way to support yourself and also to help others. Besides, having a skill on hand, you will never have to worry about making a living, and you can even become famous through your medical skills. This has always been an ambition your father had for you. 【了凡】：後余在慈雲寺。遇一老者。修髯偉貌。飄飄若仙。余敬禮之。語余曰。（「修」：長。「髯」ㄖㄢˇ：面頰上的鬍鬚謂之）【後來我在慈雲寺，碰到了一位老人，相貌非凡，一臉長鬚，看起來飄然若仙風道骨，我就很恭敬地向他行禮。這位老人向我說：】 [Liao-Fan]: One day, at the Compassionate Cloud Temple, I met an elderly but distinguished looking man who had a long beard and had such a look of a sage that I immediately paid my respects to him. The old man told me: 【老者】：子仕路中人也。明年即進學。何不讀書。（「進學」：童生（沒功名的讀書人皆謂之，不論年紀）經縣考、府考、提學考三種考試通過，取得秀才資格，進入縣立的學宮（文廟，供 孔子的廟）讀書，由教官負責教導） 【你是官場中的人，明年就可以去參加考試，進學宮了，為何不讀書呢？】 [Old Man]: You are destined to become a government official. You can attain the rank of Erudite First Level Scholar next year, why aren’t you studying for the exam? 【了凡】：余告以故。並叩老者姓氏里居。曰。【我就把母親叫我放棄讀書去學醫的緣故告訴他。並且請問老人的姓名，是那裏人，家住何處；老人回答我說：】 [Liao-Fan]: So I told him of my mother’s instructions to give up scholarly study for learning medicine. Then I asked for his name, birthplace, and residence. He replied: 【老者】：吾姓孔。雲南人也。得邵子皇極數正傳。數該傳汝。【我姓孔，是雲南人，宋朝邵康節先生所精通的皇極數，我得到他的真傳。照註定的數來講，我應該把這個皇極數傳給你。】 [Old Man]: My last name is Kong. I came from Yunnan Province. I have inherited the knowledge of Mr. Shao, who developed the art of prediction very well. By calculations, I’m supposed to pass it on to you. 【了凡】：余引之歸。告母。母曰。善待之。【因此，我就領了這位老人到我家，並將情形告訴母親。母親要我好好的待他。並且說：】 [Liao-Fan]: Therefore, I led Mr. Kong to my home and told my mother about him. Mother told me to treat him well and said: 【母親】：試其數。【這位先生既然精通命數的道理，就請他替你推算推算，試試看，究竟靈不靈。】 [Mother]: Since Mr. Kong is so good at predicting the future, he must also know our past. Let’s ask him and test his authenticity. 【了凡】：纖悉皆驗。余遂起讀書之念。謀之表兄沈稱。言。【結果孔先生所推算的，雖然是很小的事情，但是都非常的靈驗。我聽了孔先生的話，就動了讀書的念頭，和我的表哥沈稱商量。表哥說：】 [Liao-Fan]: As a result, I found Mr. Kong’s calculations to be very accurate, even in very small cases. After hearing his words of advice, I once again thought about studying. I then consulted with my cousin Shen-chen. He recommended thus: 【表兄】：郁海谷先生。在沈友夫家開館。我送汝寄學甚便。（「開館」：類似後來的私塾。「寄學」：寄住在館中讀書） 【我的好朋友郁海谷先生在沈友夫家裏開館，收學生讀書。我送你去他那裏寄宿讀書，非常方便。】 [Cousin]: &quot;My friend, Mr. Hai-gu Yu is teaching at the home of Yo-fu Sheng. It would be very convenient for me to take you there for boarding and studying. 【了凡】：余遂禮郁為師。 孔為余起數。【於是我便拜了郁海谷先生為老師。孔先生有一次替我推算我命裏所註定的數；他說：】 [Liao-Fan]: This was how I became Mr. Yu’s student. Once again Mr. Kong made a prediction for me. He said: 【孔先生】：縣考童生當十四名。府考七十一名。提學考第九名。（袁了凡生於江蘇省、蘇州府、吳江縣。「縣考」：知縣（一縣之主）主管之考試。「府考」：知府（一府之主）主管之考試。「提學考」：一省（一省之主是巡撫，或稱撫臺）之考試，或稱院試，由提學（提督學院，相當於現在一個省的教育廳長）主管） 【在你沒有取得功名做童生時，縣考應該考第十四名，府考應該考第七十一名，提學考應該考第九名。】 [Mr. Kong]: As a student, you will place fourteenth in the county examination, seventy-first at the regional exam, and ninth at the provincial examination. 【了凡】：明年赴考。三處名數皆合。 復為卜終身休咎。言【到了明年，果然三處的考試，所考的名次和孔先生所推算的一樣，完全相符。孔先生又替我推算終生的吉凶禍福。他說：】 [Liao-Fan]: The following year, at the three places of examination, I placed exactly as he had predicted. Then Mr. Kong calculated the predictions for my entire life. He said: 【孔先生】：某年考第幾名。某年當補廩。某年當貢。貢後某年當選四川一大尹。在任三年半。即宜告歸。五十三歲八月十四日丑時。當終於正寢。惜無子。（「廩」：童生進了學，每三年，至提學處參加歲考（另有科考），考得好，即可補廩生（廩生是比秀才高一級的功名，有名額限制，遇缺才補），開始可以領公家發的米（後來都折合現金）。「貢」：廩生補貢生，亦歸提學考定，貢生即有資格入太學讀書。「大尹」：知縣。「正寢」：正式的臥房） 【那一年考取第幾名，那一年應當補廩生，那一年應當做貢生，等到貢生出貢後，在某一年，應當選為四川省的一個縣長，在做縣長的任上三年半後，便該辭職回家鄉。到了五十三歲那年八月十四日的丑時，就應該壽終正寢，可惜你命中沒有兒子。】 [Mr. Kong]: You will pass such and such a test in such and such a year, you will become a civil servant in such a year, and in such a year you will get a promotion. Finally, you will be appointed as a magistrate in Szechuan Province. After holding that office for three and a half years, you will resign and return home. At the age of fifty- three, you will die around one o’clock in the morning on August 14th. It’s a pity that you will not have a son. 【了凡】：余備錄而謹記之。 自此以後。凡遇考校。其名數先後。皆不出孔公所懸定者。獨算余食廩米九十一石五斗當出貢。及食米七十餘石。屠宗師即批準補貢。余竊疑之。（「宗師」：學臺（提學）的一種尊稱。）【這些話我都一一的記錄起來，並且牢記在心中。從此以後，凡是碰到考試，所考名次先後，都不出孔先生預先所算定的名次。唯獨算我做廩生所應領的米，領到九十一石五斗的時候才能出貢。那裡知道我吃到七十一石米的時候，學臺屠宗師（學臺：相當於現在的教育廳長）他就批准我，補了貢生。我私下就懷疑孔先生所推算的，有些不靈了。】 [Liao-Fan]: I recorded and remembered all that he said. From then on, the outcome of every examination I took turned out exactly as Mr. Kong predicted. Mr. Kong also predicted that I would be promoted only after receiving a salary in the weight of ninety-one dans and five dous of rice. However, I had received only seventy-one dans of rice when the senior educational official Mr. Tu recommended me for a promotion. I secretly began to doubt Mr. Kong’s predictions. 【了凡】：後果為署印楊公所駁。直至丁卯年。殷秋溟宗師見余場中備卷。歎曰。（「署印」：署缺、署理，比代理還更正式。「備卷」：房官（幫主考官看文章者）推薦給主考官的文章（薦卷）若太多，則將一些較差的卷子抽掉，被抽掉的就是備卷） 【後來果然被另外一位代理的學臺楊宗師駁回，不准我補貢生。直到丁卯年，殷秋溟宗師看見我在考場中的「備選試卷」沒有考中，替我可惜，並且慨嘆道：】 [Liao-Fan]: Nevertheless, the prediction turned out to be correct after all, because the recommendation was turned down by Mr. Tu’s superior, Mr. Yang. It was not until several years later when Mr. Chiu-min Ying saw my old exam papers and exclaimed: 【殷宗師】：五策即五篇奏議也。豈可使博洽淹貫之儒。老於窗下乎。（「五策」：五篇策，類似現在五條問答題。「奏議」：大臣上給皇帝的奏摺議論。「洽」：能將各種學問融會貫通。「淹」：深。「貫」：通。） 【這本卷子所做的五篇策，竟如同上給皇帝的奏摺一樣。像這樣有大學問的讀書人，怎麼可以讓他埋沒到老呢？】 [Mr. Ying]: These five essays are as well written as reports to the Emperor! How can we bury the talents of such a great scholar? 【了凡】：遂依縣申文准貢。連前食米計之。實九十一石五斗也。余因此益信進退有命。遲速有時。澹然無求矣。【於是他就吩咐縣官，替我上公事到他那裏，准我補了貢生，經過這番的波折，我又多吃了一段時間的廩米，算起來連前所吃的七十一石，恰好補足，總計是九十一石五斗。我因為受到了這番波折，就更相信：一個人的進退功名浮沉，都是命中註定。而走運的遲或早，也都有一定的時候，祈以一切都看得淡，不去追求了。】 [Liao-Fan]: Mr. Ying wanted the magistrate to issue an official order for me to become a candidate for ‘imperial student’ under his authority. After undergoing this eventful promotion, my calculations showed that I had received exactly ninety-one dans and five dous of rice. From then on, whether it was promotion, rank, or wealth, I deeply believed that all came in due time. Even the length of one’s life is predestined. I began to view everything in a more detached manner and ceased to seek gain and profit. 【了凡】：貢入燕都。留京一年。終日靜坐。不閱文字。己巳歸。游南雍。未入監。先訪雲谷會禪師。於棲霞山中。對坐一室。凡三晝夜不瞑目。 雲谷問曰。（「燕都」：北京。「南雍」：南京的辟雍（辟雍：皇帝所設立的大學堂，明朝稱國子監）。「棲霞山」：位於南京江寧府江寧縣） 【等我當選了『貢生』，按照規定，要到北京的國家大學去讀書。所以我在京城裏住了一年。一天到晚，靜坐不動，不說話，也不轉動念頭。凡是文字，一概都不看。到了己巳年，回到南京的國家大學讀書，在沒有進國家大學以前，先到棲霞山去拜見雲谷禪師，他是一位得道的高僧。 我同禪師面對面，坐在一間禪房裏，三天三夜，連眼睛都沒有閉。雲谷禪師問我說：】 [Liao-Fan]: After being selected as an imperial student, I was to attend the university at Beijing. During my year-long stay at the capital, my interest in meditation grew and I often sat silently without giving rise to a single thought. I lost interest in books and did not study at all. Before I was to enter the national university at Nanking, I paid a visit to the enlightened Zen master Yun Gu at Chi-shia Mountain. We sat face to face in the Zen Hall for three days and nights without ever falling asleep. Master Yun Gu questioned me saying: 【雲谷大師】：凡人所以不得作聖者。只為妄念相纏耳。汝坐三日。不見起一妄念。何也。【凡是一個人，所以不能夠成為聖人，祇因為妄念，在心中不斷地纏來纏去；而你靜坐三天，我不曾看見你起一個妄念，這是什麼緣故呢？】 [Master Yun Gu]: The reason why mundane people are unable to attain sagehood is because they have too many wandering and false thoughts running through their minds. In our three-day meditation, I have not observed the slightest wandering thought arise in you - why is this so? 【了凡】：余曰。吾為孔先生算定。榮辱死生。皆有定數。即要妄想。亦無可妄想。 雲谷笑曰。【我說：我的命被孔先生算定了，何時生，何時死，何時得意，何時失意，都有個定數，沒有辦法改變。就是要胡思亂想得到什麼好處，也是白想；所以就老實不想，心裡也就沒有什麼妄念了。雲谷禪師笑道：】 [Liao-Fan]: I replied, “Mr. Kong has clearly predicted the entire outcome of my life. I have seen that the time of life, death, promotion, and failure are all predestined. There is no use or need for me to think about it or to desire anything. That’s why you have not seen me give rise to a single wandering thought.” Master Yun Gu laughed and said: 【雲谷大師】：我待汝是豪傑。原來只是凡夫。【我本來認為你是一個了不得的豪傑，那裏知道，你原來只是一個庸庸碌碌的凡夫俗子。】 [Master Yun Gu]: I thought you were someone of remarkable capabilities! Now I realize you are nothing but a common mundane person! 【了凡】：問其故。曰。【我聽了之後不明白，便請問他此話怎講？雲谷禪師說道：】 [Liao-Fan]: Feeling confused by what he said, I asked the Master to explain. He answered: 【雲谷大師】：人未能無心。終為陰陽所縛。安得無數。但惟凡人有數。極善之人。數固拘他不定。極惡人之數亦拘他不定。汝二十年來。被他算定。不曾轉動一毫。豈非是凡夫。 【一個平常人，不能說沒有胡思亂想的那顆意識心；既然有這一顆一刻不停的妄心在，那就要被陰陽氣數束縛了；既被陰陽氣數束縛，怎麼可說沒有數呢？雖說數一定有，但是只有平常人，纔會被數所束縛住。若是一個極善的人，數就拘他不住了。 因為極善的人，儘管本來他的命數裏註定吃苦；但是他做了極大的善事，這大善事的力量，就可以使他苦變成樂，貧賤短命，變成富貴長壽。 而極惡的人，數也拘他不住。因為極惡的人，儘管他本來命中註定要享福，但是他如果做了極大的惡事，這大惡事的力量，就可以使福變成禍，富貴長壽變成為貧賤短命。 你二十年來的命都被孔先生算定了，不曾把數轉動一分一毫，反而被數把你給拘住了。一個人會被數拘住，就是凡夫，這樣看來，你不是凡夫，是什麼呢？】 [Master Yun Gu]: An average person’s mind is forever occupied by his wandering and imaginary thoughts, so naturally their lives are bound by the chi of ying-yang and fate. We cannot deny the fact that fate exists, but only ordinary people are bound by it. Fate cannot bind those who cultivate great kindness, because their virtues accrued from kind acts are so great that these acts will alter their ‘original’ destiny for the better. The merits accrued can actually change their destiny from suffering to happiness, poverty to prosperity, and short lives to longevity. Similarly, fate cannot bind those who commit great evils. When a person’s evil deeds are so great and powerful, they will cancel out the fortune and prosperity predetermined in his original fate, and his life can be transformed from good to bad. For the past twenty years, you have lived your life according to Mr. Kong’s predictions and did not do a thing to change it. Instead, you became bound by your own fate. If you’re not considered as a mundane mortal, then who is? 【了凡】：余問曰。然則數可逃乎。曰。【我問雲谷禪師說：照你說來，究竟這個數，可以逃得過去麼？禪師說：】 [Liao-Fan]: Taken aback, I proceeded to ask Master Yun Gu, “According to you then, is it true that one can change one’s fate, that one can escape from it?” The Master answered: 【雲谷大師】：命由我作。福自己求。詩書所稱。的為明訓。我教典中說。求富貴得富貴。求男女得男女。求長壽得長壽。夫妄語乃釋迦大戒。諸佛菩薩。豈誑語欺人。【命由我自己造，福由我自己求；我造惡就自然折福；我修善，就自然得福。從前各種詩書中所說，實在是的的確確，明明白白的好教訓。我們佛經裏說：一個人要求富貴就得富貴，要求兒女就得兒女，要求長壽就得長壽。 只要做善事，命就拘他不住了。因為說謊是佛家的大戒，那有佛菩薩還會亂說假話，欺騙人的呢？】 [Master Yun Gu]: Fate is created by ourselves. Good fortune or bad fortune are also determined by ourselves. When I commit evil, disasters are bound to strike. When I cultivate kindness, good fortune will naturally come my way. It says so in all the great ancient books of wisdom. In the Buddhist teachings, it is written that if one wishes and seeks wealth, position, a son, a daughter, or longevity, one can attain them. One only has to cultivate kind deeds in order to escape the control of fate. Since untruthful speech is one of the greatest offenses in Buddhist teachings, we can be assured that these are not lies. Buddhas and Bodhisattvas certainly have no reasons to deceive us. 【了凡】：余進曰。孟子言。求則得之。是求在我者也。道德仁義。可以力求。功名富貴。如何求得。 雲谷曰。【我聽了以後，心裡還是不明白，又進一步問說；孟子曾說：凡是求起來，就可以得到的，這是說在我心裏可以做得到的事情。 若是不在我心裡的事，那麼怎能一定求得到呢？譬如說道德仁義，那全是在我心裏的，我立志要做一個有道德仁義的人，自然我就成為一個有道德仁義的人，這是我可以盡力去求的。若是功名富貴，那是不在我心裏頭的，是在我身外的，要別人肯給我，我才可以得到。倘若旁人不肯給我，我就沒法子得到，那麼我要怎樣才可以求到呢？】 [Liao-Fan]: I did not quite understand what he meant by ‘attaining all that one wished for’, and so I asked him, &quot;Mencius once said, ‘Whatever is sought for can be attained. The seeking is in oneself.’ This refers to inner qualities such as virtue, kindness, and morality. These are all qualities one can work towards. However, when it comes to outside factors such as wealth, fame, and prestige, how can we seek and attain them? Don’t these have to be granted by others in order to be achieved? The Master replied: 【雲谷大師】：孟子之言不錯。汝自錯解了。汝不見六祖說。一切福田不離方寸。從心而覓。感無不通。求在我。不獨得道德仁義。亦得功名富貴。內外雙得。是求有益於得也。【雲谷禪師說：孟子的話不錯，但是你解釋錯了。你沒看見六祖慧能大師說：所有各種的福田，都決定在各人的心裏。福離不開心，心外沒有福田可尋，所以種福種禍，全在自己的內心。只要從心裏去求福，沒有感應不到的！ 能向自己心裏去求，那就不只是心內的道德仁義，可以求得，就是身外的功名富貴，也可以求到，所以叫做內外雙得。換句話說，為了種福田而求仁求義，求福，求祿，是必有所得的。 一個人命裏若有功名富貴，就是不求，也會得到；若是命裏沒有功名富貴，就算是用盡了方法，也求不到的。】 [Master Yun Gu]: Mencius was correct, but you misinterpreted his meaning. Hui- Neng, the Sixth Patriarch of the Zen school has taught that all the fields of merit are within one’s own heart. If one seeks from within, one can be in touch with all fortunes and disasters. The outside is merely a reflection of the inside. By seeking within ourselves, we can not only attain the inner qualities of virtue, kindness, and morality, but we can also attain wealth, fame, and prestige. [Narrator]: If wealth, fame, and prestige are embodied in one’s fate, then one will attain them even without having to seek. If they are not, then one cannot attain them even through plotting and scheming. 【雲谷大師】：若不返躬內省。而徒向外馳求。則求之有道。而得之有命矣。內外雙失。故無益。 【所以一個人，若不能自己檢討反省，而只是盲目地向外面追求名利福壽；但得到得不到，還是聽天由命，自己毫無把握。這就合了孟子所說，求之有道，得之有命的兩句話了。 要知道縱然得到，究竟還是命裏本來就有的，並不是自己求的效驗，所以可以求到的，纔去求，求不到的，就不必去亂求。 倘若你一定要求，那不但身外的功名富貴求不到，而且因為過份的亂求，過份的貪得，為求而不擇手段，那就把心裏本來有的道德仁義，也都失掉了，那豈不是內外雙失麼？所以亂求是毫無益處的。】 [Master Yun Gu]: Therefore, if one cannot reflect within his own heart but instead blindly seeks fame, fortune, and longevity from external sources, then this seeking will be in vain. Just as Mencius once said: ‘In seeking, one should follow the right path. In attaining, one attains what one’s destiny entitles him to.’ Whatever is attained in the end is still part of one’s own fate. If one tries to seek these qualities from the outside, and even goes to the extent of committing evil deeds for them, then one will not only lose one’s inner qualities of virtue and kindness, but predetermined fortune as well. Furthermore, evils committed in one’s greedy mind to obtain more will often reduce the fortune of one’s original fate. From this we can see that no benefit is derived from blind seeking. 【了凡】：因問。 【雲谷禪師接著再問我說：】 [Liao-Fan]: Master Yun Gu continued to ask: 【雲谷大師】：孔公算汝終身若何。 【孔先生算你終身的命運如何？】[Master Yun Gu]: What were Mr. Kung’s predictions regarding your entire life? 【了凡】：余以實告。 【我就把孔先生算我，某年考的怎麼樣，某年有官做，幾歲就要死的話詳詳細細的告訴他。】[Liao-Fan]: I told him in great detail, from the placement positions in the examinations, to my appointment as an official, and finally, the date of my death. 【雲谷大師】：雲谷曰。汝自揣應得科第否。應生子否。 【雲谷禪師說：你自己想想，你應該考得功名麼？應該有兒子麼？】 [Master Yun Gu]: Do you feel you deserve imperial appointments or a son? 【了凡】：余追省良久。曰。不應也。科第中人。類有福相。余福薄。又不能積功累行以基厚福。兼不耐煩劇。不能容人。時或以才智蓋人。直心直行。輕言妄談。凡此皆薄福之相也。豈宜科第哉。（「直心直行」：在此不是 ”直心是道場” 的意思） 【我反省過去所作所為，想了很久才說：我不應該考得功名，也不應該有兒子。因為有功名的人，大多有福相。 我的相薄，所以福也薄。又不能積功德積善行，成立厚福的根基。並且我不能忍耐，擔當瑣碎繁重的事情。別人有些不對的地方，也不能包容。因為我的性情急燥，肚量窄小。有時候我還自尊自大，把自己的才幹、智力、去蓋過別人。心裏想怎樣就怎麼做，隨便亂談亂講。像這樣種種舉動，都是薄福的相，怎麼能考得功名呢！】 [Liao-Fan]: I reflected upon my previous deeds and attitudes in the past for a long time. Then I answered him saying, &quot;No, I do not feel I deserve an imperial appointment or a son. Those who receive imperial appointments all have the appearance of good fortune, and I do not. I do not work towards accumulating virtues to build up my fortune, either. I am very impatient, intolerant, undisciplined, and speak without any restraint. I also have a strong sense of pride and arrogance. These are all signs of scant fortune and non-virtue. How is it possible for me to receive an imperial appointment? 【旁白】：地之穢者多生物。水之清者常無魚。 【喜歡乾淨，本是好事；但是不可過分，過分就成怪脾氣了。所以說越是不清潔的地方，越會多生出東西來。相反地，很清潔的水反而養不住魚。】 [Narrator]: Next we will see why Liao-Fan has no children. Liking cleanliness is a good thing, but it can become a personality problem if one gets too immaculate. There is an old saying, ‘life springs from the dirt of the earth, and water too clean often harbors no fish.’ 【了凡】：余好潔。宜無子者一。和氣能育萬物。余善怒。宜無子者二。愛為生生之本。忍為不育之根。余矜惜名節。常不能舍己救人。宜無子者三。多言耗氣。宜無子者四。喜飲鑠精。宜無子者五。好徹夜長坐。而不知葆元毓神。宜無子者六。其餘過惡尚多。不能悉數。 雲谷曰。（「愛」：慈愛、仁愛。「忍」：殘忍。「矜」：愛惜。「飲」：喝酒。「鑠」：消滅。「葆元」：保養元氣。「毓」：育、長養） 【我過分地喜歡清潔，就變得不近人情，這是我沒有兒子的第一種緣故。 天地間，要靠溫和的日光，和風細雨的滋潤，纔能生長萬物。我常常生氣發火，沒有一點和育之氣，怎麼會生兒子呢？這是我沒有兒子的第二種緣故。 仁愛，是生生的根本，若是心懷殘忍，沒有慈悲；就像果子一樣，沒有果仁，怎麼會長出果樹呢？所以說，忍是不會生養的根；我只知道愛惜自己的名節，不肯犧牲自己，去成全別人，積些功德，這是我沒有兒子的第三種緣故。 說話太多容易傷氣，我又多話，傷了氣，因此身體很不好，那裏會有兒子呢？這是我沒有兒子的第四種緣故。 人全靠精氣神三種才能活命；我愛喝酒，酒又容易消散精神；一個人精力不足，就算生了兒子，也是不長壽的，這是我沒有兒子的第五種緣故。 一個人白天不該睡覺，晚上又不該不睡覺；我常喜歡整夜長坐，不肯睡，不曉得保養元氣精神，這是我沒有兒子的第六種緣故。其它還有許多的過失，說也說不完呢！雲谷禪師說：】 [Liao-Fan]: The first reason why I feel I do not deserve a son is because I am addicted to cleanliness, resulting in the lack of thoughtfulness for others. The second reason is that ‘harmony is the cultivator of all life’, but I have a quick temper and easily become angry. The third reason is based on the principle that ‘Loving kindness is the basis of reproduction, and harshness is the root of sterility’, I overly guard my own reputation and cannot sacrifice anything for the sake of others. The fourth reason is that I talk too much which wastes a lot of chi, or energy. The fifth reason is that I also delight in drinking alcohol, and that depletes my spirit. To remain healthy, one must not sleep during the daytime and stay up through the nights. The sixth reason I do not have a son is my habit of staying up nights, not knowing how to conserve my energy. Aside from these, I have many, many, other faults which are too numerous to mention. Master Yun Gu then said: 【雲谷大師】：豈惟科第哉。世間享千金之產者。定是千金人物。享百金之產者。定是百金人物。應餓死者。定是餓死人物。天不過因材而篤。幾曾加纖毫意思。【只是功名不應該得到，恐怕不應該得的事情，還多著哩！ 當知有福沒福，都是由心造的。有智慧的人，曉得這都是自作自受；糊塗的人，就都推到命運頭上去了。 譬如這個世上能夠擁有千金產業的，一定是享有千金福報的人；能夠擁有一百金產業的，一定是享有一百金福報的人；應該餓死的，一定是應該受餓死報應的人。比如說善人積德，上天就加多他應受的福。惡人造孽，上天就加多他應得的禍。上天不過就他本來的質地上，加重一些罷了，並沒有一絲毫別的意思。 接下來這段是雲谷禪師借俗人之見，來勸了凡先生努力積德行善。】 [Master Yun Gu]: According to you then, there are too many things in life you do not deserve, not only fame and a son! We should know that both good and bad fortune are all formed from one’s heart; a wise person knows that everything one achieves or fails at in life are only consequences of their own actions and thoughts. Only a fool assumes that all is the work of fate and destiny! We must understand that those who have thousands of dollars in this life must have cultivated the fortune worthy of that amount in the past. Those who have hundreds of dollars must also have fortune which is worthy of containing that sum. Those whose fate is to die of starvation, in fact were meant to die in that manner. We must understand that the fate of these people was created by their own past thoughts and actions; the retribution today is simply the fruit of their deeds. Heaven does nothing more than punish evil beings with the suffering they deserve, and reward kind ones with the fortune they deserve. [Narrator]: The following section is Master Yun Gu’s advice to Liao-Fan, using the views of worldly folk, persuading him to cultivate virtue. 【雲谷大師】：即如生子。有百世之德者。定有百世子孫保之。有十世之德者。定有十世子孫保之。有三世二世之德者。定有三世二世子孫保之。其斬焉無後者。德至薄也。（「斬」：斷絕） 【就像生兒子，也是看下的種怎樣，種下的很厚，結的果也厚。種下得薄，結的也薄。譬如一個人，積了一百代的功德，就一定有一百代的子孫，來保住他的福。積了十代的功德，就一定有十代的子孫，來保住他的福。積了三代或者兩代的功德，就一定有三代或者兩代的子孫，來保住他的福。至於那些只享了一代的福，到了下一代，就絕後的人；那是他功德極薄的緣故，恐怕他的罪孽，還積得不少哩！】 [Master Yun Gu]: Bearing children is similar to bearing fruit from seeds; if the seeds are planted well, so will the fruits they bear. If the seeds are not planted well, then the fruits will become malnourished. For example, if a person has accumulated enough merit and virtue for a hundred generations, then he or she will have descendants to last a hundred generations. One who accumulates enough merit and virtue to last ten generations will then have ten generations of descendants to live out that fortune. The same goes for three generations or two generations. For those who have no descendants at all, it is because they have not accumulated enough good merit and virtue - they may have amassed sins instead! 【雲谷大師】：汝今既知非。將向來不發科第。及不生子相。盡情改刷。務要積德。務要包荒。務要和愛。務要惜精神。從前種種譬如昨日死。從後種種譬如今日生。此義理再生之身也。 夫血肉之身。尚然有數。義理之身。豈不能格天。太甲曰。（「包荒」：出自易經泰卦，包容荒穢（例如旁人之壞處），包容一切。「格」：感動。「太甲」：書經的第一篇名目。） 【你既然知道自己的短處，那就應該把你一向不能得到功名，和沒有兒子的種種福薄之相，盡心盡力改得乾乾淨淨。一定要積德，一定要對人和氣慈悲，一定要替人包含一切，而且要愛惜自己的精神。 從前的一切一切，譬如昨日，已經死了；以後的一切一切，譬如今日，剛剛出生；能夠做到這樣，就是你重新再生了一個義理道德的生命了。我們這個血肉之軀，尚且還有一定的的數；而義理的、道德的生命，那有不能感動上天的道理？書經太甲篇上面說道：】 [Master Yun Gu]: Now that you recognize your own shortcomings, you can work to change and reform the misdeeds which cause you to not have a son or become an imperial official. You must cultivate virtue, tolerance, and treat others with compassion and harmony. You must also care for your health and conserve your energy and spirit. Live as though everything of the past dissolved yesterday, and all of the future begins today. If you can accomplish this, then you are a person born anew. If even our physical body is governed by the law of fate, then how can a mind of virtue and discipline not evoke a response from heaven? As said in the Tai Ja Chapter in the Chinese Book of History, 天作孽。猶可違。自作孽。不可活。 【上天降給你的災害，或者可以避開；而自己若是做了孽，就要受到報應，不能愉快心安地活在世間上了。】 [Narrator]: ‘One may run from the decrees of heaven, but one can never escape the retribution for one’s own evil deeds’. In other words, one can alter the retribution due from past deeds, but if one continues to behave immorally, then there is no chance of avoiding disaster. 1【雲谷大師】：詩云。 【詩經上也講：】 [Master Yun Gu]: It is also said in the Book of Poems, 永言配命。自求多福。（「永」：永遠、時常。「言」：想到。「配」：合。「命」：天道） 【人應該時常想到自己的所作所為，合不合天道。很多福報，不用求，自然就會有了。因此，求禍求福，全在自己。】 [Narrator]: ‘A person should often reflect upon his own thoughts and actions, to see if they accord with the ways of heaven. If one practices such, then fortune will come without being sought. The choice to seek either good fortune or to bring about adversity is all up to you.’ 【雲谷大師】：孔先生算汝不登科第。不生子者。此天作之孽。猶可得而違。汝今擴充德性。力行善事。多積陰德。此自己所作之福也。安得而不受享乎。 易為君子謀趨吉避凶。若言天命有常。吉何可趨。凶何可避。開章第一義便說。 【孔先生算你，不得功名，命中無子，雖然說是上天註定，但是還是可以改變。你只要將本來就有的道德天性，擴充起來，盡量多做一些善事，多積一些陰德，這是你自己所造的福，別人要搶也搶不去，那有可能享受不到呢？ 易經上也有為一些宅心仁厚、有道德的人打算，要往吉祥的那一方去，要避開凶險的人，凶險的事，凶險的地方。 如果說命運是一定不能改變的，那末吉祥又何處可以趨，凶險又那裡可以避免呢？易經開頭第一章就說：】 [Master Yun Gu]: Mr. Kong had predicted that you will not receive an imperial appointment or have a son. We can think of these as the decrees of heaven, but even that can still be changed. You only need to reform your ill ways, practice kind deeds and work to accumulate merit and virtue. These are your own transactions to create fortune, no one can take it away. How is it then possible that you will not get to enjoy it? The I Ching, Book of Change, was written to help kind people bring about good fortune and avoid adversity. If everything is predestined with no room for change, how can we improve upon our fortune and avoid adversity? The very first chapter of I Ching also said, 積善之家。必有餘慶。汝信得及否。（「積善之家。必有餘慶。」：這在易經第一章講乾坤二卦的坤卦中提及） 【經常行善的家庭，必定會有多餘的福報，傳給子孫；這個道理，你真的能夠相信嗎？】 [Narrator]: ‘families who often perform kind deeds will have an excess of good fortune to pass onto the next generations.’ Do you believe in this? 【了凡】：余信其言。拜而受教。因將往日之罪。佛前盡情發露。為疏一通。先求登科。誓行善事三千條。以報天地祖宗之德。 雲谷出功過格示余。令所行之事。逐日登記。善則記數。惡則退除。且教持準提咒。以期必驗。（「發露」：無隱瞞，全說出。「疏」：一篇文字） 【我相信雲谷禪師的話，並且向他拜謝，接受他的指教；同時把從前所做的錯事，所犯的罪惡，不論大小輕重，到佛前去，全部說出來；並且做了一篇文字，先祈求能得到功名，還發誓要做三千件的善事，來報答天地祖先生我的大恩大德。雲谷禪師聽我立誓要做三千件的善事，就拿了功過格給我看。叫我照著功過格所訂的方法去做，所做的事，不論是善是惡，每天都要記在功過格上，善的事情就記在功格下面，惡的事情就記在過格下面。 不過做了惡事，還要看惡事的大小，把已經記的功來減除。並且還教我唸準提咒，更加上了一重佛的力量，希望我所求的事，一定會有效應。】 [Liao-Fan]: I understood and believed in the Master, and paid my respects to him in gratitude. Then I began to repent of all my past wrongdoings, whether large or small, in front of the Buddha image. I wrote down my wish to pass the imperial examinations, and vowed to complete three thousand meritorious deeds to show my gratitude towards heaven, earth, and ancestors. Upon hearing my vow, Master Yun Gu showed me a chart, and taught me how to keep a daily record of the kind and evil acts I committed . He told me that bad deeds could neutralize the merits I accrue from good deeds. The Master also taught me how to recite the Jwun Ti Mantra; it is a way to train my mind for single- minded concentration. Only with a pure and unscattered mind could what I seek for come true. Master Yun Gu then said: 【雲谷大師】：語余曰。符籙家有云。不會書符。被鬼神笑。此有秘傳。只是不動念也。執筆書符。先把萬緣放下。一塵不起。從此念頭不動處。下一點。謂之混沌開基。由此而一筆揮成。更無思慮。此符便靈。凡祈天立命。都要從無思無慮處感格。（「籙」：一種圖，同符差不多。） 【雲谷禪師又對我說：有一種畫符篠的專家曾說：一個人如果不會畫符，是會被鬼神恥笑的。 畫符有一種秘密的方法傳下來，只是不動念頭罷了。當執筆畫符的時候，不但不可以有不正的念頭，就是正當的念頭，也要一齊放下。把心打掃得乾乾淨淨，沒有一絲雜念，因為有了一絲的念頭，心就不清淨了。到了念頭不動，用筆在紙上點一點，這一點就叫混沌開基，因為完整的一道符，都是從這一點開始畫起，所以這一點是符的根基所在。 從這一點開始一直到畫完整個符，若沒起一些別的念頭，那麼這道符，就很靈驗。不但畫符不可夾雜念頭，凡是禱告上天，或者是改變命運，都要從沒有妄念上去用工夫，這樣纔能感動上天。】 [Master Yun Gu]: You can also learn the proper way to practice the art of written mantras. It is said, “Those who practice the art but do not know the right way to do it will be laughed at by gods and spirits.” The secret behind writing mantras is the absence of thought from start to finish. In the process of drawing, one must not give rise to a single improper thought; even kind thoughts have to be let go of. Only under these circumstances can a mantra be successful. When one prays or seeks something in terms of changing fate, it is important that one does it when the mind is still. In this way, wishes will be easily fulfilled. 【雲谷大師】：孟子論立命之學。而曰夭壽不貳。夫夭與壽。至貳者也。當其不動念時。孰為夭。孰為壽。細分之。豐歉不貳。然後可立貧富之命。 【孟子講立命的道理說道：短命和長壽沒有分別。乍聽之下會覺得奇怪？因為短命和長壽相反，而且完全不同，怎樣說是一樣呢？要曉得在一個妄念都完全沒有時，就如同嬰兒在胎跑裏面的時候，那曉得短命和長壽的分別呢？ 等到出了娘胎，漸漸有了知識，有了分別的心；這時，前生所造的種種善業惡業，都要受報應了，那也就有短命和長壽的分別了。 因此，命運是自己造的。如果把立命這兩個字細分來講，那末富和貧要看得沒有兩樣，不可以富的仗著有錢有勢，隨便亂來，窮的也不可以自暴自棄去做壞事，儘管窮，仍然應該安分守己的做好人；能夠這樣，纔可以把本來貧窮的命，改變成富貴的命。本來富貴的命，改變成更加富貴，或者是富貴得更長久。】 [Master Yun Gu]: Mencius stated in his Principle of Forming Destiny that there is no difference between longevity and short life. At first glance, one would find this hard to understand - how can longevity and short life be the same? In actuality, when we look within our hearts, we will find no duality, no difference. We should see everything with eyes of equality and live morally regardless of good or bad times. If one can practice accordingly, then one can master the fate of wealth and poverty. 【雲谷大師】：窮通不貳。然後可立貴賤之命。 【窮與通，要看得是沒有兩樣，不發達的人，不可因為自己不得志，就不顧一切，隨便荒唐；發達的人，也不可仗勢欺人，造種種的罪業，越是得意，越是要為善去惡，廣種福田。能夠這樣，纔可以把本來窮苦的命，改變成發達的命，本來發達的命，就會更加發達了。】 [Master Yun Gu]: Therefore, when we are able to create and form our own destiny, it does not matter whether we are presently rich or poor. Just as a wealthy man should not become careless in his thoughts and actions because he is rich, a poor man should not resort to committing evil deeds due to his poverty. In either case, one should keep to one’s place in society and be a virtuous person. If one can practice morality regardless of conditions, then he or she will surely change a poor life into a prosperous one, and a prosperous life into an even longer lasting prosperity. 【雲谷大師】：夭壽不貳。然後可立生死之命。 【短命和長壽，要看得沒有兩樣，不可說我短命；不久就死了，就趁還活著的時候，隨便做惡事，糟蹋自己。要曉得既然已生成短命，就更加應該做好人，希望來生不要再短命，這一生或許也可以把壽命延長一些哦！ 命中長壽的人，不要認為自己有得活，就拼命造孽，做奸犯科，犯邪淫。要曉得長壽得來不易，更應該做好人，才可以保住他的長壽呀。能夠明白這種道理，才可以把本來短的命變成長壽，本來長壽的命，更加長壽健康。】 [Master Yun Gu]: One should also look upon long life and short life equally. A person who knows he is short-lived should not think, ‘I’m going to die soon anyway, so there’s no point in being virtuous, I should steal and kill for my benefit while I can.’ Instead, one who already knows he has a short life to live should be even more diligent in cultivating kindness, hoping to gain a longer life next time, and perhaps his or her merits from practicing kindness can even elongate the present life. One who is long-lived should not think, ‘I have all the time in the world, it doesn’t matter if I do some evil once in while.’ We should know that longevity does not come easily, and should be cherished and used to cultivate even more kindness and virtue. Otherwise, you may very well use up your longevity all too soon. If you understand this principle, then you will be able to change a short life into a long life through virtuous behavior. 【雲谷大師】：人生世間。惟死生為重。夭壽則一切順逆皆該之矣。 【人生在這個世界上，只有這生與死的關係最為重大，所以短命同了長壽，就是最重大的事情。既然說到這最重大的短命同了長壽，那末此外一切順境，富有和發達；逆境，貧窮和不發達，都可以包括在內了。】 [Master Yun Gu]: The issue of life and death is the most critical issue of one’s life. Therefore, long life and short life is also the most important issue to us. The same applies to wealth and poverty, low and high prestige. These are all encompassed by the issue of long life and short life. That is why Mencius did not need to mention the latter in his principle of creating destiny, since he had already spoken about long and short life. 【雲谷大師】：至修身以俟之。乃積德祈天之事。曰修。則身有過惡。皆當治而去之。曰俟。則一毫覬覦。一毫將迎。皆當斬絕之矣。到此地位。直造先天之境。即此便是實學。（「俟」：等候。「覬覦」：非份的希望） 【孟子講立命的學問，祇講到短命和長壽，並沒講到富和貧，發達和不發達，就是這個道理。 接著雲谷禪師又告訴我說：孟子所說的『修身以俟之』這句話，是說：自己要時時刻刻修養德行，不要做半點過失罪惡。至於命能不能改變，那是積德的事，求天的事。 說到修字，那麼身上有一些些過失罪惡，就應該像治病一樣，把過失罪惡要完全去掉。講到俟，要等到修的功夫深了，命自然就會變好，不可以有一絲一毫的非份之想，也不可以讓心裏的念頭亂起亂滅，都要完全把它斬掉斷絕，能夠做到這種地步，已經是達到先天不動念頭的境界了。到了這種功夫，那就是世間受用的真正學問。 雲谷禪師接著又說：平常時一般人的行為，都是根據念頭轉的，凡是有心而為的事，不能算是自然，不著痕跡。】 [Liao-Fan]: Master Yun Gu then told me about Mencius’s teaching on cultivating the self. He said that one who wishes to cultivate himself must do so day by day, and be mindful of his conduct every moment, ensuring that no transgressions are made. As for changing one’s destiny, that depends on the accumulation of merit, seeking for a response from the heavens. When cultivating the self, one should be aware of one’s own faults, and resolve to correct them just as in curing a sickness. Perseverance is required, and attainment comes when one’s practice matures and ripens. In that case, one’s destiny will most definitely change for the better. We should work toward severing all bad habits and thoughts. It would be quite an accomplishment for the true benefits of these teachings to be felt once you reach the state of ‘no thought’. 【雲谷大師】：汝未能無心。但能持準提咒。無記無數。不令間斷。持得純熟。於持中不持。於不持中持。到得念頭不動。則靈驗矣。 【你現在還不能做到不動心的境界，你若能念準提咒，不必用心去記或數遍數，只要一直念下去，不要間斷。念到極熟的時候，自然就會口裡在念，自己不覺得在念，這叫做持中不持；在不念的時候，心裡不覺的仍在念，這叫做不持中持；念咒能念到這樣，那就我、咒、念打成了一片，自然不會有雜念進來，那末念的咒，也就沒有不靈驗的了。但是這種功夫，一定要透過實踐，才能領會到的。】 [Master Yun Gu]: The actions of worldly people usually follow their thoughts. Whatever has to be ‘thought’ is not considered natural. I know that you are still unable to accomplish the state of ‘no thought’, but if you practice reciting the Jwun Ti Mantra continuously, it will help you to overcome scattered thoughts in the mind. When you recite, you must not think of reciting, but recite consciously and diligently without any attachment. When the reciting becomes second nature to you, it will be efficacious [Narrator]: But the essence of this practice can only be understood after you practice it. 【了凡】：余初號學海。是日改號了凡。蓋悟立命之說。而不欲落凡夫窠臼也。（「窠臼」：比喻老套子、老格式（說明：打米的臼，每個都長一樣）） 【我起初的號叫做學海，但是自從那一天起就改號叫做了凡；因為我明白立命的道理，不願意和凡夫一樣。把凡夫的見解，完全掃光，所以叫做了凡。】 [Liao-Fan]: My name used to be Shuei Hai, which meant ‘broad learning’, but after receiving these teachings from Master Yun Gu, I changed it to Liao Fan, which means ‘transcending the mundane’. It signified my understanding of the fact that destiny is created by ourselves, and I did not wish to be like worldly people, who allowed destiny to control them. 【了凡】：從此而後。終日兢兢。便覺與前不同。前日只是悠悠放任。到此自有戰兢惕厲景象。在暗室屋漏中。常恐得罪天地鬼神。遇人憎我毀我。自能恬然容受。 【從此以後，就整天小心謹慎，自己也覺得和從前大不相同。從前儘是糊塗隨便，無拘無束；到了現在，自然有一種小心謹慎，戰戰兢兢戒慎恭敬的景象。 雖然是在暗室無人的地方，也常恐怕得罪天地鬼神。碰到討厭我，毀謗我的，我也能夠安然的接受，不與旁人計較爭論了。】 [Liao-Fan]: From then on, I began to be constantly aware of my thoughts and actions, and I was very cautious and careful in whatever I did. Soon I felt quite different from before. In the past, I used to be careless and lived my days in distraction, and had no self-discipline at all. Now, I found myself being naturally respectful, careful and conservative in my thoughts, speech, and actions. I maintain this attitude even when I’m alone, for I know that there are spirits and gods everywhere who can see my every action and thought. Even when I encounter people who dislike or slander me, I can take their insults with a patient and peaceful mind, and not feel compelled to quarrel with them. 【了凡】：到明年。禮部考科舉。孔先生算該第三。忽考第一。其言不驗。而秋闈中式矣。（「禮部考科舉」：在明朝，秀才貢生還想再考舉人，必須去參加鄉試，且在考鄉試之前，必須先去禮部（六部之一，相當現在教育部）通過一次考試，這考試就叫考科舉。「秋闈中式」：鄉試考場叫秋闈（考試在秋天八月舉行），中式即考中，合起來即中了舉人） 【從我見了雲谷禪師的第二年，到禮部去考科舉。孔先生算我的命，應該考第三名，那知道忽然考了第一名，孔先生的話開始不靈了。孔先生沒算我會考中舉人，那知道到了秋天鄉試，我竟然考中了舉人，這都不是我命裡註定的，雲谷禪師說：命運是可以改造的。這話我更加地相信了。】 [Liao-Fan]: The year after I met Master Yun Gu, I took the preliminary imperial exam in which Mr. Kong had predicted I would come in third place. Amazingly, I came in first! Mr. Kong’s predictions were beginning to lose their accuracy. He had not predicted I would pass the imperial exam at all, but that autumn, I did! None of these were part of my original destiny. Master Yun Gu had said that destiny could be changed, and now I believe it more than ever! 【了凡】：然行義未純。檢身多誤。或見善而行之不勇。或救人而心常自疑。或身勉為善而口有過言。或醒時操持而醉後放逸。以過折功。日常虛度。自己巳歲發願。直至己卯歲。歷十餘年。而三千善行始完。 【我雖然把過失改了許多，但是碰到應該做的事情，還是不能一心一意的去做，即使做了，依然覺得有些勉強，不太自然。自己檢點反省，覺得過失仍然很多。 例如看見善，雖然肯做；但是還不能夠大膽地向前拼命去做。或者是遇到救人時，心裡面常懷疑惑，沒有堅定的心去救人。自己雖然勉強做善事，但是常說犯過失的話。有時我在清醒的時候，還能把持住自己，但是酒醉後就放肆了。雖然常做善事，積些功德；但是過失也很多，拿功來抵過，恐怕還不夠，光陰常是虛度。從己巳年聽到雲谷禪師的教訓，發願要做三千件的善事；直到己卯年，經過了十多年，才把三千件的善事做完。】 [Liao-Fan]: Although I had corrected a lot of my faults, I found that I could not wholeheartedly do the things I ought to do. Even if I did do them, it was forced and unnatural. I reflected within and found that there were still many wrongs in my being, such as seeing an opportunity to practice kindness and not being eager enough to do it; or, harboring doubts when helping others in need. Sometimes I forced myself to act kindly, but my speech was still untamed and offensive. I found I could contain myself when sober, but after a few drinks, I would lose self-discipline and act without restraint. Although I often practiced kind deeds and accumulated merits, my faults and offenses were so numerous, they seemed to outnumber my good deeds. Alot of my time was spent vainly and without value. It took me more than ten years to complete the three thousand meritorious deeds I had vowed to do. 【了凡】：時方從李漸庵入關。未及回向。庚辰南還。始請性空慧空諸上人。就東塔禪堂回向。遂起求子願。亦許行三千善事。辛巳生汝天啟。（「關」：山海關，關外即東山省） 【在那個時候，我剛和李漸庵先生，從關外回來關內，沒來得及把所做的三千件善事迴向。到了庚辰年，我從北京回到了南方，方才請了性空、慧空、兩位有道的大和尚，借東塔禪堂完成了這個迴向的心願。到這時候，我又起了求生兒子的心願，也許下了三千件善事的大願。到了辛巳年，生了你，取名叫天啟。】 [Liao-Fan]: I was not able to dedicate the merits from these three thousand kind deeds at a temple until I returned to my hometown in the south a few years later. Then I made my second wish, and that was for a son. I vowed to complete another three thousand good deeds. A few years later, your mother gave birth to you, and named you Tien-chi. 【了凡】：余行一事。隨以筆記。汝母不能書。每行一事。輒用鵝毛管。印一硃圈於曆日之上。或施食貧人。或買放生命。一日有多至十餘圈者。（「硃」：紅色硃砂） 【我每做了一件善事，隨時都用筆記下來；你母親不會寫字，每做一件善事，都用鵝毛管，印一個紅圈在日曆上，或是送食物給窮人，或買活的東西放生，都要記圈。有時一天多到十幾個紅圈呢！也就是代表一天做了十幾件善事。】 [Liao-Fan]: Every time I performed a kind deed, I would record it in a book. Your mother, who could not read or write, would use a goose feather dipped in ink and make a red circle on the calendar for every kind deed she did. Sometimes she gave food to the poor, or bought living creatures from the marketplace to free in the wild. She recorded all of these with her circles on the calendar. At times she could accumulate more than ten red circles in one day! [Narrator]: That means she performed more than ten kind deeds in a single day. 【了凡】：至癸未八月。三千之數已滿。復請性空輩。就家庭回向。九月十三日。復起求進士願。許行善事一萬條。丙戌登第。授寶坻知縣。 余置空格一冊。名曰治心編。 【像這樣到了癸未年的八月，三千條善事的願，方纔做滿。又請了性空和尚等，在家裡做迴向。到那年的九月十三日，又起求中進士的願，並且許下了做一萬條善事的大願。到了丙戌年，居然中了進士，吏部就補了我寶坻縣縣長的缺。我做寶坻縣的縣長時，準備了一本有空格的小冊子，這本小冊子，我叫它作治心篇。意思就是恐怕自己心起邪思歪念，因此，叫「治心」二字。】 [Liao-Fan]: Everyday we practiced like this, and in four years, the three thousand deeds were completed. Once again I made the dedications, this time in our home. On September 13th of that same year, I made my third wish, and that was to pass the next level in the imperial exam, the jin-shr level. I also vowed to complete ten thousand meritorious deeds. After three years, I attained my wish and passed the jin-shr level. I was also made the mayor of Bao-di prefecture. While in that office, I prepared a small booklet to record my merits and faults, and called it the Book of Disciplining the Mind. [Narrator]: The book was called Disciplining the Mind in hopes of helping him avoid selfish and improper thoughts. 【了凡】：晨起坐堂。家人攜付門役。置案上。所行善惡。纖悉必記。夜則設桌於庭，效趙閱道焚香告帝。 汝母見所行不多。輒顰蹙曰。（「家人」：自己身邊的下人。「門役」：看門人。「趙閱道」：宋仁宗時的鐵面御史，死後皇帝諡法”清獻”二字，人稱”趙清獻公”。「帝」：玉皇大帝。「顰蹙」：縐緊眉頭憂愁） 【每天早晨起來，坐堂審案的時候，叫家裏人拿這本治心篇交給看門的人，放在辦公桌上。每天所做的善事惡事，雖然極小，也一定要記在治心篇上。到了晚上，在庭院中擺了桌子，換了官服，仿照宋朝的鐵面御史趙閱道，焚香禱告天帝，天天都是如此。你母親見我所做的善事不多，常常皺著眉頭向我說：】 [Liao-Fan]: From that day, I recorded all my good and bad deeds in that booklet, and kept it on my desk. Every evening, I would burn incense and make a report of my deeds to the heavens at the little altar in the garden. Once, your mother was concerned when she saw that I had not accumulated many merits and asked: 【了凡妻】：我前在家。相助為善。故三千之數得完。今許一萬。衙中無事可行。何時得圓滿乎。 【我從前在家，幫你做善事，所以你所許下三千件善事的心願，能夠做完。現在你許了做一萬件善事的心願，在衙門裏沒什麼善事可做，那要等到什麼時候，才能做完呢？】 [Mother]: In the past, I was able to help you in your accumulation of kind deeds, and we were able to complete the three thousand meritorious deeds. Now, you have made a vow to complete ten thousand kind deeds, and there are fewer opportunities to practice them here at the government residence; how long will it be before your vow can be fulfilled? 【了凡】：夜間偶夢見一神人。余言善事難完之故。神曰。 【在你母親說過這番話之後，晚上睡覺我偶然做了一個夢，看到一位天神。我就將一萬件善事不易做完的緣故，告訴了天神，天神說：】 [Liao-Fan]: That night, after your mother spoke these words, I dreamed of a heavenly being, and told him of my difficulty in completing the ten thousand kind deeds. The heavenly being said to me: 【天神】：只減糧一節。萬行俱完矣。 【「只是你當縣長減錢糧這件事，你的一萬件善事，已經足夠抵充圓滿了。」】 [Heavenly being]: When you became mayor, you reduced the taxes on the rice fields; that was a great kind deed, and that deed itself was worth ten thousand merits. Your vow is already fulfilled! 【了凡】：蓋寶坻之田。每畝二分三釐七毫。余為區處。減至一分四釐六毫。委有此事。心頗驚疑。（「區處」：分別、整理。「委」：實在） 【原來寶坻縣的田，每畝本來要收銀兩分三釐七毫，我覺得百姓錢出得太多，所以就把全縣的田清理一遍；每畝田應繳的錢糧，減到了一分四釐六毫，這件事情確實是有的；但也覺得奇怪，怎麼這事會被天神知道，並且還疑惑，只有這件事情，就可以抵得了一萬件善事呢？】 [Liao-Fan]: As it turned out, the farmers in Bao-di prefecture had to pay a very high tax, and when I came to office, I reduced the taxes on the rice fields by nearly half. But still, I felt strange… [Narrator]: How did the heavenly being know about the tax deduction? Liao-Fan still held doubts and wondered how a single deed could be worth ten thousand merits. 【了凡】：適幻余禪師自五臺來。余以夢告之。且問此事宜信否。 師曰。（「五臺」：山西五臺山，文殊菩薩道場。另加上浙江普陀山（觀音菩薩道場）、四川峨嵋山（普賢菩薩道場）、安徽九華山（地藏菩薩道場），一共是中國四大名山） 【那時候恰好幻余禪師從五台山來到寶坻，我就把夢告訴了禪師，並問禪師，這件事可以相信嗎？幻余禪師說：】 [Liao-Fan]: Coincidentally, the Zen Master Huan-yu was traveling from the Five- Plateau Mountains and stopped in Bao-di. I invited him over and told him of my dream, and asked whether it was believable. Master Huan-yu said: 【幻余禪師】：善心真切。即一行可當萬善。況合縣減糧。萬民受福乎。 【做善事要存心真誠懇切，不可虛情假意，企圖回報。那末就是只有一件善事，也可以抵得過一萬件善事了。況且你減輕全縣的錢糧，全縣的農民都得到你減稅的恩惠，千萬的人民因此減輕了重稅的痛苦，而獲福不少呢！】 [Master Huan-Yu]: When doing kind deeds, one must be true and sincere, and not seek any rewards, or act with falsity. If one does a kind deed with such a true and sincere heart, then one deed can indeed be worth the merit from ten thousand kind deeds. Besides, your act of reducing the taxes in this prefecture benefits more than ten thousand people; you have relieved the suffering of heavy taxes on all these farmers. The fortune you will gain from this act will surely be great! 【了凡】：吾即捐俸銀。請其就五臺山齋僧一萬而回向之。 【我聽了禪師的話，就立刻把我所得的俸銀薪水捐出來，請禪師在五台山替我齋僧一萬人，並且把齋僧的功德來迴向。】 [Liao-Fan]: Upon hearing his words, I was overwhelmed with gratitude and immediately gave a month’s salary for him to take back to the Five-Plateau Mountains as donation. I asked the Master to use the money to offer food for ten thousand monks and dedicate the merits for me. 【了凡】：孔公算予五十三歲有厄。余未嘗祈壽。是歲竟無恙。今六十九矣。 【孔先生算我的命，到五十三歲時，應該有災雞。我雖然沒祈天求壽，五十三歲那年，我竟然一點病痛都沒有。現在已經六十九歲了（多活了十六年）。】 [Liao-Fan]: Mr. Kong had predicted that I would die at the age of fifty-three. However, I survived that year with no illnesses though I did not ask the heavens for a longer life. Now I am sixty-nine, and I have lived sixteen more years than what was destined! 【了凡】：書曰。 【書經上說：】 [Liao-Fan]: The Chinese Book of History had said: [Narrator]: 'The way of the Heavens is undetermined, and neither is one’s destiny. It is also said that, ‘Destiny is not set, but is only created and determined by oneself.’ 【了凡】：天難諶。命靡常。又云。惟命不於常。皆非誑語。吾於是而知。凡稱禍福自己求之者。乃聖賢之言。若謂禍福惟天所命。則世俗之論矣。（「諶」：相信。「靡」：不） 【天道是不容易相信的，人的命，是沒一定的。又說：人的命沒有一定，是要靠自己創造的。 這些話，一點都不假。我由此方知，凡是講人的禍福，都是自己求來的，這些話實在是聖賢人的話；若是說禍福，都是天所註定的，那是世上庸俗的人所講的。】 [Liao-Fan]: These are all true, and I have come to understand that both fortune and adversity are all results of one’s own doings. These are truly the words of sages and saints! If one is to say that fortune and adversity are all determined by the heavens, then I would consider that person to be mundane and common. 【了凡】：汝之命。未知若何。即命當榮顯。常作落寞想。即時當順利。當作拂逆想。即眼前足食。常作貧窶想。即人相愛敬。常作恐懼想。即家世望重。常作卑下想。即學問頗優。常作淺陋想。（「拂逆」：不如意。「窶」：窮到無屋可住） 【你的命，不知究竟怎樣？就算命中應該榮華發達，還是要常常當作不得意想。就算碰到順當吉利的時候，還是要常常當作不稱心，不如意來想。就算眼前有吃有穿，還是要當作沒錢用，沒有房子住想。就算旁人喜歡你，敬重你，還是要常常小心謹慎，做恐懼想。就算你家世代有大聲名，人人都看重，還是要常常當做低微想。就算你學問高深，還是要常常當做粗淺想。這六種想法，是從反面來看問題，能夠這樣虛心，道德自然會增進，福報也自然會增加。】 [Liao-Fan]: Tien-Chi, my son, I wonder how your life will be? In any case of destiny, we should always prepare for the worst; therefore, even in times of prosperity, you must act as if you were not, and when things are going your way, you must be mindful of adversity. When you are wealthy, be mindful of poverty, and when loved and respected by all, you must remain careful and conservative. When the family is greatly respected and revered, you must carry yourself humbly, and when your learning is broad and deep, you must not display it, but keep it humbly within. [Narrator]: The six ways of contemplation mentioned above are a means to tackle the problem from its opposite side. If one can thus cultivate the mind, then virtue and morality will grow and fortune will increase on its own. 【了凡】：遠思揚祖宗之德。近思蓋父母之愆。上思報國之恩。下思造家之福。外思濟人之急。內思閑己之邪。（「愆」：過失。「閑」：防範） 【講到遠，應該要想把祖先的德氣，傳揚開來；講到近，應當想父母若有過失，要替他們遮蓋起來；這裏即是說明孟子的「父為子隱，子為父隱」的大義所在；講到向上，應該要想報答國家的恩惠；講到對下，應該要想造一家的福；說到對外，應該要想救濟別人的急難；說到對內，應該要想預防自己的邪念和邪想。這六種想法，都是從正面來肯定問題，能夠常常如此的存心，必然能成為正人君子。】 [Liao-Fan]: When mindful of the past, we should spread the virtues of our ancestors, and when mindful of the present, we should conceal the faults of our own parents. This is what Mencius said as ‘Parents caring for children and children caring for parents’. When mindful of the nation, we should think of how we can repay its kindness to us, and when mindful of the family, we should think of how to bring about good fortune. When mindful of the outside, we should think of how to help those in need around us, and when mindful of within, we should prevent wicked thoughts and improper actions from arising. [Narrator]: These six contemplations are all positive ways to cultivate good character. If one can practice accordingly, one will surely become a true gentleman. 【了凡】：務要日日知非。日日改過。一日不知非。即一日安於自是。一日無過可改。即一日無步可進。天下聰明俊秀不少。所以德不加修。業不加廣者。只為因循二字。耽閣一生。（「因循」：貪圖安逸，得過且過，不想前進） 【一個人必須要每天知道自己有過失，才能天天改過，若是一天不知道自己的過失，就一天安安逸逸的算自己沒過失。如果每天都無過可改，就是每天都沒有進步；天底下聰明俊秀的人實在不少，然而他們道德上不肯用功去修，事業不能用功去做；就只為了因循兩個字，得過且過，不想前進，所以才耽擱了他們的一生。】 [Liao-Fan]: A person must be able to detect his faults everyday in order to correct them everyday. If you are unable to detect any faults in yourself, then improvement of character is out of the question. There are many intelligent people in the world who refuse to cultivate morality and virtue, and cannot put forth diligent effort in their work. Their failures later in life are owed to a single word: Laziness. 【了凡】：雲谷禪師所授立命之說。乃至精至邃至真至正之理。其熟玩而勉行之。毋自曠也。（「邃」：深。「曠」：空） 【雲谷禪師所教立命的許多話，實在是最精，最深，最真，最正的道理，希望你要細細的研究，還要盡心盡力的去做，千萬不可把大好的光陰虛度過。】 [Liao-Fan]: The teachings which Master Yun Gu taught are truly the most worthy, deep, real, and proper teachings, and I hope you will study them closely and practice them with all your effort. You must use your time wisely and not let it slip by in vain. 当我们不是圣徒或圣人出生时，我们怎能摆脱错误？孔子曾经说过，“有过错的人不应该害怕纠正它们。” 在廖凡谈到创造命运的方法之后，他继续告诉他的儿子改革的三种方式。首先，一个人必须感到羞耻，第二个人必须知道恐惧，第三，必须有决心和勇气。如果我们注意纠正最小的错误，那么自然会避免大的错误。 How can we be free from faults when we were not born as saints or sages? Confucius once said, “One with faults should not fear to correct them.” After Liao-fan spoke of the ways to create destiny, he proceeded to tell his son about the three ways to reform. First, one must feel shame, second one must know fear, and third, one must have determination and courage. If we are mindful of correcting even the tiniest mistake, then large wrongdoings would naturally be avoided. 本书中提到的春秋时期是指一个时期 中国2000多年前这个国家经历了巨大变化和动荡的历史。 The Spring-Autumn Period mentioned throughout this book refers to a period in China’s history over 2,000 years ago when the country was undergoing great change and turmoil. 改過之法 The Second Lesson: Ways to Reform 【了凡】：春秋諸大夫。見人言動。億而談其禍福。靡不驗者。左國諸記可觀也。（「億」：猜想。「左國」：左傳、國語。「諸記」：公羊傳、穀梁傳等） 【人，既然不是生下來就是聖人，那裏能沒有過失呢？孔子說：「過則勿憚改。」只要有了過失，就不可以怕改。所以袁了凡先生在講過改造命運的道理方法後，就接著把改過的方法，詳細地說出來，教訓他的兒子袁天啟。這第二篇就是講改過的方法。小的過失，尚且要改；那末大的罪孽，自然就不會再造了。在春秋時代，當時各國的高級官吏，常常要從一個人的言語、行為、去加以判斷；就可以猜想到這個人可能遭遇到的吉凶禍福，並且沒有不靈驗的。這可以在左傳和國語這幾種書上看得到的。】 [Liao-Fan]: During the Spring-Autumn Period, China was divided into several small nations. Many prestigious advisors and counselors of these nations were able to accurately predict whether a person’s future would be good, bad, disastrous or fortunate, based on their observation of that person’s speech and behavior. These can all be seen recorded in several history books. 【了凡】：大都吉凶之兆。萌乎心而動乎四體。其過於厚者常獲福。過於薄者常近禍。俗眼多翳。謂有未定而不可測者。（「過」：偏在一邊的意思。「翳」：類似白內障） 【大凡吉祥和凶險的預兆，都在心裏發出根苗反應出來，雖然根苗是由心裏發出來的，但是會表現到全身的四肢上，譬如一個人很厚道，那麼他的全身四肢都會顯得穩重。一個人刻薄，那麼他的全身四肢都會顯得輕佻。一個人凡是偏在厚道的，一定時常得福；偏在刻薄的，一定時常近禍。一般人沒有見識，眼光像被一層膜給遮住了，甚麼都看不到；就說禍福沒有一定，而且是無法預測的。】 [Liao-Fan]: Usually, there are signs which signal impending danger or of coming good fortune. These signs are a reflection of one’s heart; though it is the heart from which thoughts arise, the body and its limbs can fully portray a person’s character. For instance, if a person is kind-hearted, then his every gesture would indicate steadiness and solidity. If a person is evil and mean, then his body and limbs would naturally portray a petty and small character. Often a person is more fortunate when he tends toward kindness and invites trouble when he tends toward meanness. Worldly people often do not see what is actually going on, as if their vision was blurred. Since they cannot see reality, they claim that fortune and disasters are unpredictable. 【了凡】：至誠合天。福之將至。觀其善而必先知之矣。禍之將至。觀其不善而必先知之矣。今欲獲福而遠禍。未論行善。先須改過。 【一個人能夠做到極誠實，毫無半點虛假，這個人的心就可以與天心相合了，因此；能夠用誠心處人處事，福禍就會自然降臨。所以觀察一個人，只要看他的行為，都是善的，就可以預知他的福，就會來了。相反的，觀察一個人，只要看他的行為，都是不善的，就可以預知他的禍，就要來了。人若是要得福，要遠離災禍；在沒有講到做善事前，先要把自己的過失改掉。 】 [Liao-Fan]: When a person is absolutely honest and truthful, his heart is in agreement with the heart of heaven. Therefore, when one can use this sincere attitude in treating people and dealing with everyday matters, good fortune will naturally follow. This means that in observing someone, we only need to pay attention to his behavior. If his behavior portrays kindness, then you will know for sure in advance that his good fortune is not far behind. On the contrary, when we see unkind behavior from a person, we will know that troubles await him. If you really want to have good fortune, and stay away from adversity, it is necessary to first reform your faults before practicing kind deeds. 【了凡】：但改過者。第一要發恥心。思古之聖賢。與我同為丈夫。彼何以百世可師。我何以一身瓦裂。耽染塵情。私行不義。謂人不知。傲然無愧。將日淪於禽獸而不自知矣。世之可羞可恥者。莫大乎此。孟子曰。（「謂人不知」：以為別人不知） 【但改過的方法，第一要發「羞恥心」。想想古時候的聖賢，和我一樣，都是男子漢、大丈夫，為什麼他們可以流芳百世，大家還要以他們做為師表榜樣；而我為什麼這一生就搞得身敗名裂呢？ 這都是因為自己過份貪圖享樂，受到種種壞環境的污染，偷偷做出種種不應該做的事，自己還以為旁人不知道，目無國法，毫無慚愧之心；就這樣天天的沉淪下去，同禽獸一樣了，自己卻還不知道。 世界上，令人可羞可恥的事情，沒有比這個更大的了。孟子說：】 [Liao-Fan]: There are three ways to reform one’s faults: First, one must feel shame. Think of all the ancient saints and sages whose names and teachings have lasted through hundreds of generations. They were people just like us, but why is my name tarnished and my reputation ruined in just one lifetime? I find that it is because I over-indulge myself in material pleasures and have been badly influenced by the polluted environment. I also secretly do many things I’m not supposed to do, and think others won’t know about it. Sometimes I disregard the nation’s laws and am not ashamed of it. Without realizing it, I stoop lower each day until I’m no different from an animal. There is nothing else in the world which calls for more shame and remorse than these behaviors. Mencius once said, 【孟子】：恥之於人大矣。以其得之則聖賢。失之則禽獸耳。 【一個人最大的，最要緊的事情就是這個恥字。為什麼呢？因為曉得這個恥字，就會把自己的過失盡量改掉，就可以成為聖賢；若不曉得這個恥字，就會放肆亂來失掉人格，便和禽獸相同了。】 [Mencius]: “Shame” is the greatest and most important word in a person’s lifetime. Why? Because one who knows shame, will put forth his best effort in reforming faults and will eventually attain sagehood or become a saint. One who cannot comprehend the word ‘shame’ will be unrestrained and immoral. This person would then be just like an animal. 【了凡】：此改過之要機也。 【這些話都是改過的真正秘訣。】 [Liao-Fan]: These are really key words to reforming your faults. 【了凡】：第二要發畏心。天地在上。鬼神難欺。吾雖過在隱微。而天地鬼神。實鑒臨之。重則降之百殃。輕則損其現福。吾何可以不懼。（「鑒」：像鏡子照） 【改過的第二個方法，是要發戒慎恐懼的心。要知道天地鬼神，都在我們的頭上。 鬼神和我們不一樣，它們什麼都看得到，所以鬼神是不容易被欺騙的。我雖然在大家看不到的地方犯錯，但是天地鬼神，實際上就像鏡子那樣的照著我，把我的過失罪惡照得清清楚楚。過失重的，就有種種的災禍，降到我的身上來；就算過失輕的，也要減損我現在的福報，我怎麼能夠不怕呢？】 [Liao-Fan]: The second way to reform is that one must know fear. What are we to fear? We must know that the heaven, earth, spirits, and gods all hover over our heads in observation. They are different from man in that they can see everything without obstruction. Therefore, it is not easy to deceive them. Even when my wrongdoings are done in a place where nobody is around to witness it, the heaven, earth, spirits and gods are just like a mirror, clearly reflecting all my faults. If my offense is serious, then all kinds of disasters will befall me; if the fault is minor, it will still deduct from my current fortune. How can I not feel fear? 【了凡】：不惟是也。閒居之地。指視昭然。吾雖掩之甚密。文之甚巧。而肺肝早露。終難自欺。被人覷破。不值一文矣。烏得不懍懍。（「指視」：十目所視、十手所指（語出大學）。「文」：掩飾。「覷」：偷看。「烏」：何、怎麼。「懍懍」：懼怕恭敬） 【不只是像前面所說的而已。就是在自己家裡空閒的地方；但神明的監察，仍然是非常的厲害，非常的清楚。 我雖然把過失遮蓋得十分秘密，掩飾得十分巧妙；但是在神明看來，我的肺肝，早被看透，馬腳全露出來了。到最後還是沒有辦法欺騙自己，若是被旁人看破，這個人就一文不值了。又怎麼可以不時常存著一顆戒慎恐懼的心呢？】 [Liao-Fan]: Every moment, even when I’m in an empty room, the spirits and gods watch over me very carefully and records everything. We can try covering up our evil doings from others, but the spirits and gods can see through to our hearts and know our every action. Ultimately, we cannot deceive ourselves. We would feel embarrassed and dishonored if others happened to see our misdeeds. Therefore, how can we not be constantly cautious of our every actions and be fearful of the consequences they might evoke? 【了凡】：不惟是也。一息尚存。彌天之惡。猶可悔改。 【這還不只像上面所說的種種呢！一個人只要一口氣還在，就算是犯下滔天的罪過，還是可以懺悔改過的。】 [Liao-Fan]: But there’s more to it! As long as a person still has one breath left, then he has the chance to repent of the most serious mistakes and offenses. 古人有一生作惡。臨死悔悟。發一善念。遂得善終者。 【古時候有個人，作了一輩子的惡事；到他快死的時候，忽然悔悟，發了一個很大的善念，就立刻得到好死。】 [Narrator]: Once, a person who behaved badly during his entire lifetime felt remorse just when he was about to die. He had realized his past mistakes and regretted all the bad things he had done. His heart came to a very kind thought, and immediately afterwards, he passed away peacefully. 【了凡】：謂一念猛厲。足以滌百年之惡也。譬如千年幽谷。一燈纔照。則千年之暗俱除。故過不論久近。惟以改為貴。 【這就是說，人若是在緊要關頭能夠轉一個非常痛切又勇猛的善念，便可以把百年所積的罪惡洗乾淨。譬如千年黑暗的山谷，只要有一盞燈照了進去；光到之處，就可以把千年來的黑暗，完全除去了。所以過失不論長久，或者是新犯的；只要能改，就是了不起。】 [Liao-Fan]: This is to say, if a person can have an overwhelming and courageous kind thought at the most important moment, then it can cleanse away hundreds of years of accumulated sins. This is just like how only one lamp is necessary to bring light into a valley that has been dark for a thousand years. Therefore, it does not matter how long one has been sinful, or if the offenses were newly made; he or she is a surpassing person as long as they are able to change! 雖然有過失只要改過就好，但是絕對不可以認為犯過可以改，就是常常犯也不要緊，這是萬萬不可以的。如果是這樣，就是有心犯過，罪就更加重了。 [Narrator]: Though we make mistakes, it is good to correct them. But don’t think it is all right for you to do bad things now because you can always repent later. This is definitely not allowed. If one commits a wrongdoing purposely, then the sin is even greater than before. 【了凡】：但塵世無常。肉身易殞。一息不屬。欲改無由矣。（「殞」：死） 【並且在這個不清淨的世間，是幻滅無常的，我們這個血肉之身，是非常容易死的；只要一口氣喘不過來，這個身體，就不是我的了；到那個時候就是想要改，也沒法子改了。並且人死了後，什麼都帶不去；只有這個孽，是一定跟去的。】 [Liao-Fan]: Besides, we are living in a tumultuous and constantly changing world. Our body, being made of flesh and blood is extremely perishable. If our next breath does not come, then this body will no longer be part of us. By then, even if we did want to reform, we would not have the chance to do so. [Narrator]: Also, when a person dies, he cannot take any worldly possessions with him; for only his karma stays with his spirit. 【了凡】：明則千百年擔負惡名。雖孝子慈孫。不能洗滌。幽則千百劫沉淪獄報。雖聖賢佛菩薩。不能援引。烏得不畏。 【因此，明的報應，在陽間你要承擔千百年的惡名；雖然你有孝順的兒子，和可愛的孫子，也不能替你洗清惡名；暗的報應，在陰間，還要千百劫的時間，沉淪在地獄受無量無邊的大苦。雖然碰到聖人，賢人，佛菩薩也不能救助你，接引你，這樣怎麼能不怕呢？】 [Liao-Fan]: Therefore, when you commit evil, your retribution in the physical world is a bad reputation and name which will last for hundreds and thousands of years. Even filial children and loving grandchildren cannot cleanse your name for you. Whereas in your afterlife, you might end up in hell suffering immeasurable pain. Even the saints, sages, Buddhas, and Bodhisattvas you may meet cannot save or help you from your consequences. So how can one not be fearful? 【了凡】：第三須發勇心。人不改過。多是因循退縮。吾須奮然振作。不用遲疑。不煩等待。小者如芒刺在肉。速與抉剔。大者如毒蛇嚙指。速與斬除。無絲毫凝滯。此風雷之所以為益也。（「抉」：挑出。「剔」：拔去。「嚙」：咬。「風雷益」：易經六十四卦之一（巽是風、震是雷，合起來即益卦），易經解釋此卦，有君子見善則遷，有過則改的話，） 【第三，一定要發一直向前的勇猛心。一個人之所以有了過失還不肯改，都是因為得過且過，不能振作奮發，墮落退後的緣故。 要知道若是要改過，一定要起勁用力，當下就改，絕對不能夠拖延疑惑，也不可以今天等明天，明天等後天，一直拖下去。小的過失，像尖刺戳在肉裏，要趕緊挑掉拔掉。大的過失，像毒蛇咬到手指頭一樣的厲害，要趕緊切掉手指頭，不可有絲毫的猶疑延遲的念頭；否則蛇毒在身中散開，人就會死。就像易經中的益卦所講，風起雷動，萬物都生長起來，利益是這樣的大。這是比喻人若能夠改過遷善，其利益是最大的。】 [Liao-Fan]: The third way to reform is: one must have determination and courage. A person who hesitates to reform his faults is one who really does not want to change, but is content with what he can get away with. His willpower may not be strong enough, making him afraid to change his wrongdoings. For a reform to take place, one must use all his efforts and resolve to change immediately. One should not doubt or wait to reform one’s faults. We should not postpone our resolve to change until tomorrow or the day after. A minor fault is like a thorn sticking into our flesh, and should be quickly removed. A big fault is like a finger bitten by a poisonous snake. We must cut off that finger without hesitation to prevent the poison from spreading and taking our life. 【了凡】：具是三心。則有過斯改。如春冰遇日。何患不消乎。（「患」：擔心） 【一個人改過，如果能具備以上所說的羞恥心，敬畏心，勇猛心這三種心，那麼就能有過立刻改了，就像春天的薄冰，碰到太陽光一樣，還怕不融化嗎？】 [Liao-Fan]: If a person can follow the three ways of shame, fear, and determination to reform, then his personality will surely be transformed. Just as a thin layer of ice is melted by the sun’s rays in springtime, one’s faults will also disappear when dealt with through these three ways. 【了凡】：然人之過。有從事上改者。有從理上改者。有從心上改者。工夫不同。效驗亦異。 【但要改過，有三種方法。一種是從事實上改，一種是從道理上改，一種是從心念上改。 因為用這三種不同的功夫，所以得到的效驗，也自然不會一樣。現在先從事實上改的這一句，來加以說明。】 [Liao-Fan]: There are also three methods of practice in helping one reform. First is changing through action; second is changing through reasoning, and third is changing from the heart. Since the methods vary, so do the results of change. [Narrator]: First let us talk about changing through action. 【了凡】：如前日殺生。今戒不殺。前日怒詈。今戒不怒。此就其事而改之者也。強制於外。其難百倍。且病根終在。東滅西生。非究竟廓然之道也。（「詈」：罵。「廓然」：徹底拔除乾淨） 【譬如前天殺了活的東西，今天起禁止不再殺了。前天發了火罵人，今天起禁止不再發火了。這種就是在事情的本身來改錯，禁止不再犯的方法。但是勉強壓住，不再犯，比自然而然的改，要難百倍。並且這犯過的病根沒有去掉，仍在心裏。雖然一時勉強壓住，終究還是要露出來的，就像東邊把它滅了，西邊又會冒出來一樣，這究竟不是徹底拔除乾淨的改過方法。】 [Liao-Fan]: For example, if I killed living beings in the past, I now vow not to kill again starting today. If I was angry and yelled at others in the past, I vow not to get angry starting today. This is how a person changes through action, and refrains from repeating a wrongdoing by vowing not to do it again. However, it is a hundred times harder if you force yourself not to do something than if you just stopped doing it naturally. If you do not uproot your faults, but merely suppress them, the faults will eventually resurface even if you have temporarily stopped doing them. Therefore, the method of changing through action cannot help you get rid of your faults permanently. 【了凡】：善改過者。未禁其事。先明其理。如過在殺生。即思曰。 【我再把從理上改過的方法加以說明；肯努力改過的人，在他沒有禁止做這件事之前，先要明白這事不能做的道理；譬如一個人，所犯的過失在殺生；那麼他先應該想到：】 [Liao-Fan]: Second, let me explain changing through reasoning. A person who tries to reform can refrain from wrongdoings by understanding the reason and principle behind why he should not do it. In the instance of killing, one can reform through contemplating: 上帝好生。物皆戀命。殺彼養己。豈能自安。且彼之殺也。既受屠割。復入鼎鑊。種種痛苦。徹入骨髓。己之養也。珍膏羅列。食過即空。疏食菜羹。儘可充腹。何必戕彼之生。損己之福哉。（「鑊」：鼎有三隻腳，鑊比鼎大，沒有腳，像現在的鍋子。「戕」：傷害。「膏」：味道厚。） 【上天有好生之德，凡是有生命的，都會愛惜生命而且怕死。殺它的生命，來養我的身體，自問心能安嗎？而且有些東西，雖已被殺，但是還沒有完全死，像魚和毛蟹之類。在半死半活的時候放進鍋子裏燒，這樣的痛苦，一直要透到骨髓裏；你看罪過不罪過呢？而供養自己，就要用各種貴重的，味道好的東西，擺滿了一桌。雖然這樣地講究，但是一經吃過，便成渣滓，什麼都沒有了。要曉得人吃蔬菜素食素湯等等，也吃得飽啊！何必一定要去傷害生命，造殺生的罪孽，減少自己的福報呢？】 [Narrator]: Loving all living things is the virtue of heaven. All living beings love life and are afraid to die. How can I be at peace with myself by taking another’s life to nurture my own? At times, animals were even cooked alive, such as fish or crabs. They may not have been completely slaughtered before going into the cooking pot. Such pain and suffering reach down into the bones, how can we be so cruel to these animals? When we eat, we use all kinds of expensive and tasty things to nourish our bodies, enough to fill the whole dinner table! But once the meal is done, even the delicacies become body waste and are excreted. The result of our killing accomplishes nothing. We can be nourished just as well by consuming vegetarian foods. Why let your stomach become a graveyard and reduce your fortune through the sin of killing? 【了凡】：又思血氣之屬。皆含靈知。既有靈知。皆我一體。縱不能躬修至德。使之尊我親我。豈可日戕物命。使之仇我憾我於無窮也。一思及此。將有對食傷心。不能下咽者矣。（「憾」：恨） 【又想，凡是有血氣有生命的東西，都有靈性知覺，既然都有靈性知覺，那麼和我都是一樣的了，就算是自己不能修到道德極高的地步，使他們都來尊重我，親近我，像古時候的聖人大舜，還在他種田的時候就有象替他犁田，鳥幫他拔草。又怎能天天傷害生命，使它們與我結仇，恨我到永無盡期呢？能想到這些，那就會面對桌上有血肉，有生命的菜餚，自然覺得傷心而不能下咽了。】 [Liao-Fan]: Think again of all the living beings with flesh and blood. Like us, they have a consciousness. We should cultivate virtue and allow these living beings to feel safe around us. How can we continue to harm their lives and make them hate us? If you think about it, you will naturally feel sorrow for these animals and be unable to swallow their flesh. 【了凡】：如前日好怒。必思曰。人有不及。情所宜矜。悖理相干。於我何與。本無可怒者。（「矜」：哀憐。「干」：冒犯） 【譬如像前天喜歡發怒，應該想到：人各有各的長處，也各有各的短處；碰到他人短處的地方，按照情理，應該要哀憐他的苦惱，原諒他的短處；若是有人不講道理冒犯了我，那是錯在他，與我有什麼關係呢？本來就沒什麼怒可以發的呀！】 [Liao-Fan]: Here’s another example of change through reasoning. One who often gets angry should stop and think of the fact that everyone has their individual strengths and weaknesses. According to my reasoning, if I touched on someone else’s weakness, I should pity him for his weaknesses and forgive his shortcomings. If someone offends me for no reason at all, then it is their problem, and that has nothing to do with me. There is no reason for me to get angry. I can also think: [Narrator]: There isn’t a right minded person who thinks he is always right, for anyone who thinks he is perfect must be a fool. There isn’t a learned person who blames another for being knowledgeable, because a truly learned person would be humble, and he will only criticize himself and treat others with tolerance. Therefore, one who complains about others is not a genuine learned person. 【了凡】：又思天下無自是之豪傑。亦無尤人之學問。行有不得。皆己之德未修。感未至也。吾悉以自反。則謗毀之來。皆磨煉玉成之地。我將歡然受賜。何怒之有。（「天下無自是之豪傑」：天下無豪傑自以為是。「無尤人之學問」：沒有學問是教人怨恨別人的） 【又想到：天下，絕對沒有自以為什麼錯都沒有的英雄豪傑，因為一個人自以為了不起，那是最笨的人。天下也絕對沒有怨恨旁人的學問；因為人若是真正有學問，就會更加謙虛；而且能嚴以責己，寬以待人，那裏會怨恨別人呢？所以怨恨別人的人，定無學問。 因此，一個人做事處處不能稱心，都是因為自己的道德沒修好，功德沒修滿，感動人的心不夠呀！應該都要反過來自我反省檢討。自己有沒有對不起他人的地方？ 能夠這樣的存心用功，那麼別人毀謗我，反而變成磨鍊我，成就我反面的教育場所了。我應該歡歡喜喜地接受別人給我的教訓、批評，還有什麼怨恨呢？】 [Liao-Fan]: Therefore, when things do not go the way we wish, it is because we haven’t cultivated our virtues and morals, and have not accumulated enough merits to move others! We should always reflect upon ourselves first and see whether we have mistreated others. If we practice thus and diligently cultivate this virtue, then adversity and slander can actually become our training ground to refine our character and to fulfill our goals. Therefore, we should be very glad to accept someone else’s criticism and teachings. What is there to be angry and complain about? 【了凡】：又聞謗而不怒。雖讒燄薰天。如舉火焚空。終將自息。聞謗而怒。雖巧心力辯。如春蠶作繭。自取纏綿。怒不惟無益。且有害也。其餘種種過惡，皆當據理思之。此理既明。過將自止。（「讒」：壞話挑撥。「纏綿」：自己縛住自己） 【還有，聽到別人說我壞話而能夠不生氣，儘管壞話說得很厲害，像火光薰天，也不過是像拿火去燒空中，虛空中無物可燒；而火卻是終歸要熄滅的。若是聽到別人說壞話，你就生氣；雖然你用盡心思，盡力去辯，結果卻像春天的蠶吐絲，把自己束縛住一樣；這就是所謂的作繭自縛，自討苦吃。所以生氣不但是無益處，並且還是有害的。 這都是說生氣的後果。至於其它種種的過失和罪惡，也都應該依道理，細細去想，像上邊所說的種種道理能夠明白，那就自然而然地不會犯過失了。】 [Liao-Fan]: Additionally, to remain unmoved by slander is like letting a torch burn itself out in space. If we hear others slandering us and try to defend ourselves, it would be like the spring silkworm spinning its own cocoon. There was an old saying which stated ‘one who ties himself in a cocoon is looking for suffering’. Therefore, no benefit but harm is derived from getting angry. There are other faults and offenses we can change along the same lines. If we can understand the reasoning behind the need for reform, we will not make the same mistakes twice. 【了凡】：何謂從心而改。過有千端。惟心所造。吾心不動。過安從生。學者於好色好名好貨好怒種種諸過。不必逐類尋求。但當一心為善。正念現前。邪念自然污染不上。如太陽當空。魍魎潛消。此精一之真傳也。（「貨」：財物。「魍魎」：妖怪。「潛」：伏住不現。「精一」：書經謂 ”唯精唯一”） 【怎樣叫做從心上改過呢？人的過失，有千千萬萬種那麼多，都是從心上造出來的，我的心不動，就什麼事情都不會造出來，那麼過失還會從何處生出來呢？凡是讀書人，或是喜歡女色，或是喜歡名聲，或是喜歡財物，或是喜歡發火；像這樣種種的過失，不必要一類一類的去尋求滅過的方法；只要一心一意地發善心，做善事，正的念頭出現在前；那末邪的念頭，自然就污染不上了。 譬如亮熱的太陽當空而照，所有的妖怪，自然會逃避消失了；這就是最精純而唯一的修心補過的真正訣竅啊！】 [Liao-Fan]: Lastly, what is meant by changing from the heart? Though a person’s faults can amount to thousands of different types, they all stem from thoughts of the mind. If my heart is still of thoughts, then actions will not arise and faults can be avoided. If your heart is rooted in vices such as desire, fame, profits, or anger, you don’t have to find ways to get rid of each fault. All you need is a sincere, kind heart and the willingness to practice kind deeds. As long as your heart is virtuous and kind, then naturally your mind will not generate any improper thoughts. 【了凡】：過由心造。亦由心改。如斬毒樹。直斷其根。奚必枝枝而伐。葉葉而摘哉。（「奚」：何） 【須知道過失全部是由這顆心造的，因此也應該由這顆心上來改；正好像斬除毒樹一樣，要斬就斬得乾淨俐落，連根鏟除，才不會再長出來；那又何必要一枝一枝的剪，一葉一葉的摘呢？】 [Liao-Fan]: All mistakes stem from the heart; therefore, one should change from the heart. It is like getting rid of a poisonous tree. If you want to put an end to it, you must uproot it altogether so it cannot grow again. Why exert yourself to no avail by pulling out its leaves one by one and cutting it twig by twig? [Liao-Fan]: The best way to reform our faults is through cultivating our hearts. If we are willing to cultivate our hearts, then it is possible to purify our faults right away. [Narrator]: This is because wrongdoings originate from the heart. Purifying the heart can erase all improper and bad thoughts before they are carried out in action. 【了凡】：大抵最上者治心。當下清淨。纔動即覺。覺之即無。苟未能然。須明理以遣之。又未能然。須隨事以禁之。以上事而兼行下功。未為失策。執下而昧上。則拙矣。（「遣」：打發他去。） 【改過最上最高的方法，還是修心。能修心，就可使心立刻清淨。因為犯過失，都是心上動了種種壞念頭的緣故。能修心，那末壞念頭一動，就自己發覺。自己能發覺，就立刻把心停往不動；心不動，那麼壞念頭便消失，也就不會再犯了。若是再不能夠這樣，那麼一定要明白，所犯過失的理由，把這種犯過的念頭去掉。若是再不能夠這樣，那麼只好碰到犯過時，用勉強壓住的方法，來禁止不犯。如果用修心的上等功夫，和明白不可犯過的道理，用打發它去的下等功夫，以及碰到犯過用強壓方法禁止的下等功夫；這上下兩等的功夫，同時用，也不一定就失算呀！若是堅持只用下等功夫，反而把修心的上等功夫忽略不用，那就是最笨不過的了。】 [Liao-Fan]: If my heart is pure, I can recognize and stop an evil thought as soon as it arises. The immoral idea will disappear the moment I lay my conscious on it. If I am unable to succeed at reforming a fault through changing the heart, then I will try at the level of understanding, knowing the reasons why I need to make the change. If I cannot succeed with this, then I will try to reform by changing through action and force the thought to dissipate. The best way is by cultivating the heart and understanding the reason behind the need to change. The alternative way is forcing ourselves not to commit the wrongdoing again. Sometimes all three methods have to be used to succeed at reforming a fault. Don’t be a fool by dismissing the best way and preferring the alternative way. 【了凡】：顧發願改過。明須良朋提醒。幽須鬼神證明。一心懺悔。晝夜不懈。經一七二七。以至一月二月三月。必有效驗。 【但是發願改過，也要有助力；明裏頭，要有真正的益友在你糊塗的時候時常來提醒你；暗裏頭，要有鬼神替你證明；（像我把自己所犯的過失，做了篇疏文，上告天地鬼神那樣。）還要一心一意的虔誠懺悔，從早到晚，從日到夜，絕不放鬆；像我這樣懺悔經過一個七天，兩個七天；直到一個月，兩個月，三個月…這樣懺悔下去，一定會有效驗的！】 [Liao-Fan]: But even when one vows to change, assistance is needed to truly reform. We will need constant reminders from true friends who are witnesses to our actions in everyday life. As for our good and bad thoughts, we can ask the spirits and gods to be our witness. I practice this by writing down all my faults and reporting them to the heavens, earth, spirits, and gods. You also need to repent sincerely and wholeheartedly from morning to evening without laxity. If one can sincerely repent from one to two weeks, then one to three months, continuing this way, then one will definitely attain results and benefits. 【了凡】：或覺心神恬曠。或覺智慧頓開。或處宂沓而觸念皆通。或遇怨仇而回瞋作喜。或夢吐黑物。或夢往聖先賢。提攜接引。或夢飛步太虛。或夢幢幡寶蓋。種種勝事。皆過消罪滅之象也。（「宂」：煩瑣細碎。「沓」：繁重囉嗦。「幢幡」：幢同了幡，都是像旗一類的東西。「蓋」：傘） 【上面所說懺悔過惡的效驗是什麼呢？譬如你或許覺得精神上很舒服，心中很寬閒；或覺得以往很笨，忽然智慧大開；或是雖然處在煩忙紛亂之際，心中仍清清朗朗，無所不通；或碰到怨家仇人，而能全把恨心火氣消除，而心生歡喜；或是在夢裏，感覺吐出黑的東西來；這是種種邪念邪思，積成的一種穢氣，夢裏吐出，那麼心地就清淨多了。或是夢到古時候的聖賢來提拔我，牽引我，或是夢見自己會飛到虛空中去，逍遙自在；或是夢見各種彩旗以及裝飾珍寶的傘蓋，這種種少有少見的事情，都是過失消除罪孽滅去的好徵兆。】 [Narrator]: What are the benefits of repentance? For one, you may feel very much at ease, and your heart will feel light and generous. A dumb person may suddenly become wise, and one can maintain a clear and relaxed mind even in a disturbing and confusing environment. One would also feel a great knowledge for everything. One would be able to drive out all hatred upon seeing an enemy and keep a happy attitude. One may dream of spitting out black things; a sign of expelling improper thoughts and negative energy, leaving the heart much cleaner and purified. One may also dream of the ancient saints or sages who have come to promote and help them, or dream of flying in space without a care in the world. One may also dream of all kinds of colorful flags and ornately decorated canopies. These unusual phenomena are all indications of a successful reform and dissolving of past offenses. 【了凡】：然不得執此自高。畫而不進。 【但是也不能因為碰到這些好徵兆。就自己以為了不起，而阻斷了再上進，再努力的途徑。】 [Liao-Fan]: However, one must not consider seeing these phenomena as a sign of perfection. Instead, one must resolve to further improve the self and put forth greater effort to reform. 【了凡】：昔蘧伯玉當二十歲時。己覺前日之非而盡改之矣。至二十一歲。乃知前之所改未盡也。及二十二歲。回視二十一歲。猶在夢中。歲復一歲。遞遞改之。行年五十。而猶知四十九年之非。古人改過之學如此。（「遞遞」：逐步） 【從前春秋時代衛國的賢大夫蘧伯玉在二十歲的時候，已經能時時反醒自己過去的過失，加以檢討，完全改掉了。到了二十一歲的時候，又覺得從前所改的過失，並不徹底；到了二十二歲，再回憶二十一歲時，還像在夢中一般，像這樣一年一年的過去，一年一年的逐步改過；直到五十歲那年，還覺得過去的四十九年，都是有過失的。古人對於改過的學問講究就是像這樣的。】 [Liao-Fan]: During the Spring-Autumn period of China’s history, there was a high senior government official in Wei, named Bwo-yu Chu. When he was twenty, he was already mindful of his past faults. He studied his mistakes and tried to correct them thoroughly. At the age of twenty-one, he felt he still had not completely corrected all his faults. When he was twenty-two, he felt as if twenty-one was spent dreamily, without practical improvement. Thus, year after year, he continued to correct his faults. When he reached fifty, Bwo-yu still felt that the past forty nine years were full of wrongdoings. This was how particular our ancestors were regarding the correction of faults! 【了凡】：吾輩身為凡流。過惡蝟集。而回思往事。常若不見其有過者。心粗而眼翳也。（「蝟」：刺蝟） 【我們都是平凡人，過失罪惡，就像刺蝟身上的刺一樣，聚集了滿身都是。而回想過去的事，常常像看不到自己有甚麼過失，這實在都是因為粗心，不知道自我反省。又像眼睛上長了翳，看不到自己天天在那裏犯過呀！】 [Liao-Fan]: We are all just common people and our mistakes are as numerous as the spines on a porcupine. Oftentimes when we look back, we do not even see our own faults. This is because we are careless, and do not know how to reflect on our own actions. It is as if a cataract is growing in our eye, we become so blind we cannot even see that we’re making mistakes everyday! 【了凡】：然人之過惡深重者。亦有效驗。 【但是，一個人的過失，罪惡深重到了相當的地步，也有證據可以看出來；】 [Liao-Fan]: There are also indications when people have accumulated too many offenses and sins. 或心神昏塞。轉頭即忘。或無事而常煩惱。或見君子而赧然消沮。或聞正論而不樂。或施惠而人反怨。或夜夢顛倒。甚則妄言失志。皆作孽之相也。（「赧然」：面紅、難為情。「消沮」：垂頭喪氣、精神不振） 【或者是心思混亂塞住，精神萎靡不振，隨便甚麼事轉頭就忘記了；或者是不值得煩惱的事，也常常感覺非常的煩惱；或者是見到品德高尚的君子，便覺得難為情，垂頭喪氣；或者是聽到光明正大的道理，反倒覺得不歡喜；或者是有恩惠給別人，對方不領情反而怨恨你；或者是夜裡都做些顛顛倒倒的壞夢，甚至語無倫次失掉平常的模樣；像這樣種種不正常的現象，都是作孽的表現啊！】 [Narrator]: For instance, one’s heart may feel confused and oppressed, lacking energy and spirit. One becomes extremely forgetful, full of worries and feels embarrassed and depressed upon meeting a virtuous gentleman. One becomes displeased at hearing righteous reasoning and when showing kindness to others, is in turn treated with hostility. One will constantly have nightmares where everything is upside-down, and will talk incoherently and behave abnormally. These are the symptoms of those who have accumulated too many sins and offenses! 【了凡】：苟一類此。即須奮發。舍舊圖新。幸勿自誤。 【假使你有上邊所說的那種情形，就應該即刻提起精神，奮發向上，把舊的種種過失一齊改掉；而另外開闢一條新的人生大道，希望你千萬不可自己耽誤自己啊！】 [Liao-Fan]: If you have any of the above symptoms, you should immediately gather your willpower and reform all faults. It is necessary to form a new life for yourself. I hope you will not delay! 上一篇所讲，改过的种种方法，能够把今生的过失改掉，自然好命就不会变成坏命了；但是还不能把坏命变成好命。因为这一生虽然不犯过失造罪孽，但是前世有没有犯过失，造罪孽，却不知道，若是前世已经犯，这一世虽然不再犯；但是前世所犯的罪过，还是要受报应。那么要怎么样做才能使坏命转成好命呢？这不但要改过，还要积善、积德，才可以把前世所造的罪孽消去。善事积多了，自然能转坏命成好命，并且可以证明它的效验！ The previous chapter spoke about the many ways to correct one’s faults in this present life, naturally assuring that a good life will not become a bad one. However, we are still unable to transform a bad life into a good one. Though we may be good and virtuous in this life, we do not know if we committed offenses in past lives. The retribution for past deeds still has to be undergone. Therefore, in order to change a bad life into a good life, we not only have to reform our faults, but also have to practice all forms of kindness and build upon our virtue. Only in this way can we rid ourselves of the karma created in the past. Once the number of our kind practices accumulate, our bad life will naturally turn into a good life; thus, the practice of changing destiny can be proven! 積善之方 The Third Lesson: The Way to Cultivate Kindness 【了凡】：易曰。 【易經上說：】 [Liao-Fan]: The I Ching/Book of Change stated: 積善之家。必有餘慶。 【積善的家庭，一定會有很多福份喜慶的事。】 [Narrator]: “Families who perform kind deeds will accumulate fortune which can outlast many generations”. 【了凡】：昔顏氏將以女妻叔梁紇。而歷敘其祖宗積德之長。逆知其子孫必有興者。（「妻」：將女兒許配人家。「逆」：預先） 【易經上說：積善的家庭，一定會有很多福份喜慶的事。例如，從前姓嚴的人家，要把他的女兒，許配給孔子的父親；就將孔家所作的事情，一件一件都提出來；覺得孔家祖先所積的德，多而且長久；所以預知孔家的子孫，將來必定會大發。後來果然生出了孔子。】 [Liao-Fan]: Let me give you an example. Once there was a family by the name of Yen. Before they agreed to give their daughter in marriage to the man who later became Confucius’ father, they looked into the past deeds of the family. After finding the family to be one that practiced kindness and accumulated virtues, the Yen family felt assured that their daughter would be marrying into a family that would be prosperous with outstanding descendants. Sure enough, their daughter later gave birth to Confucius. 【了凡】：孔子稱舜之大孝。曰。 【還有，孔子稱讚舜的孝，是不平凡的孝順，孔子說：】 [Liao-Fan]: Confucius had once praised Shwun, an emperor of early China, on his filial piety, saying: 【孔子】：宗廟饗之。子孫保之。皆至論也。（「宗廟」：古皇帝祭祀祖宗的地方。「饗」：享，此處意指舜的孝心，可以感動祖先來享受祭祀。） 【像舜這樣的大孝，不但祖先要享受他的祭祀；並且他的世世代代子孫可以保住他的福德，不會敗落。春秋時代的陳國，就是舜傳下來的子孫，足以證明舜的後代興發得相當長久。這都是非常確實的說法啊！】 [Confucius]: Due to his great filial piety, Shwun and his ancestors will be known and respected by others. His offspring will be prominent for many, many generations. 【了凡】：試以往事徵之。（「徵」：考驗證明） 【現在我再以過去發生真實的事情，來證明積善的功德。】 [Liao-Fan]: These sayings were later proven true through history. Now I will prove to you in these true stories that merits can be attained through performing kind deeds. 【了凡】：楊少師榮。建寗人。世以濟渡為生。久雨溪漲。橫流衝毀民居。溺死者順流而下。他舟皆撈取貨物。獨少師曾祖及祖惟救人。而貨物一無所取。鄉人嗤其愚。逮少師父生。家漸裕。有神人化為道者。語之曰。（「濟渡」：擺渡。「嗤」：偷偷的笑人。「逮」：等到） 【有一位做過少師的人，姓楊名榮，是福建省建寧人。他家世代是以擺渡為生。有一次，雨下得太久，溪水滿漲，水勢洶湧橫衝直撞，把民房都沖失了，被淹死的人順著水勢一直流下來。別的船都去撈取水中漂來的各種財貨，只有少師的曾祖父和祖父，專門去救水裏漂來的災民，而財物一件都不撈，鄉人都偷笑他們是傻瓜。等到少師的父親出生後，家道也漸漸的寬裕了。有一位神仙化做道士的模樣，向少師的父親說：】 [Liao-Fan]: In Fukien province, there was a prominent man named Rong Yang who held a position in the imperial court as the Emperor’s teacher. His ancestors were boat people who made a living by helping people cross the river. Once, there was a storm which lasted so long that fierce flooding washed away all the people’s houses. People, animals, and goods were carried down river by the current. Other boaters took advantage of the situation and strove to collect the floating goods. Only Rong Yang’s grandfather and great grandfather took interest in rescuing the drowning people. They did not take any of the goods that floated by. The other boaters all laughed and thought them to be very stupid. Later on, when Rong Yang’s father was born, the Yang family gradually became wealthy. One day a saint disguised as a Taoist monk came to the Yang family and said: 【道士】：汝祖父有陰功。子孫當貴顯。宜葬某地。遂依其所指而窆之。即今白兔墳也。（「窆」：棺木葬下） 【你的祖父和父親，都積了許多陰功，所生的子孫應該發達做大官。可以將你的父親葬在某一個地方。少師的父親聽了，就照道士所指定的地方，把他的祖父和父親葬下。這座墳，就是現在大家所知道的白兔墳。】 [Taoist]: Your ancestors have accumulated a lot of merit; your offspring should enjoy wealth and prominence. There is a special place where you can build your ancestral tomb. 【了凡】：後生少師。弱冠登第。位至三公。加曾祖祖父如其官。子孫貴盛。至今尚多賢者。（「弱冠」：二十歲） 【後來少師出生了，到了二十歲就中了進士。一直做官，做到三公裏面的少師。皇帝還追封他的曾祖父、祖父、父親，與少師一樣的官位。而且少師的後代子孫，都非常興旺，一直到現在還有許多賢能之士。】 [Liao-Fan]: So they followed the Taoist’s suggestion and shortly after, Rong Yang was born. Rong Yang passed the imperial examination when he was only twenty years old and later received imperial appointments. The emperor had even bestowed his grandfather and great grandfather with the same imperial honors. His descendants are still very prominent today. 【了凡】：鄞人楊自懲。初為縣吏。存心仁厚。守法公平。時縣宰嚴肅。偶撻一囚。血流滿前。而怒猶未息。楊跪而寬解之。宰曰。（「鄞」：浙江寧波。「縣吏」：縣衙裡幫知縣辦事的書辦。「撻」：打。） 【浙江寧波人楊自懲，起初在縣衙做書辦，心地非常厚道；而且守法公平，做事公正；當時的縣官，為人嚴厲方正，有一次偶然打了一個囚犯，一直打到血流到地上，縣官還是不息怒；楊自懲就跪下，替囚犯向縣官求情，請縣官寬諒那個囚犯。縣官說：】 [Liao-Fan]: Zi-cheng Yang from the prefecture of Ninpo, Chehkiang province is another example. Zi-cheng worked as a member in the staff of the prefectural courthouse. He was a kind, humane, and law-abiding man. Once, the prefectural magistrate punished a criminal by beating him until his blood spilled out onto the ground. The magistrate’s anger did not subside and as he was about to continue, Zi-cheng knelt and pleaded with him to stop beating the prisoner. The magistrate said: 【縣宰】：怎奈此人越法悖理。不由人不怒。（「悖」：違背） 【你求情本來沒有什麼不能放寬的，但是這個囚犯，不守法律，違背道理，不能教人不生氣啊！】 [Magistrate]: It’s all right for you to plead, but how can I not be angry when this person has broken the law! 【了凡】：自懲叩首曰。 【楊自懲一邊叩頭一邊說：】 [Liao-Fan]: Zi-cheng replied: 【自懲】：上失其道。民散久矣。如得其情。哀矜勿喜。喜且不可。而況怒乎。（「矜」：可憐） 【在朝廷中已經沒有是非可言了，政治一片黑暗、貪污、腐敗，人心散失已經很久了，審問案件若是審出實情，尚且應該替他們傷心，可憐他們不明事理，誤蹈法網，不可以因為審出了案情，就歡喜。若是存心歡喜，恐怕會把案件忽略弄錯。若是生氣，又恐怕犯人受不住打，勉強招認，容易冤枉人。既然歡喜尚且不可，又怎麼可以發火呢？】 [Zi-cheng]: When even those in government positions of prestige and power are corrupted and do not follow the Righteous Path, how can one expect the common people to abide by laws and orders? Also, extreme beating can force an innocent suspect to plead guilty. Thus in a case like this we should be more understanding. 【了凡】：宰為之霽顏。 家甚貧。餽遺一無所取。遇囚人乏糧。常多方以濟之。一日有新囚數人待哺。家又缺米。給囚則家人無食。自顧則囚人堪憫。與其婦商之。婦曰。囚從何來。曰。自杭而來。沿路忍饑。菜色可掬。因撤己之米。煮粥以食囚。後生二子。長曰守陳。次曰守址。為南北吏部侍郎。長孫為刑部侍郎。次孫為四川廉憲。又俱為名臣。今楚亭德政。亦其裔也。（「霽顏」：停止發火之面色（霽字、雨停住不落之意）。「餽」：送。「遺」：給。「哺」：拿食物給人吃。「菜色可掬」：受餓之人，面無血色，面黃得厲害，這黃的顏色，幾乎可以用兩手來捧了。「撤」：除去。「侍郎」：在六部（行政組織）的時代，每一部最高的官是尚書，第二等大，即是侍郎，故相當於現在的副部長。「廉憲」：按察司，一般也稱欽差大臣。「裔」：後代） 【那縣官聽了楊自懲的話，非常感動，面容立即和緩下來，不再發怒了！講到楊自懲的家裏，是很窮的；但是他雖然窮，別人送他東西，他一概不肯接受。碰到囚犯缺糧，他卻常用許多方法去弄一些米來，救濟他們。有一天來了幾個新的囚犯，沒有東西吃，非常的餓，他自己家裏剛巧也欠米。若是拿來給囚犯吃，那麼自己家人就沒得吃了。如果只顧自己吃，那麼囚犯又餓得很可憐，沒有辦法，便同他的妻子商量。他的妻子問他說：犯人從什麼地方來的？從杭州來的。沿途熬餓，臉上餓得沒有一點血色；就像一種又青又黃的菜色，幾乎可以用手捧起來。 因此，兩夫婦就把自己所存的一些米，用來煮稀飯給新來的囚犯吃。然後他們生了兩個兒子，大的叫做守陳，小的叫做守址，作官一直做到南北吏部侍郎。大孫子做到刑部侍郎。小孫子也做到四川按察使。兩個兒子，兩個孫子，都是名臣；而當今有兩個名人楚亭和德政，都是楊自懲的後代。】 [Liao-Fan]: The magistrate was quite touched by Zi-cheng’s speech and ceased the beating. Although Zi-cheng came from a very poor family, he never took any bribes. If the prisoners were short of food, he would always take food from his own home even if it meant going hungry himself. This practice of compassion never ceased and eventually Zi-cheng had two sons. The elder’s name was Shou-chen and the younger was named Shou-zi. Both sons became very prominent, and held important government positions. Even the descendants of the Yang family remained prominent for a long time as well. 【了凡】：昔正統間。鄧茂七倡亂於福建。士民從賊者甚眾。朝廷起鄞縣張都憲楷南征。以計擒賊。後委布政司謝都事。搜殺東路賊黨。謝求賊中黨附冊籍。凡不附賊者。密授以白布小旗。約兵至日。插旗門首。戒軍兵無妄殺。全活萬人。後謝之子遷。中狀元。為宰輔。孫丕。復中探花。（「正統」：明英宗年號。「都憲」：都御使，都察院裡最高的官，即各種御史的領袖。「委」：派。「布政司」：管一省的錢糧、官員任用與民生事宜。「宰輔」：宰相。「狀元」：從前舉人參加會試考進士，考中了進士，再要去皇帝的宮殿，參加殿試，第一名是狀元、第二名是榜眼、第三名是探花、第四名是傳臚、第五名以下都叫翰林，由於是由皇帝親自點定，故稱點狀元 …點翰林） 【從前明朝英宗正統年間，有一個土匪首領叫作鄧茂七，在福建一帶造反。福建的讀書人和老百姓，跟隨他一起造反的很多。皇帝就起用曾經擔任都御使的鄞縣人張楷，去搜剿他們。張都憲用計策把鄧茂七捉住了。後來張都憲又派了福建布政司的一位謝都事，去搜查捉拿剩下來的土匪，捉到就殺；但是謝都事不肯亂殺，怕殺錯人。便向各處尋找依附賊黨的名冊，查出來凡是沒有依附賊黨，名冊裏還沒有他們姓名的人。就暗中給他們一面白布小旗，約定他們，搜查賊黨的官兵到的那一天，把這面白布小旗插在自己家門口，表示是清白的民家，並且禁止官兵不准亂殺。因為有這種措施而避免被殺的人，大約有一萬人之多。後來謝都事的兒子謝遷，就中了狀元，官做到宰相。而且他的孫子謝丕，也中了探花，就是第三名的進士。】 [Liao-Fan]: Here is another true story that happened during the Ming Dynasty. Once, an organization of bandits appeared in Fukien Province. The Emperor appointed General Hsieh to lead the imperial army to pacify them. General Hsieh wanted to make sure that the innocent were not accidentally killed in the hunt for bandits. So, he managed to attain a list of those who belonged to the organization and commanded that a white flag be given secretly to those who did not belong with the bandits. They were told to place the flag on their door when the imperial army came to town and the soldiers were ordered not to harm the innocent. With this one thought of kindness, General Hsieh saved tens of thousands of people from being killed. Later, his son Chian Hsieh placed first on the imperial exams and later became an advisor to the emperor. His grandson Pei Hsieh also placed highly on the exams. 【了凡】：莆田林氏。先世有老母好善。常作粉團施人。求取即與之。無倦色。一仙化為道人。每旦索食六七團。母日日與之。終三年如一日。乃知其誠也。因謂之曰。（「倦」：厭煩（不是疲倦的意思）） 【在福建省浦田縣的林家，他們的上輩中，有一位老太太喜歡做善事，時常用米粉做粉糰給窮人吃。只要有人向她要，她就立刻給，臉上沒有表現出一點厭煩的樣子。有一位仙人，變作道士，每天早晨向她討六、七個粉糰。老太太每天給他，一連三年，每天都是這樣的布施，沒有厭倦過，仙人曉得她作善事的誠心，就向她說：】 [Liao-Fan]: Another example is the Lin family from Fukien. Among their ancestors was an old lady who was very generous. Everyday she made rice balls to give to the poor, and always gave as many as they asked for. There was a Taoist monk who came everyday for three years and each time would ask for six or seven rice balls. The old lady always granted his request and never expressed any displeasure. The Taoist monk, who was actually a heavenly being who came to test the depth of her kind heart, realized the deep sincerity of this woman’s kindness and said: 【道士】：吾食汝三年粉團。何以報汝。府後有一地。葬之。子孫官爵。有一升蔴子之數。（「官爵」：做官封爵） 【我吃了妳三年的粉糰，要怎樣報答妳呢？這樣吧，妳家後面有一塊地，若是妳死後葬在這塊地上，將來子孫有官爵的，就會像一升麻子那樣的多。】 [Taoist]: I have eaten your rice balls for three years with nothing to show my gratitude in return. Perhaps I can help you in this way: On the land behind your house there is a good place where you can build the ancestral grave. If you are placed there in the future, the number of your descendants who will have imperial appointments will be equivalent to the number of seeds in a pound of sesame seeds. 【了凡】：其子依所點葬之。初世即有九人登第。累代簪纓甚盛。福建有無林不開榜之謠。（「簪纓」：簪、戴大帽用，插在頭髮裡的一根簪；纓、大帽上的帶，用來繫大帽的，依不同的身分，應使用不同的纓，故簪纓，用來形容有身分，做大官的人。「初世」：第一代。） 【後來老太太去世了，她的兒子依照仙人的指示，把老太太安葬下去。林家的子孫第一代發科甲的，就有九人。後來世世代代，做大官的人非常多。因此，福建省竟有一句：「如果沒有姓林的人去赴考，就不能發榜。」的傳言。意思是講：林家考試的人多，並且都能考中，所以到發榜，榜上就不會沒有姓林的人。表示林家有功名的人很多。】 [Liao-Fan]: When the old lady passed away, the Lin family followed the Taoist’s suggestion and buried her at the designated place. The first generation after that, nine men passed the imperial exams, and it continued that way for every succeeding generation. 【了凡】：馮琢菴太史之父。為邑庠生。隆冬早起赴學。路遇一人。倒臥雪中。捫之半殭矣。遂解己綿裘衣之。且扶歸救甦。夢神告之曰。（「太史」：即翰林，因為每一朝代，在國史館中，負責紀錄當代歷史的，大半都是翰林，故翰林又稱太史。「邑」：縣。「庠」：一縣的學校，俗名縣學。「庠生」：第一次考取秀才，就進了縣裡頭的學校，就叫庠生，亦即俗稱的進學。「隆冬」：最冷的冬天。「捫」：手摸。） 【馮琢菴太史的父親，當他在縣學裏做秀才的時候，有一個非常寒冷的冬天清早，在要去縣學的路上，碰到一個人倒在雪地裏，用手摸摸看，已經幾乎快要凍死了。馮老先生馬上就把自己穿的皮袍，脫下來替他穿上；並且還扶他到家裡，把他救醒。馮老先生救人後，就做了一個夢，夢中見到一位天神告訴他說：】 [Liao-Fan]: Another example comes from the father of an imperial historian whose name was Chi Feng. One winter many years ago, Chi Feng’s father was on his way to school when he encountered a person frozen in the snow. Finding the man still breathing, he quickly took off his coat to wrap around the frozen man. He carried him back home and revived him. That night he dreamed of a heavenly being who told him: 【天神】：汝救人一命。出至誠心。吾遣韓琦為汝子。（「韓琦」：文武全才，於宋英宗、神宗時，做過十年宰相，死後宋神宗諡法忠獻，後人稱韓忠獻公） 【你救人一命，是完全出自一片至誠的心來救的，所以我要派韓琦投生到你家，做你的兒子。】 [Heavenly being]: You helped the dying man out of utter sincerity, this is a great virtue. I will bring the famous General Han-chi of the Sung Dynasty to be reborn as your son. 【了凡】：及生琢菴。遂名琦。（「琢菴」：字） 【等到後來琢菴生了，就命名叫作馮琦。因為他是宋朝一個文武全才的賢能宰相，叫作韓琦的人來投胎轉世的。】 [Liao-Fan]: Later the child was born and his nickname was Chi. 【了凡】：台州應尚書，壯年習業於山中。夜鬼嘯集。往往驚人。公不懼也。一夕聞鬼云。（「習業」：學習事情，或讀書人讀書用功。「嘯」：鬼叫） 【浙江台州有一個應大猷尚書，壯年的時候在山中讀書，夜裡頭，鬼常聚在一起做鬼叫，來嚇唬人，只有應公不怕鬼叫。有一夜，應公聽到一個鬼說：】 [Liao-Fan]: Another example is of Ta-jo Ying, the imperial secretary who lived in Tai-chou. When he was young, he used to study in remote mountain areas. At night he often heard the sounds of ghost and spirits but he never feared them. One day he heard a ghost say happily to another ghost: 【鬼1】：某婦以夫久客不歸。翁姑逼其嫁人。明夜當縊死於此。吾得代矣。（「縊」：上吊） 【有一個婦人，因為丈夫出遠門作客，好久沒回來，她的公婆判斷兒子可能已經死了，所以就逼這個婦人改嫁；但是這個婦人卻是要守節，不肯改嫁。所以明天夜裡，她要在這裏上吊，我可以找到一個替身了。凡是上吊或者是淹死的人，如果沒有替身，便無法投生，所以叫替死鬼。】 [Ghost 1]: There’s a village woman whose husband left home a long time ago and has not returned. Her in-laws think that their son is dead and are forcing her to remarry. Tomorrow night she is going to commit suicide here, and will replace me so that I can be reborn. [Narrator]: The souls of those who commit suicide have to wait for another to die at the same place they did in order to leave the ghost realm and attain rebirth at a higher level. 【了凡】：公潛賣田。得銀四兩。即偽作其夫之書。寄銀還家。其父母見書。以手跡不類疑之。既而曰。（「書」：信。「不類」：不像） 【應公聽到這些話，動了救人的心，偷偷的把自己的田，賣了四兩銀子，還馬上寫了一封假託她丈夫的信；並把銀子寄回家的事寫在信上說明。這位出外人的父母看了信以後，因為筆跡不像，所以懷疑信是假的。但是後來他們又說：】 [Liao-Fan]: Mr. Ying heard this and immediately set out to sell his parcel of land. He attained four lians of silver and made up a letter from the daughter-in-law’s husband and sent it to her home along with the silver. The father-in-law noticed that the letter was not in his son’s handwriting, but examined the silver and said: 【岳父】：書可假。銀不可假。想兒無恙。 【信是可以假的，但是銀子不能假呀！一定是兒子很平安，才會把銀子寄回來。】 [Father-in-law]: The letter may be a fake, but the silver’s not. Besides, who would send us this much money? Perhaps our son is truly alive and well, and we should not force our daughter-in-law to remarry. 【了凡】：婦遂不嫁。其子後歸。夫婦相保如初。公又聞鬼語曰。 【他們這樣想以後，就不再逼媳婦去改嫁了。後來他們的兒子回來了，這對夫婦就得以保全，像從前新婚時一樣，好好的過日子了。隔天晚上，應公又聽到那個鬼說：】 [Liao-Fan]: Therefore the daughter-in-law did not commit suicide and her husband returned home after all. Mr. Ying heard the ghosts converse again: 【鬼1】：我當得代。奈此秀才壞吾事。傍一鬼曰。 【我本來可以找到替身了，那知道被這個秀才壞了我的事啊。 旁邊一個鬼說：】 [Ghost 1]: Humph! Originally I was able to leave this place for rebirth, but my chance got messed up by Mr. Ying! 【鬼2】：爾何不禍之。曰。 【喂！你為什麼不去害死他呢？ 那個鬼說：】 [Ghost 2]: Why don’t you inflict some harm on him? 【鬼1】：上帝以此人心好。命作陰德尚書矣。吾何得而禍之。（「上帝」：玉皇大帝。「陰德尚書」：意指這尚書的官，是要有大陰德的人，才能得到的） 【天帝因為這個人心好，有陰德，已經派他去做陰德尚書了，我怎麼還能害他呢？】 [Ghost 1]: No, I can’t. His goodness and virtue has been recognized by the gods and he’s going to receive a prominent position in the future. How can I harm him? 【了凡】：應公因此益自努勵。善日加修。德日加厚。遇歲饑。輒捐穀以賑之。遇親戚有急。輒委曲維持。遇有橫逆。輒反躬自責。怡然順受。子孫登科第者。今累累也。 【應公聽了這兩個鬼所講的話以後，就更加努力，更加發心，善事一天一天去做，功德也一天一天的增加；碰到荒年的時候，每次都捐米穀救人；碰到親戚有急難，他一定想盡辦法幫助人家渡過難關；碰到蠻不講理的人，或不如意的事，總會反省，責備自己有過失，就心平氣和地接受事實。因為應公能夠這樣做人，所以他的子孫得到功名，官位的，一直到現在還是很多哩！】 [Liao-Fan]: Mr. Ying heard this and became even more diligent in practicing kindness and accumulating merit. Whenever there was a famine, he would use his own money to buy food for the poor and needy and was always eager to help those in emergencies. When things did not go his way, he always reflected within himself rather than complain of the outside conditions. Even today, his descendants are still very prominent. 【了凡】：常熟徐奉（編按：「奉」應為「鳳」）竹。栻其父素富。（編按：以上句讀應為「常熟徐鳳竹栻。其父素富。」）偶遇年荒。先捐租以為同邑之倡。又分穀以賑貧乏。夜聞鬼唱於門曰。（「常熟」：江蘇省縣名。「徐鳳竹栻」：姓徐、號鳳竹，名栻。「素」：向來。） 【江蘇省常熟縣有一位徐鳳竹先生，他的父親本來就很富有。偶然碰到了荒年，就先把他應收的田租，完全捐掉，做為全縣有田的人的榜樣。同時又分他自己原有的稻穀，去救濟窮人。有一天夜裡，他聽到有一群鬼在門口唱道：】 [Liao-Fan]: There was another person, Feng-chu Hsu, who lived in Changso, Chiangsu province, whose father was very wealthy. Whenever there was a famine, his father would donate his own grain and all the rent on the rice fields to the poor. One night he heard ghosts singing outside his home: 【鬼眾】：千不誆。萬不誆。徐家秀才做到了舉人郎。（「誆」：欺騙） 【千也不說謊，萬也不說謊，徐家秀才，快要做到了舉人！】 [Ghosts]: No kidding! No kidding! A person of the Hsu family is going to pass the imperial exam! 【了凡】：相續而呼。連夜不斷。是歲鳳竹果舉於鄉。其父因而益積德。孳孳不怠。修橋修路齋僧接眾。凡有利益。無不盡心。後又聞鬼唱於門曰。（「孳孳」：認真高興。「接」：接濟） 【那些鬼連續不斷的呼叫，夜夜不停。這一年，徐鳳竹去參加鄉試，果然考中了舉人。他的父親因此更加高興，努力不倦地做善事，積功德；同時又修橋鋪路，施齋飯供養出家人；碰到缺米缺衣的人，也接濟他們；凡是對別人有好處的事情，無不盡心的去做。後來他又聽到鬼在門前唱道：】 [Liao-Fan]: This went on for several days and sure enough, that year his son Feng-chu passed the imperial exam. From then on, he was even more diligent in doing good deeds and accumulating merit. He often fixed bridges and took care of travelers and monks. One day he heard the ghosts sing again: 【鬼眾】：千不誆。萬不誆。徐家舉人直做到都堂。（「都堂」：都察院最高的官，叫左都御史） 【千也不說謊，萬也不說謊，徐家舉人，做官直做到都堂！】 [Ghosts]: No kidding! No kidding! A person in the Hsu family is going to pass an even higher level on the imperial exam! 【了凡】：鳳竹官終兩浙巡撫。（「巡撫」：外省最高的官，相當現在的省長） 【結果徐鳳竹，官做到了兩浙的巡撫。】 [Liao-Fan]: And sure enough, Feng-chu passed the higher exam and became the governor of two provinces. 【了凡】：嘉興屠康僖公。初為刑部主事。宿獄中。細詢諸囚情狀。得無辜者若干人。公不自以為功。密疏其事。以白堂官。後朝審。堂官摘其語。以訊諸囚。無不服者。釋冤抑十餘人。一時輦下咸頌尚書之明。公復稟曰。（「主事」：一部裡頭中級的官。「堂官」：一部裡頭的尚書，以及左右兩侍郎皆可謂之。「抑」：硬壓。「輦下」：輦、是皇帝坐車，由於常在京城內，故比喻京裡頭的意思） 【浙江省嘉興縣有一位姓屠，名叫康僖的人，起初在刑部裏做主事的官，夜裏就住在監獄裡。並且仔細的盤問囚犯，結果發現沒罪而被冤枉的，有不少人；但是屠公並不覺得自己有功勞，他祕密地把這件事，上公文告訴了刑部堂官。 後來到了秋審的時候，刑部堂官，把屠公所提供的話，揀些要點，來審問那些囚犯。囚犯們都老老實實的向堂官供認，沒有一個不心服的。因此，堂官就把原來冤枉的，因為受刑不住被逼招認的，釋放了十多人。 那個時候京裡的百姓，都稱讚刑部尚書明察秋毫。後來屠公又向堂官上了一份公文說：】 [Liao-Fan]: Another example is Kung-hsi Tu who lived in Chia-shing, Chehkiang Province. Mr. Tu used to work in the courthouse and would spend nights in the prison cells, talking with the inmates. Whenever he found anyone to be innocent, he would write a classified report to the judge, informing him of innocent cases. The judge would then question the prisoners accordingly and clear the case. Through Mr. Tu’s effort, ten innocent people were released, and all of them were extremely grateful to him. Soon after, Mr. Tu also made a report to the Imperial Judge saying: 【屠康僖公】：輦轂之下。尚多冤民。四海之廣。兆民之眾。豈無枉者。宜五年差一減刑官。覈實而平反之。（「輦轂」：轂、車輪中，裝軸梗的一個洞，輦轂兩個字，實在說還是輦的意思。「覈」：查考） 【在天子腳下，尚且有那麼多被冤枉的人；那麼全國這樣大的地方，千千萬萬的百姓，那會沒有被冤枉的人呢？所以應該每五年再派一位減刑官，到各省去細查囚犯犯罪的實情，確實有罪的，定罪也要公平；若是冤枉的，應該翻案重審，減輕或者釋放。】 [Mr. Tu]: If even in the Imperial City there are so many innocent imprisoned, there must be many more throughout the nation. I recommend that the Imperial Judge send investigators to check the prisons for innocent people every five years. The sentences can be reduced or canceled in order to prevent the innocent from remaining in prison. 【了凡】：尚書為奏。允其議。時公亦差減刑之列。夢一神告之曰。 【尚書就代為上奏皇帝，皇帝也准了他所建議的辦法；就派減刑官，到各省去查察，剛巧屠公也派在內。有一天晚上屠公夢見天神告訴他說：】 [Liao-Fan]: The Imperial Judge took his request to the Emperor, who agreed to Mr. Tu’s suggestion. Mr. Tu was chosen as one of the special agents in charge of reducing sentences for those who may be innocent. One night he dreamed of a heavenly being who came to him and said: 【天神】：汝命無子。今減刑之議。深合天心。上帝賜汝三子。皆衣紫腰金。（「衣紫腰金」：從前大官服飾；腰金、腰裏邊束鑲金的帶子） 【你命裡本來沒有兒子，但是因為你提出減刑的建議，正與天心相合；所以上帝賜給你三個兒子，將來都可以做大官；穿紫色的袍，束金鑲的帶。】 [Heavenly being]: You were not supposed to deserve a son in this life, but this act of reducing prison sentences for innocent people is in line with the wishes of the heavens. You will be bestowed with three sons and they will all attain high positions. 【了凡】：是夕。夫人有娠。後生應塤。應坤。應埈。皆顯官。（「娠」：得胎） 【這天晚上，屠公的夫人就有了身孕；後來生下了應塤、應坤、應竣三個兒子，果然都作了高官。】 [Liao-Fan]: Soon after that, his wife gave birth to three sons who all became prominent men in society. 【了凡】：嘉興包憑。字信之。其父為池陽太守。生七子。憑最少。贅平湖袁氏。與吾父往來甚厚。博學高才。累舉不第。留心二氏之學。一日東游泖湖。偶至一村寺中。見觀音像。淋漓露立。即解橐中得十金。授主僧。令修屋宇。（「太守」：知府，一府中最高的官。「贅」：被招做女婿。「二氏之學」：佛與道。「橐」：一頭開口，一頭有托底的袋子叫囊；兩頭都開口，沒有托底的袋，叫橐） 【有一位嘉興人，姓包，名叫憑，號信之。他的父親做過安徽池州府的太守。生了七個兒子，包憑是最小的。他被平湖縣姓袁的人家，招贅做女婿；和我父親常常來往，交情很深。他的學問廣博，才氣很高，但是每次考試都考不中。因此他對佛教、道教的學問，很注意研究。 有一天，他向東去卯湖遊玩，偶然到了一處鄉村的佛寺裏，因為寺內房屋壞了，看見觀世音菩薩的聖像，露天而立，被雨淋得很濕。當時就打開他的袋子，有十兩銀子，就拿給這寺裏的住持和尚，叫他修理寺院房屋。】 [Liao-Fan]: Another example of attaining good outcomes from practicing kindness is Ping Bao who lived in Chia-shing. Ping was the youngest of the seven sons of the magistrate of Chih-chou, An-hui Province. He was sought into marriage by the Yuan family at Ping-hu Prefecture and was a good friend of my father. Ping Bao was very knowledgeable and talented, but he was never able to pass the exams. He put his time into studying the teachings of Buddhism and Taoism instead. Once, while traveling to Lake Liu, he came to a village and saw a temple in desperate need of repairs. He saw that the statue of Kuan Yin Bodhisattva stood wet from the rain which leaked through the roof. Ping took out all his money and gave it to the abbot of the temple, asking him to please use it to restore the temple. The abbot replied: 【住持】：僧告以功大銀少。不能竣事。（「竣」：完結） 【和尚告訴他說：修寺的工程大，銀子少，不夠用，沒法完工。】 [Abbot]: It will be a very big project, I’m afraid this amount is not enough to complete your wish. 【了凡】：復取松布四疋。檢篋中衣七件與之。內紵褶。係新置。其僕請已之。憑曰。（「篋」：竹箱。「紵」：麻製品。「褶」：夾衣服，袷衣（無棉絮的雙層夾衣）。「已」：停止） 【因此，他又拿了松江出產的布四匹，再撿竹箱裏的七件衣服給和尚。這七件衣服裏，有用麻織的料做的夾衣，是新做的；他的佣人要他不要再送了，但是包憑說：】 [Liao-Fan]: Ping Bao then took out all his luxurious belongings and handed them to the abbot. His servant tried to persuade him into keeping his best outfit, but he refused, saying: 【包憑】：但得聖像無恙。吾雖裸裎何傷。（「無恙」：沒有什麼不平安。「裸裎」：赤身露體） 【只要觀世音菩薩的聖像，能夠安好，不被雨淋，我就是赤身露體又有甚麼關係呢？】 [Ping Bao]: It does not matter to me. As long as the statue of Kuan Yin Bodhisattva remains undamaged, I do not care if I have to go without clothes. 【了凡】：僧垂淚曰。 【和尚聽後流著眼淚說：】 [Liao-Fan]: The abbot, with tears in his eyes, exclaimed: 【住持】：捨銀及衣布。猶非難事。只此一點心，如何易得。 【施送銀兩和衣服布匹，還不是件難事，只是這一點誠心，怎麼容易得到呀！】 [Abbot]: To give up money and clothing is not a difficult deed to accomplish, but your deep sincerity is truly rare and precious to encounter! 【了凡】：後功完。拉老父同遊。宿寺中。公夢伽藍來謝曰。（「伽藍」：護法神） 【後來房屋修好了，包憑就拉著他父親同遊這座佛寺，並且住在寺中。那天晚上，包憑做了一個夢，夢到寺裏的護法神，來謝他說：】 [Liao-Fan]: After the temple was repaired, Ping Bao led his father over to visit and spent the night there as well. That night, Ping dreamed of the Dharma Protector of the temple, Chie-lan, coming to thank him saying: 【伽藍菩薩（護法神）】：汝子當享世祿矣。 【你做了這些功德，你的兒子可以世世代代享受官祿了。】 [Chie-Lan]: Since you have accumulated these merits and virtues, your children and descendants will enjoy having imperial appointments for a long time. 【了凡】：後子汴。孫檉芳。皆登第。作顯官。（「登第」：中進士） 【後來他的兒子包汴，孫子包檉芳，都中了進士，做到高官。】 [Liao-Fan]: Later on, his son and grandson both passed high exams and were appointed as imperial officials. 【了凡】：嘉善支立之父。為刑房吏。有囚無辜陷重辟。意哀之。欲求其生。囚語其妻曰。（「刑房吏」：支線衙門裡辦公事的人，有吏、戶、禮、兵、工、刑等六房，刑房吏，即在刑房裏當書辦。「重辟」：最重的刑罰，即死刑） 【浙江省嘉善縣有一個叫做支立的人，他的父親，在縣衙中的刑房當書辦。有一個囚犯，因為被人冤枉陷害，判了死罪；支書辦很可憐他，想要替他向上面的長官求情，寬免他不死。那個囚犯曉得支書辦的好意之後，告訴他的妻子說：】 [Liao-Fan]: Another example is a person named Li Zhi from Jia-shan prefecture. His father used to be a clerk in the prefectural courthouse. Once, Li’s father came to know about an innocent man who was given the death penalty. He attempted to plead this case with his superior. When the prisoner heard about this, he told his wife: 【囚犯】：支公嘉意。愧無以報。明日延之下鄉。汝以身事之。彼或肯用意。則我可生也。（「延」：請。「以身事之」：嫁他） 【支公的好意，我覺得很慚愧，沒法子報答；明天請他到鄉下來，妳就嫁給他，他或者會感念這份情份，那麼我就可能有活命的機會了。】 [Prisoner]: I am so indebted to this man who has spoken on my behalf, and I have no way of showing my gratitude. Will you invite him over to our house and offer yourself in marriage? Perhaps this will please him and increase my chances to live. 【了凡】：其妻泣而聽命。及至。妻自出勸酒。具告以夫意。支不聽。卒為盡力平反之。囚出獄。夫妻登門叩謝曰。（「卒」：到底） 【他的妻子聽了之後，沒別的辦法，所以就邊哭邊答應了。到了明天，支書辦到了鄉下，囚犯的妻子就自己出來勸支書辦喝酒，並且把他丈夫的意思，完全告訴了支書辦。但是支書辦不願意這樣做，不過究竟還是盡了全力替這個囚犯，把案子平反了。後來，囚犯出獄，夫妻兩個人一起到支書辦家裡叩頭拜謝說：】 [Liao-Fan]: The wife cried as she listened to his request, for she really did not want to do it. But it was the only way she could help her husband in this time of need. So, the next day when the clerk came to visit, she offered him wine and told him of her husband’s wishes. The clerk refused the offer of marriage, but continued with great effort to clear the case. When at last the prisoner was released, he and his wife both went to his house to thank him. The man said: 【夫】：公如此厚德。晚世所稀。今無子。吾有弱女。送為箕帚妾。此則禮之可通者。（「箕帚」：古時嫁女兒的客氣話） 【您這樣厚德的人，在近代實在是少有。現在您沒有兒子，我有一個女兒，願意送給您做掃地的小妾。這在情理上是可以說得通的。】 [Man]: One with such virtue as yours is truly rare to encounter these days, how can I show my gratitude? You do not have a son, please allow me to offer my daughter in marriage to you, this is the only way I can repay you. Please accept. 【了凡】：支為備禮而納之。生立。弱冠中魁。官至翰林孔目。立生高。高生祿。皆貢為學博。祿生大綸。登第。（「中魁」：鄉試考中舉人的第一名稱解元，其他名次都叫經魁（會試考中進士的第一名稱會元，其他名次都叫會魁）。「翰林」：許多翰林在一起用功辦事處，稱翰林院。「孔目」：翰林院中，管公文案卷的小官。「貢」：貢到國子監，意即保薦到國子監。「學博」：是州學以及縣學的教官） 【支書辦聽了他的話，就預備了禮物，把這個囚犯的女兒迎娶為妾，後來生了一個兒子叫支立，才二十歲就中了舉人的前茅，官做到翰林院的書記，後來支立的兒子叫做支高，支高的兒子叫支祿，都被保薦做州學縣裡的教官。而支祿的兒子叫支大綸，也考中了進士。】 [Liao-Fan]: So the clerk accepted, and soon afterwards, she bore him his son, Li Zhi. Li passed the higher level imperial exam when he was just twenty years old. Li’s son Gao, and grandson, Lu, and great grandson Da-lwun all passed high examinations and received imperial appointments. 【了凡】：凡此十條。所行不同。同歸於善而已。 【以上這十條故事，雖然每人所做的各不相同，不過行的都是一個善字罷了。】 [Liao-Fan]: The ten examples above all tell of the different deeds cultivated by different people. Although their actions differ, their intent was the same: to do good. If we were to examine goodness closely, we would find that there are many different kinds. 若復精而言之。則善有真有假。有端有曲。有陰有陽。有是有非。有偏有正。有半有滿。有大有小。有難有易。皆當深辨。（「端」：直） 【若是要再精細的加以分類來說，那末做善事；有真的，有假的；有直的，有曲的；有陰的，有陽的；有是的，有不是的；有偏的，有正的；有一半的，有圓滿的；有大的，有小的；有難的，有易的。 這種種都各有各的道理，都應該要仔細的辨別。】 [Narrator]: There is real goodness and false goodness, honest goodness and crooked goodness, hidden goodness and visible goodness, seeming goodness and unseeming goodness, improper goodness and proper goodness, half goodness and full goodness, big goodness and small goodness, and finally, difficult goodness and easy goodness. 【了凡】：為善而不窮理。則自謂行持。豈知造孽。枉費苦心。無益也。 【若是做善事，而不知道考究做善事的道理，就自誇自己做善事，做得怎樣有功德，那裏知道這不是在做善事，而是在造孽。這樣做豈不是冤枉，白費苦心，得不到一些益處啊！】 [Liao-Fan]: These different types of goodness each have their own reason, which should be carefully learned and understood. If we practice kind deeds but do not learn the way to differentiate between right and wrong, we may end up doing harm instead of good. Now I will explain the different types of goodness one by one. 【了凡】：何謂真假。昔有儒生數輩。謁中峯和尚。問曰。（「謁」：拜見。「中峯和尚」：元朝高僧，在浙江、安徽交界的天目山修行，元朝封為普應國師） 【我現在把上面所說過的，分類來加以說明。怎麼叫做真假呢？從前在元朝的時候有幾個讀書人，去拜見天目山的高僧中峰和尚，問說：】 [Liao-Fan]: What is real goodness and false goodness? Once upon a time in the Yuan Dynasty, a group of scholars went to pay homage to Master Jung Feng on Tian-mu Mountain. They asked: 【學者1】：佛氏論善惡報應。如影隨形。今某人善。而子孫不興。某人惡。而家門隆盛。佛說無稽矣。（「無稽」：沒有憑據） 【佛家講善惡的報應，像影子跟著身體一樣，人到那裡，影子也到那裡，永遠不分離。這是說行善，定有好報，造惡定有苦報，決不會不報的。為什麼現在某一個人是行善的，他的子孫反而不興旺？有某一個人是作惡的，他的家反倒發達得很？那末佛說的報應，倒是沒有憑據了。】 [Scholar 1]: Buddhist teachings often speak of the retributions for good and evil; they say it’s like the shadow, following the body wherever it goes. This is saying that doing good will always have its reward, and doing evil will always have its punishments. Then why is it, that there are people who practice kind deeds, but their family and descendants are not prosperous and successful? On the other hand, there are evil and wicked people who do bad things, but their family and descendants do quite well. Where has the law of cause and effect gone to? Is there no standard in the Buddha’s teaching? 【了凡】：中峰云。 【中峰和尚回答說：】 [Liao-Fan]: Master Jung Feng answered him, saying: 【中峰大師】：凡情未滌。正眼未開。認善為惡。指惡為善。往往有之。不憾己之是非顛倒。而反怨天之報應有差乎。眾曰。 【平常人被世俗的見解所蒙蔽，這顆靈明的心，沒有洗除乾淨，因此，法眼未開，所以把真的善行反認為是惡的，真的惡行反算它是善的，這是常有的事情；並且看錯了，還不恨自己顛顛倒倒，怎麼反而抱怨天的報應錯了呢？ 大家又說：】 [Master J.F.]: Common people are blinded by worldly views, they have not cleansed their minds of impurities, and cannot see with true perception. Therefore, they look upon true goodness as evil and mistaken true evil as goodness. This is very common nowadays! Furthermore, these people do not blame themselves for bad perception on their part, but instead blame the heavens for their misfortunes! 【學者2】：善惡何致相反。 【善就是善，惡就是惡，善惡那裡會弄得相反呢？】 [Scholar 2]: Goodness is goodness, and evil is evil; how can they be mistaken for each other? 【了凡】：中峰令試言其狀。一人謂 【中峰和尚聽了之後，便叫他們把所認為是善的，惡的事情都說出來。其中有一個人說：】 [Liao-Fan]: Hearing this, Master Jung Feng asked each of them to express their thoughts on what was good and what was evil. One of them said: 【學者3】：詈人毆人是惡。敬人禮人是善。 【罵人，打人是惡；恭敬人，用禮貌待人是善。】 [Scholar 3]: To yell at and beat others is evil, to respect and treat others in a mannerly way is good. 【了凡】：中峯云。 【中峰和尚回答說：】 [Liao-Fan]: Master Jung Feng answered: 【中峰大師】：未必然也。 【你說的不一定對喔！】 [Master J.F.]: Not necessarily. 【了凡】：一人謂 【另外一個讀書人說：】 [Liao-Fan]: Another scholar said: 【學者4】：貪財妄取是惡。廉潔有守是善。 【貪財，亂要錢是惡；不貪財，清清白白守正道，是善。】 [Scholar 4]: Being greedy for wealth and taking another’s money is evil, not being greedy and abiding by proper ways is good. 【了凡】：中峯云。 【中峰和尚說：】 [Liao-Fan]: Master Jung Feng said: 【中峰大師】：未必然也。 【你說的也不一定是對喔！】 [Master J.F.]: Not necessarily. 【了凡】：眾人歷言其狀，中峯皆謂 【那些讀書人，都把各人平時所看到的種種善惡的行為都講出來，但是中峰和尚都說：】 [Liao-Fan]: The remaining scholars all expressed their own views on what was good and what was evil, but Master Jung Feng still replied: 【中峰大師】：不然。 【不一定全對喔！】 [Master J.F.]: Not necessarily. 【了凡】：因請問。 【那幾個讀書人，因為他們所說的善惡，中峰和尚都說他們說得不對，所以就請問和尚，究竟怎樣才是善？怎樣才是惡？】 [Liao-Fan]: Since Master Jung Feng disagreed with all of their views on good and evil, they decided to ask the Master himself. They questioned: [Scholar 1]: So what is really considered good, and what is really considered evil? 【了凡】：中峯告之曰。 【中峰和尚告訴他們說：】 [Liao-Fan]: Master Jung Feng told them: 【中峰大師】：有益於人是善。有益於己是惡。有益於人。則毆人詈人皆善也。有益於己。則敬人禮人皆惡也。是故人之行善。利人者公。公則為真。利己者私。私則為假。又根心者真。襲跡者假。又無為而為者真。有為而為者假。皆當自考。（「根心」：從良心所發出。「襲跡」：無誠意，照例做做） 【做對別人有益的事情，是善；做對自己有益的事情，是惡。若是做的事情，可以使別人得到益處，那怕是罵人，打人，也都是善；而有益於自己的事情，那麼就是恭敬人，用禮貌待人，也都是惡。所以一個人做的善事，使旁人得到利益的就是公，公就是真了；只想到自己要得到的利益，就是私，私就是假了。並且從良心上所發出來的善行，是真；只不過是照例做做就算了的，是假。還有，為善不求報答，不露痕跡，那麼所做的善事，是真；但是為著某一種目的，企圖有所得，才去做的善事，是假；像這樣的種種，自己都要仔細地考察。】 [Master J.F.]: To do things with the intention of bringing benefit to others is good, to do things for the sake of oneself is evil. If what you do is for the sake of benefiting another, then it does not matter if you yell at or beat him, that is still considered good. If your intention is for self-benefit, then regardless of your appearance of respect and courtesy, it is still considered evil. Therefore, when one practices kind deeds with the sole intention of benefiting others, this is considered as benefiting the public, and if it’s public, then it is real goodness. If you only think for yourself while doing kind acts, then that is considered private benefit, and that, is false goodness. When kindness springs from within the heart, it is real goodness. When one does good just for the sake of doing a good deed, then it is false. Also, when one does good without expecting anything in return, it is considered real goodness. When one practices kind deeds for some other purpose than to benefit others, it is false. These differences should all be scrutinized by those who wish to practice true kindness. 【了凡】：何謂端曲。今人見謹愿之士。類稱為善而取之。聖人則寗取狂狷。（「謹愿」：謹慎鄉愿。「狂狷」：狂人志氣高，只向前進；狷人安份守己，不肯亂來） 【怎樣叫做端曲呢？現在的人，看見謹慎不倔強的人，大都稱他是善人，而且很看重他；然而古時的聖賢，卻是寧願欣賞志氣高，只向前進的人，或者是安份守己，不肯亂來的人。因為這種人，才有擔當；有作為，可以教導他，使他上進。】 [Liao-Fan]: What is honest goodness and crooked goodness? People nowadays often look upon a conservative and nice person as a good and kind person. However, the ancient sages and saints have shown that they prefer those who are courageous and hold high goals for themselves. [Narrator]: This is because those with courage and high goals are easier to teach and guide, and will someday reach accomplishment in life, while those who are overly careful and conservative will never amount to anything. 【了凡】：至於謹愿之士。雖一鄉皆好。而必以為德之賊。 【至於那些看起來謹慎小心卻是無用的好人，雖然在鄉里，大家都喜歡他；但是因為這種人的個性軟弱，隨波逐流，沒有志氣，所以聖人一定要說這種人，是傷害道德的賊。】 [Liao-Fan]: As for those who appear to be conservative and careful in their everyday actions, they may be liked by all, but because of their weak personality, they easily go along with everything, unable to think for themselves. Sages often speak of them as thieves of virtue. From this we can see that the viewpoint of common folk greatly differs from that of the saints and sages. 是世人之善惡。分明與聖人相反。 【這樣看來，世俗人所說的善惡觀念，分明是和聖人相反。】 [Narrator]: What common people may view as goodness, the saint in fact proclaims to be evil. What appears to be evil to the common people, the saint perceives as true kindness. 【了凡】：推此一端。種種取舍。無有不謬。天地鬼神之福善禍淫。皆與聖人同是非。而不與世俗同取舍。凡欲積善。絕不可徇耳目。惟從心源隱微處。默默洗滌。（「徇」：被利用，受差遣。） 【俗人說是善的，聖人反而說是惡；俗人說是惡的，聖人反而說是善。從這一個觀念，推廣到各種不同的事情來說，俗人所喜歡的，或者是不喜歡的，完全不同於聖人。那還有不錯的嗎？天地鬼神庇佑善人報應惡人，他們都和聖人的看法是一樣的，聖賢以為是對的，天地鬼神也以為是對的；聖賢以為是錯的，天地鬼神也認為是錯的，而不和世俗人採取相同的看法。所以凡要積功德，絕對不可以被耳朵所喜歡的聲音，眼睛所喜歡的景象所利用，而跟著感覺在走；必須要從起心動念隱微的地方，將自己的心，默默地洗滌清淨，不可讓邪惡的念頭，污染了自己的心。】 [Liao-Fan]: This applies to other matters as well. Heaven, earth, gods and spirits all look upon good and evil from the same viewpoint as the sages. The kind man finds himself rewarded for his kind deeds, and the wicked man suffers for his evil-doings. Whatever the sages perceive as right, they too see the same way. They do not view things from the same perspective as do commoners. Therefore, those who wish to accumulate merit must not be deceived and affected by the sights and sounds of the world, and should practice with a true and humble heart, not for the purpose of pleasing others and acquiring respect. One must protect one’s heart from deviant and impure thoughts. 純是濟世之心則為端。苟有一毫媚世之心即為曲。純是愛人之心則為端。有一毫憤世之心即為曲。純是敬人之心則為端。有一毫玩世之心即為曲。（「憤」：心上不平） 【所以全是救濟世人的心，是直；如果存有一些討好世俗的心，就是曲。全是愛人的心，是直；如果有一絲一毫對世人怨恨不平的心，就是曲；全是恭敬別人的心，就是直；如果有一絲玩弄世人的心，就是曲。】 [Narrator]: Honest goodness comes from the thought to help all others, and crooked goodness arises from the thought of greed in wishing only to please people. In harboring love for others, this is being honest, and in harboring thoughts of hatred and jealousy, this is being crooked. Honest goodness is when one is respectful, and crookedness is when one acts without sincerity. 【了凡】：皆當細辨。 【這些都應該細細的去分辨。】 [Liao-Fan]: These should all be carefully differentiated. 【了凡】：何謂陰陽。 【怎樣叫做陰陽呢？】 [Liao-Fan]: What is hidden goodness and visible goodness? 凡為善而人知之。則為陽善。為善而人不知。則為陰德。 【凡是一個人做善事被人知道，叫做陽善；做善事而別人不知道，叫做陰德。】 [Narrator]: When one does something good and people know about it, it is called visible goodness. When one does something good and no one knows about it, it is called hidden virtue. 【了凡】：陰德天報之。陽善享世名。名亦福也。名者。造物所忌。世之享盛名而實不副者。多有奇禍。人之無過咎而橫被惡名者。子孫往往驟發。陰陽之際微矣哉。（「咎」：錯。「驟」：突然。「橫被」：無緣無故披上） 【有陰德的人，上天自然會知道並且會報酬他的。有陽善的人，大家都曉得他，稱讚他，他便享受世上的美名。享受好名聲，雖然也是福，但是名這個東西，為天地所忌，天地是不喜歡愛名之人的。只要看世界上享受極大名聲的人，而他實際上沒有功德，可以稱配他所享受的名聲，常會遭遇到料想不到的橫禍，一個人並沒有過失差錯，反倒被冤枉，無緣無故被人栽上惡名的人，他的子孫，常常會忽然間發達起來。這樣看來，陰德和陽善的分別，真是細微得很，不可以不加以分辨啊！】 [Liao-Fan]: Those with hidden virtues will naturally be known by the heavens and will be rewarded. Those who practice visible goodness are known by people, and they enjoy fame. Fame itself is a fortune, but fame is not favored by heaven and earth, for heaven and earth do not like those who seek fame. We can see that those who have great fame but lack the virtues supporting it will eventually encounter some kind of unthinkable adversity. A person who truly has not done any wrong but continues to be falsely accused by others will have descendants who will suddenly become prosperous and successful. From this, we can see how important it is to know the minute differences between hidden and visible goodness. We cannot afford to mistake them! 【了凡】：何謂是非。魯國之法。魯人有贖人臣妾於諸侯。皆受金於府。子貢贖人而不受金。孔子聞而惡之。曰。（「臣」：不是臣子，而是一個大人家裡的奴隸，古代窮人賣身，男曰臣，女曰妾。「府」：管錢的官） 【怎樣叫做是非呢？從前春秋時代的魯國定有一種法律，凡是魯國人被別的國家抓去做奴隸；若有人肯出錢，把這些人贖回來，就可以向官府領取賞金。但是孔子的學生子貢，他很有錢，雖然也替人贖回被抓去的人回來，子貢卻是不肯接受魯國的賞金。他不肯接受賞金，純粹是幫助他人，本意是很好。但是孔子聽到之後，很不高興的說：】 [Liao-Fan]: In performing good deeds, there is also what seems to be goodness but is actually not, and what does not appear to be goodness but actually is. For example, in the Spring-Autumn Period, there was a country named Lu. Because there were other countries which took their citizens as slaves or servants, the country of Lu made a law which rewarded those who paid the ransom to regain the freedom of their fellow citizens. At that time, Confucius had a very rich student named Dz-gong. Although Dz-gong paid for the ransom to free his people, he did not accept the reward for doing such a deed. He did it out of good intention, seeking only to help others and not for the reward money. But when Confucius heard this, he was very unhappy and scolded him saying: 【孔子】：賜失之矣。夫聖人舉事可以移風易俗。而教道可施於百姓。非獨適己之行也。今魯國富者寡而貧者眾。受金則為不廉。何以相贖乎。自今以後。不復贖人於諸侯矣。（「賜」：子貢名。「適己」：自己痛快稱心） 【這件事子貢做錯了，凡是聖賢無論做什麼事情，都是要做了以後，能把風俗變好；可以教訓，引導百姓做好人，這種事才可以做；不是單單為了自己覺得爽快稱心，就去做的。現在魯國富有的人少，窮苦的人多；若是受了賞金就算是貪財；那末不肯受貪財之名的人，和錢不多的人，就不肯去贖人了。一定要很有錢的人，才會去贖人。如果這樣的話，恐怕從此以後，就不會再有人向諸侯贖人了。】 [Confucius]: You acted wrongly in this matter. When saints and sages undertake anything, they strive to improve the social demeanor, teaching the common folk to be good and decent people. One should not do something just because one feels like it. In the country of Lu, the poor outnumber the wealthy. By refusing the reward, you lead others to think that accepting the reward money is being greedy, thus, all the poor people and others who do not wish to appear greedy will hesitate to pay for ransom in the future. Only very rich people will have a chance to practice this deed. If this happens, no one will pay the ransom to free our people again. 【了凡】：子路拯人於溺。其人謝之以牛。子路受之。孔子喜曰。 【子路看見一個人，跌在水裏，把他救了上來。那個人就送一隻牛來答謝子路，子路就接受了。孔子知道了，很欣慰的說：】 [Liao-Fan]: Another student of Confucius, Dz-lu, once saw a man drowning in the river, and went forth to rescue him. Later, the man thanked him by giving him a cow as a token of gratitude. Dz-lu accepted his gift. Confucius was happy when he heard this, and said: 【孔子】：自今魯國多拯人於溺矣。 【從今以後，魯國就會有很多人，自動到深水大河中去救人了。】 [Confucius]: In the future, people will be willing and eager to help those who are drowning in deep waters or lakes. 【了凡】：自俗眼觀之。子貢不受金為優。子路之受牛為劣。孔子則取由而黜賜焉。乃知人之為善。不論現行而論流弊。不論一時而論久遠。不論一身而論天下。現行雖善。而其流足以害人。則似善而實非也。現行雖不善。而其流足以濟人。則非善而實是也。然此就一節論之耳。（「由」：子路名。「黜」：責備。） 【由這兩件事，用世俗的眼光來看，子貢不接受賞金是好的，子路接受牛，是不好的；不料孔子反而稱讚子路，責備子貢。照這樣看來，要知道一個人做善事，不能只看眼前的效果，而要講究是不是會產生流傳下去的弊端；不能只論一時的影響，而是要講究長遠的是非；不能只論個人的得失，而是要講究它關係天下大眾的影響。 現在所為，雖然是善，但是如果流傳下去，對人有害，那就雖然像善，實在還不是善；現在所行，雖然不是善，但是如果流傳下去，能夠幫助人，那就雖然像不善，實在倒是善！這只不過是拿一件事情來講講罷了。說到其它種種，還有很多。例如：一個人應該做的事情，叫做義，但是有的時候，做該做的事，也會做錯，做了倒反而壞事。】 [Liao-Fan]: If we look from the view of common people, Dz-gong, who did not accept the reward money, was good; and Dz-lu, who accepted the cow was not as good. Who would have known that Confucius praised Dz-lu instead and scolded Dz-gong? From this we can see that those who practice kind deeds must not only look at the present outcome, but should also consider the act’s effect in the long run. One should not only consider one’s own gain and loss, but should look to see the impact made on the public. What we do right now may be good, but with passing years it may inflict harm upon others. Therefore, what seems like goodness may in fact be the opposite, and what appears to be the opposite of goodness, may someday turn out to be goodness done after all. [Liao-Fan]: There are other examples of what appears to be goodness but actually is not. For example: [Narrator]: There are many things that people ought to do, but sometimes these things prove to be better left undone. Forgiveness is a virtue, but it cannot be used without reason and wisdom. If we easily forgive and release a criminal when he has not repented and reformed, we may be letting loose a threat to society, causing more harm than good. In this case, forgiveness would be improper, and the man would be best left in his cell. 【了凡】：他如非義之義。非禮之禮。非信之信。非慈之慈。皆當抉擇。 【譬如壞人，可以不必寬放他，有人寬放他，這事情不能說不是義；但是寬放了這個壞人，反而使他的膽子更大，壞事做得更多；結果旁人受害，自己也犯罪；倒不如不要寬放他，給他儆戒，使他不再犯罪的好，不寬放他，是非義，使這個人不再犯罪，是義，這就叫做非義之義。 禮貌是人人應該有的，但是要有分寸，用禮貌對待人，是禮；但若是過份，反而使人驕傲起來，就成為非禮了，這就叫做非禮之禮。 信用雖要緊，但是也要看狀況，譬如：顧全小的信用，是信；要顧全小信，卻誤了大事；反而使得大信，不能顧全，此變成非信了，這就叫做非信之信。 愛人本來是慈；但是因為過份的慈愛，反而使人膽子變大，闖出大禍，那就變成不慈了，這就叫做非慈之慈。這些問題，都應該細細地加以判斷，分別清楚。】 [Liao-Fan]: Everyone ought to have manners, but they should be carried out with good measure. Overdoing your courtesy to others can result in making them proud and arrogant. In this case, it would not be a good thing. Keeping to one’s word is a virtue, but if one causes bigger trouble through keeping a small promise, then that would be considered improper also. Being loving and compassionate is a wonderful trait, but if compassion is carried out by allowing anything to be done, then the spoiled person would be daring and unrestrained, causing greater harm and trouble in the future. This would be most unmerciful. These are all examples of what appears to be goodness but actually is not, and should be thoroughly contemplated. 【了凡】：何謂偏正。昔呂文懿公初辭相位。歸故里。海內仰之。如泰山北斗。有一鄉人。醉而詈之。呂公不動。謂其僕曰。（「泰山」：位於山東省，中國本部最高的山。「北斗」：北極星） 【什麼叫做偏正呢？從前明朝的宰相呂文懿公剛才辭掉宰相的官位，回到家鄉來，因為他做官清廉，公正，全國的人都敬佩他，就像是群山拱衛著泰山，眾星環繞著北斗星一樣。獨獨有一個鄉下人，喝醉酒後，罵呂公。但是呂公並沒有因為被他罵而生氣，並向自己的用人說：】 [Liao-Fan]: What is improper goodness and proper goodness? In the Ming Dynasty, there once was a prime minister named Wen-yi Lyu, who was a just and lawful man. When he grew old, he retired to his hometown where he was loved and respected by all the people. Once, a drunken villager went to his home and proceeded to insult him. Mr. Lyu was not angered by his words but instead told his servant: 【呂文懿公】：醉者勿與較也。 【這個人喝酒醉了，不要和他計較。】 [Mr. Lyu]: This man is drunk; let’s not give him a hard time. 【了凡】：閉門謝之。逾年。其人犯死刑入獄。（「逾」：過了） 【呂公就關了門，不理睬他。過了一年，這個人犯了死罪入獄，】 [Liao-Fan]: With this, he closed the door and ignored the onslaught of insults. A year later, the same man committed a grave crime and was sent to jail with the death sentence. Upon hearing this, Mr. Lyu said with great remorse: 【呂文懿公】：呂公始悔之曰。使當時稍與計較。送公家責治。可以小懲而大戒。吾當時只欲存心於厚。不謂養成其惡。以至於此。此以善心而行惡事者也。 【呂公方才懊悔的講：若是當時同他計較，將他送到官府治罪，可以藉小懲罰而收到大儆戒的效果，他就不至於犯下死罪了，我當時只想心存厚道，所以就輕輕放過他；那知道，反而養成他天不怕地不怕的亡命之徒的惡性。他以為就算是罵宰相，也沒什麼大不了，一直到犯下死罪，送了性命。這就是存善心，反倒做了惡事的一個例子。】 [Mr. Lyu]: If I had taken him to the authorities for punishment that day when he came to insult me, perhaps this would not have happened. A little discipline then could have prevented the great harm done now, and might have saved him from certain death. At that time, I was only thinking of being kind, and unknowingly nurtured a daring and outrageous character. Since nothing came from his deed of insulting a prime minister, he grew bold and went on committing the crimes which later brought him the death penalty. 【了凡】：又有以惡心而行善事者。 【也有存了惡心，倒反而做了善事的例子。】 [Liao-Fan]: This is an example of doing something bad while having good intentions. 【了凡】：如某家大富。值歲荒。窮民白晝搶粟於市。告之縣。縣不理。窮民愈肆。遂私執而困辱之。眾始定。不然幾亂矣。故善者為正。惡者為偏。人皆知之。其以善心而行惡事者。正中偏也。以惡心而行善事者。偏中正也。（「粟」：米） 【像有一個大富人家，碰到荒年，窮人大白天在市場上搶米；這個大富人家，便告到縣官那裏；縣官偏偏又不受理這個案子，窮人因此膽子更大，愈加放肆橫行了。於是這個大富人家就私底下把搶米的人捉起來關，出他的醜，那些搶米的人，怕這大富人家捉人，反倒安定下來，不再搶了。若不是因為這樣，市面上幾乎大亂了。所以善是正，惡是偏，這是大家都知道的。但是也有存善心，反倒做了惡事的例子。 這是存心雖正，結果變成偏，只可稱做正中的偏；不過也有存惡心，反倒做了善事的例子，這是存心雖是偏，結果反成正，只可稱做偏中的正；】 [Liao-Fan]: There is also an example of those who did good when they in fact intended otherwise. Once, a famine ravished the land, and people stole food from others in broad daylight. A rich family reported their stolen losses from the marketplace to the authorities, but the government did not want to get involved, and did nothing to stop the people. Eventually, the people grew more daring and chaos was imminent. So, the rich family took the law into their own hands and proceeded to catch and punish those who stole from them. In this way, peace returned to the land and the people stole no more from one another. It was with selfish intentions that the rich family acted, but the result of their deeds actually did everyone a great benefit. Therefore, we all know that goodness is proper, and evil is improper; but remember that there are cases where deeds done out of good intention resulted in evil, and deeds done with evil intentions resulted in good. [Narrator]: This is saying that although the intention was proper, it resulted in the improper, and can only be said as the ‘improper within the proper’. However, there is also the case when the improper was intended but resulted in the proper. This is called the ‘proper within the improper’. 【了凡】：不可不知也。 【這種道理大家不可不知道。】 [Liao-Fan]: Everyone ought to know and understand this. 【了凡】：何謂半滿。易曰。 【怎樣叫做半滿的善呢？易經上說：】 [Liao-Fan]: What is half goodness and full goodness? In the I Ching, Book of Change it is said: 善不積。不足以成名。惡不積。不足以滅身。 【一個人不積善，不會成就好的名譽；不積惡，則不會有殺身的大禍。】 [Narrator]: When a person does not accumulate kind deeds, he or she will not attain good fortune. When one does not accumulate evil deeds, he or she will not bring about great adversity. 書曰。商罪貫盈。如貯物於器。勤而積之。則滿。懈而不積。則不滿。此一說也。（「商」：商朝。「貫」：穿） 【書經上說：商朝的罪孽，像穿的一串錢那麼滿；就彷彿收藏東西裝滿了一個容器裏一樣。 如果你很勤奮的，天天去儲積，那麼終有一天就會積滿。商朝由開國一直到紂王，它的過失罪惡，到此時便積滿了，因此迅速亡國。如果懶惰些，不去收藏積存，那就不會滿。 所說的積善積惡，也像儲存東西一樣，這是講半善滿善的一種說法。】 [Liao-Fan]: The accumulation of kind and evil deeds greatly determines our future. If we are diligent in doing kind deeds, it is like collecting things in a container, and with diligence, it will soon be full, and we will have our reward of good fortune. If we are eager in the accumulation of evil deeds and gather that with great diligence, then the container of evil will soon be full and disasters will surely befall. If we are somewhat lazy in our collecting, either in kindness or evil, then the container will be left half filled, and neither good fortune nor adversity will come swiftly. This is one explanation of half goodness and full goodness. 【了凡】：昔有某氏女入寺。欲施而無財。止有錢二文。捐而與之。主席者親為懺悔。及後入宮富貴。攜數千金入寺捨之。主僧惟令其徒回向而己。因問曰。（「主席」：主僧。「徒」：弟子） 【從前有一戶人家的女子，到佛寺裡去，想要送些錢給寺裡，可惜身上沒有多的錢，只有兩文錢，就拿來布施給和尚。而寺裡的首席和尚，竟然親自替她在佛前迴向，求懺悔滅罪。後來這位女子進了皇宮做了貴妃，富貴之後，便帶了幾千兩的銀子來寺裡布施。但是這位主僧，卻只是叫他的徒弟，替那個女子迴向罷了，那個女子不懂前後兩次的布施，為什麼待遇差別如此之大？就問主僧說：】 [Liao-Fan]: Once there was a poor lady who went to visit a Buddhist temple, and wished to make a donation. However, she was so poor that she had only two cents, so she gave these to a monk. To her surprise, the temple’s abbot himself came forth to help her repent for past offenses and dedicate her merits in front of the Buddha. Later on, the same lady was chosen to enter the imperial palace and became a concubine to the emperor. Clad in her riches, the lady once again went to the temple to donate, this time bringing thousands of silver pieces to give. To her dismay, the abbot only sent his disciple to help her dedicate her merits. The lady did not understand, and so questioned the abbot: 【女士】：吾前施錢二文。師親為懺悔。今施數千金。而師不回向。何也。 【我從前不過布施兩文錢，師父就親自替我懺悔。現在我布施了幾千兩銀子，而師父不替我迴向，不知是什麼道理？】 [Lady]: In the past, I only gave two cents in donation, and the Abbot personally helped me repent; today I come with great wealth to give, and the Abbot will not help me perform my dedication, why is it so? 【了凡】：曰。 【主僧回答她說：】 [Liao-Fan]: The abbot answered her saying: 【住持】：前者物雖薄。而施心甚真。非老僧親懺。不足報德。今物雖厚。而施心不若前日之切。令人代懺足矣。 【從前布施的銀子雖然少，但是你布施的心，很真切虔誠，所以非我老和尚親自替你懺悔，便不足以報答你布施的功德；現在布施的錢雖然多，但是你布施的心，不像從前真切，所以叫人代你懺悔，也就夠了。】 [Abbot]: Though the money you gave in the past was scant, it came from a true and sincere heart, and it was necessary for me to repay your sincerity by personally performing your dedications. Today, although your donation is manifolds more, the heart of giving is not quite as true and sincere as before. Therefore, it is fitting and enough that my disciple perform your dedications for you. 【了凡】：此千金為半。而二文為滿也。 【這就是幾千兩銀子的布施，只算是半善；而兩文錢的布施，卻算是滿善，道理在此。】 [Liao-Fan]: This is the example of how thousands of silver pieces are only considered as half goodness, and two cents as full. 【了凡】：鍾離授丹於呂祖。點鐵為金。可以濟世。呂問曰。（「鍾離」：漢朝人，後來成仙。「呂祖」：呂洞賓，後來跟鍾離去陜西終南山修行得道） 【又漢朝人鍾離把他鍊丹的方法，傳給呂洞賓，用丹點在鐵上，就能變成黃金，可拿來救濟世上的窮人。呂洞賓問鍾離說：】 [Liao-Fan]: Another example is of Li Jung, an immortal of the Han Dynasty. He was teaching his student, Dong-bing Lyu, the art of transforming steel into gold. They would use this gold to help the poor. Dong-bing asked his teacher: 【呂洞賓】：終變否。 【變了金，到底會不會再變回鐵呢？】 [Dong-bing]: Will the gold ever change back to steel again? 【了凡】：曰。 【鍾離回答說：】 [Liao-Fan]: Li Jung answered him saying: 【鐘離】：五百年後，當復本質。 【五百年以後，仍舊要變回原來的鐵。】 [Li Jung]: After five hundred years, it will return to its original form. 【了凡】：呂曰。 【呂洞賓又說：】 [Liao-Fan]: Dong-bing then said: 【呂洞賓】：如此則害五百年後人矣。吾不願為也。 【像這樣就會害了五百年以後的人，我不願意做這樣的事情。】 [Mr. Lyu]: In this case, I don’t want to learn this art, it will harm those who possess the gold five hundred years from now. 【了凡】：曰。 【鍾離教呂洞賓點鐵成金，不過是試試他的心而已。現在知道呂洞賓存心善良，所以對他說：】 [Liao-Fan]: In actuality, Li Jung was only testing the goodness of his student’s heart, and happy with the results, he said: 【鐘離】：修仙要積三千功行。汝此一言。三千功行已滿矣。 【修仙要積滿三千件功德，聽你這句話，你的三千件功德，已經做圓滿了。】 [Li Jung]: To become an immortal, one must complete three thousand virtuous deeds. What you have just said came from a truly kind heart: your three thousand deeds are fulfilled! 【了凡】：此又一說也。 【這是半善滿善的又一種講法。】 [Liao-Fan]: This was another example of half goodness and whole goodness. 【了凡】：又為善而心不著善。則隨所成就。皆得圓滿。心著於善。雖終身勤勵。止於半善而已。 【一個人做善事，而內心不可叨念，彷彿自己做了一件不得了的善事；能夠這樣，那麼就隨便你所做的任何善事，都能夠成功而且圓滿。若是做了件善事，這個心就牢記在這件善事上；雖然一生都很勤勉的做善事，也只不過是半善而已。】 [Liao-Fan]: When we perform a kind deed, it is best if we can do it out of our innermost sincerity, not seeking rewards or noting in our minds how much we have done. If we practice thus, then all our good deeds will reach fulfillment and success. If, instead, we always think of the deeds we have performed, looking for a reward of some kind, then no matter how diligently we practice in an entire lifetime, the deeds will still be considered as half goodness. 譬如以財濟人。內不見己。外不見人。中不見所施之物。是謂三輪體空。是謂一心清淨。則斗粟可以種無涯之福。一文可以消千劫之罪。 【譬如拿錢去救濟人，要內不見布施的我，外不見受布施的人，中不見布施的錢，這纔叫做三輪體空，也叫做一心清淨。如果能夠這樣的布施，縱使布施不過一斗米，也可以種下無邊無涯的福了；即使布施一文錢，也可以消除一千劫所造的罪了。】 [Narrator]: For example, when we donate money to the poor, we can practice what is called ‘pure donation’. In this type of giving, we do not linger on the thought of ‘I’, who is giving; or dwell on the importance of the object I am giving away; or think of who the receiver is. We are simply giving, and it is out of true sincerity and respect. When we give with ‘pure donation’, then one dou of rice can bring boundless fortune, and the merit from giving one cent can wipe away the sins from a thousand kalpas. 【了凡】：倘此心未忘。雖黃金萬鎰。福不滿也。此又一說也。（「鎰」：二十兩） 【如果這個心，不能夠忘掉所做的善事；雖然用了二十萬兩黃金去救濟別人，還是不能夠得到圓滿的福。這又是一種說法。】 [Liao-Fan]: If we always keep in mind the good we have done, and expect rewards for our actions, then even a donation of two hundred thousand gold pieces would still not bear us the reward of a fully good fortune. This is another way of explaining half goodness and full goodness. 【了凡】：何謂大小。昔衛仲達為館職。被攝至冥司。主者命吏呈善惡二錄。比至。則惡錄盈庭。其善錄一軸。僅如筯而已。索秤稱之。則盈庭者反輕。而如筯者反重。仲達曰。（「館」：機關，過去翰林院，常稱做翰林館。「攝」：引、捉。「冥司」：陰間。「錄」：冊子。「庭」：堂前，俗稱天井。「軸」：捲。「筯」：筷子） 【怎麼叫做大善小善呢？從前有一個人，叫做衛仲達，在翰林院裏做官，有一次被鬼卒把他的魂引到了陰間。陰間的主審判官，吩咐手下的書辦，把他在陽間所做的善事、惡事兩種冊子送上來。等冊子送到一看，他的惡事冊子，多得竟攤滿了一院子；而善事的冊子，只不過像一支筷子那樣小罷了。主審官又吩咐拿秤來秤秤看，那攤滿院子的惡冊子反而比較輕，而像一支筷子那樣小捲的善冊子反而比較重。衛仲達就問說：】 [Liao-Fan]: What is big goodness and small goodness? Once there was a high ranking official named Jung-da Wei, who was led into the spirit world to be judged for his good and bad deeds. The judge there ordered for his records of good and evil to be brought out. When the records arrived, Jung-da was astounded at the courtyard full of his bad records, and at the single scroll which contained his good deeds. The official then ordered for the two to be weighed on the scale. Surprisingly, the bad records which had filled the courtyard were lighter than the single scroll of good deeds, which was only as thin as a chopstick. Jung-da asked the judge: 【仲達】：某年未四十。安得過惡如是多乎。（「某」：自稱） 【我年紀還不到四十歲，那會犯了這麼多的過失罪惡呢？】 [Jung-da]: I’m barely forty years old, how could I have committed so many wrongdoings? 【了凡】：曰。 【主審官說：】 [Liao-Fan]: The judge answered him, saying: 【判官】：一念不正即是。不待犯也。 【只要一個念頭不正，就是罪惡，不必等到你去犯，譬如看見女色，動了壞念頭，那就是犯過。】 [Judge]: When you give rise to a single thought that is improper, it is considered a bad offense there and then, it does not have to be carried out through action to be counted as a wrong. For example, when you see a pretty lady and give rise to improper thoughts, that is considered an offense. 【了凡】：因問軸中所書何事。曰。 【因此，衛仲達就問這善冊子裡記的是什麼。主審官說：】 [Liao-Fan]: Jung-da then asked him what was recorded in the single scroll of good deeds which outweighed the evil deeds. The judge replied: 【判官】：朝廷嘗興大工。修三山石橋。君上疏諫之。此疏稿也。（「三山」：福建省福州府，過去叫三山。「疏」：奏章） 【皇帝有一次曾想要興建大工程，修三山地方的石橋。你上奏勸皇帝不要修，免得勞民傷財，這就是你的奏章底稿。】 [Judge]: Once the Emperor planned to build a great stone bridge, and you proposed against the project due to the hardship and toil it would cause the tens and thousands of people needed for the work. This is a copy of your proposal to the Emperor. 【了凡】：仲達曰。 【衛仲達說：】 [Liao-Fan]: Jung-da said: 【仲達】：某雖言。朝廷不從。於事無補。而能有如是之力。 【我雖然講過，但是皇帝不聽，還是動工了，對那件事情的進行，並沒有發生作用，這份疏表怎麼還能有這樣大的力量呢？】 [Jung-da]: I did make the proposal, but the Emperor dismissed it and began the project anyway. My proposal had no effect on the matter at all, how can it bear so much weight against my numerous offenses? 【了凡】：曰。 【主審官說：】 [Liao-Fan]: The judge replied: 【判官】：朝廷雖不從。君之一念。已在萬民。向使聽從。善力更大矣。 【皇帝雖然沒有聽你的建議，但是你這個念頭，目的是要使千萬百姓免去勞役；倘使皇帝聽你的，那善的力量就更大了哩！】 [Judge]: Although the Emperor did not take your suggestion, that one thought of kindness you bore for the tens and thousands of people was very great. If the Emperor had listened to you, then the good performed would be even greater. 【了凡】：故志在天下國家。則善雖少而大。苟在一身。雖多亦小。 【所以立志做善事，目的在利益天下國家百姓，那麼善事縱然小，功德卻很大。假使只為了利益自己一個人，那麼善事雖然多，功德卻很小。】 [Liao-Fan]: Therefore, when one is determined to do good for the benefit of all people, then a small deed can reap great merits. If one thinks only about benefiting oneself, then even if many deeds of kindness are performed, the merit would still be small. 【了凡】：何謂難易。先儒謂 【怎麼叫做難行易行的善呢？從前有學問的讀書人，都說：】 [Liao-Fan]: What is difficult goodness and easy goodness? The knowledgeable scholars of the past used to say: 【先儒】：克己須從難克處克將去。 【克制自己的私欲，要從難除去的地方先除起。】 [Scholar]: When one wishes to conquer one’s greed and desires, one should start with the most difficult to overcome. 【了凡】：夫子論為仁。亦曰先難。必如江西舒翁。捨二年僅得之束修。代償官銀。而全人夫婦。（「束修」：薪水） 【孔子的弟子樊遲，問孔子怎樣叫作仁？孔子也說，先要從難的地方下工夫。 孔子所說的難，也就是除掉私心；並應該先從最難做，最難克除的地方做起。一定要像江西的一位舒老先生，他在別人家教書，把兩年所僅得的薪水，幫助一戶窮人，還了他們所欠公家的錢，而免除他們夫婦被拆散的悲劇。】 [Liao-Fan]: Fan-chr, a student of Confucius, once asked his teacher how to cultivate one’s humanity to its fullest. Confucius replied, “Start with what’s most difficult to practice”. What Confucius meant by the most difficult, was to sever the selfish mind, and one should practice that by conquering what is most difficult for oneself to conquer. We should practice like the old teacher, Mr. Su of Chiangshi, who gave two years worth of salary to a poor family who owed money to the government. Thus he saved them from being torn apart should the husband be taken to prison. 【了凡】：與邯鄲張翁。 【又像河北邯鄲縣的張老先生，】 [Liao-Fan]: Another example is Mr. Jang from Her-bei: [Narrator]: Mr. Jang saw an extremely poor man who had to mortgage his wife and child, and had no money for their redemption. If he was unable to pay for their return, the mother and child could both lose their lives. 【了凡】：捨十年所積之錢。代完贖銀。而活人妻子。 【看到一個窮人，把妻兒抵押了，錢也用了；若是沒有錢去贖回，恐怕妻兒都要活不成了。於是就捨棄他十年的積蓄，替這個窮人贖回他的妻兒。】 [Liao-Fan]: Therefore, Mr. Jang gave his ten years of savings to the poor man so the family could be reunited. 皆所謂難捨處能捨也。 【像舒老先生，張老先生，都是在最難處，旁人不容易捨的，他們竟然能夠捨得啊！】 [Narrator]: Such examples as Mr. Su and Mr. Jang are rare, for they have given what is most difficult to give, and what others could not sacrifice, they did so willingly. 【了凡】：如鎮江靳翁。雖年老無子。不忍以幼女為妾。而還之鄰。 【又像江蘇省鎮江的一位靳老先生，雖然年老沒有兒子，他的窮鄰居，願意把一個年輕的女兒給他做妾，願能為他生一個兒子。但是這位靳老先生不忍心誤了她的青春，還是拒絕了，就把這女子送還鄰居。】 [Liao-Fan]: Another example is Mr. Jin from Chiangsu Province. He was old and without any sons, so his neighbor offered their young daughter in marriage to him, to give him descendants to carry on his lineage. But Mr. Jin could not bear to ruin the otherwise bright and long future of this young girl, and so refused the offer and sent her back home. 此難忍處能忍也。故天降之福亦厚。 【這又是很難忍處，而能夠忍得住的事呀！所以上天賜給他們這幾位老先生的福，也特別的豐厚。】 [Narrator]: This is another example of being able to overcome what is most difficult to conquer in oneself. Therefore, the heavens showered down fortune which was especially good for these three old men. 【了凡】：凡有財有勢者。其立德皆易。易而不為。是為自暴。貧賤作福皆難。難而能為。斯可貴耳。（「自暴」：自己糟蹋自己） 【凡是有財有勢的人要立些功德，比平常人來得容易，但是容易做，卻不肯做，那就叫做自暴自棄了；而沒錢沒勢的窮人，要做些福，都會有很大的因難，難做到而能做到，這才真是可貴啊！】 [Liao-Fan]: It is easier to accumulate merit and virtue for those who have money and power than for those who are poor. But if one refuses to cultivate kindness even when it’s easy and when one has the chance to do so, then it would truly be a shame. For those who are poor and without prestige, doing kind things for others is a great difficulty; but if in this difficulty one can still manage to help others, then it is a great virtue, and the merits gained would be boundless. 【了凡】：隨緣濟眾。其類至繁。約言其綱。大約有十。第一與人為善。 【我們為人處事，應該遇到機緣，就去做救濟眾人的事。不過救濟眾人，也不是容易的事，救濟眾人的種類很多，簡單的說，它的重要項目，大約有十種： 第一、是與人為善。】 [Liao-Fan]: In being a moral person and dealing with affairs, we should help others whenever the opportunity presents itself. You should know that helping others is not such an easy task, and that there are many ways to do it. In short, the ways of helping others can be simplified into ten important categories. The first is ‘supporting the practice of kindness’: [Narrator]: When we see people trying to do a little kindness, we should assist them in their deeds and help their kindness grow. When we see others who wish to do good but cannot accomplish it on their own, we should lend a hand and help them succeed. This is the way we can cultivate ‘supporting the practice of kindness’. 【了凡】：第二愛敬存心。 【第二、是愛敬存心。就是對比我學問好，年紀大，輩份高的人，都應該心存敬重。而對比我年紀小，輩份低，景況窮的人，都該要心存愛護。】 [Liao-Fan]: The second category is ‘harboring love and respect’: [Narrator]: We should harbor respect towards those who are more knowledgeable, older, or of higher status than we are. For those who are younger, less fortunate, or of lower status, we should harbor a mind of loving care. 【了凡】：第三成人之美。 【第三、是成人之美。譬如一個人，要做件好事，尚未決定，則應該勸他盡心盡力去做。別人做善事時，遇到了阻礙；不能成功，應想方法，指引他，勸導他使得他成功；而不可生嫉妒心去破壞他。】 [Liao-Fan]: The third category is ‘helping others succeed’: [Narrator]: When we see a person who is considering whether or not to do a good deed, we should persuade him to put all his effort into doing it. When others meet with difficulties in practicing kindness, we should help think of ways to overcome the difficulty and guide them to success. We must not be jealous at the accomplishments of others, nor try to sabotage their good acts. 【了凡】：第四勸人為善。 【第四、是勸人為善。碰到做惡的人，要勸他做惡絕對有苦報，惡事萬萬做不得。碰到不肯為善，或只肯做些小善的人，就要勸他行善絕對有好報，善事不但要做，而且還要做得多。做得大。】 [Liao-Fan]: The fourth category is ‘persuading others to practice kindness’: [Narrator]: When we meet a person who is doing evil, we should tell him that doing evil will only result in great suffering and painful retribution, and that he should avoid doing so at all costs. We should tell people who refuse to practice kindness or are only willing to practice a little kindness, that doing kind deeds will definitely have its rewards, and that kindness not only has to be cultivated, but must be cultivated constantly and on a large scale. 【了凡】：第五救人危急。 【第五、是救人危急。一般人大多喜歡錦上添花，而缺乏雪中送炭的精神；而當遇到他人最危險、最困難、最緊急的關頭；能及時向他伸出援手，拉他一把，出錢出力幫他解決危急困境，可以說是功德無童，但是不可以引以為傲！】 [Liao-Fan]: The fifth category is ‘helping those in desperate need’: [Narrator]: Most people tend to give when there is no need to give and refuse to give when there really is a need. When we meet people who are in great difficulties, emergencies, or dangers, we should lend them a hand and help in whatever way we can to bring them out of their difficult times. The merits accrued from helping others in times of desperate need are boundless indeed. However, one should not become proud and conceited for doing such deeds. 【了凡】：第六興建大利。 【第六、是興建大利。有大利益的事情，自然要有大力量的人，才能做到，一個人既然有大力量，自然應該做些大利益的事情，以利益大眾。例如，修築水利系統、救濟大災害等等。但是沒有大力量的人，也可以做到的。譬如，發現河堤上有個小洞，水從洞裡冒出，只要用些泥土、小石，將小洞塞住，這堤防就可以保住，而防止了水災的發生。事情雖然小，但這種功效也是不可忽視的。】 [Liao-Fan]: The sixth category is ‘developing public projects for the greater benefit of the people’: [Narrator]: Projects which will bring great benefit to the public usually have to be performed by those with great influence and power. If a person has this capacity, such as rebuilding the water system or assisting a disaster area, then he ought to do it for the benefit of the general public. Those without such influence and power can do great deeds, too. For example, when one sees a small leak in the dam, one can use pebbles and dirt to stop the water and prevent disastrous flooding. Though this act may be small, the effect will not go unnoticed. 【了凡】：第七捨財作福。 【第七、是捨財作福。俗語說：人為財死，世人的心總愛錢財，求財都來不及，還願意去捨財濟助他人嗎？因此，能捨財去消除別人的災難，解決他人的危急；對一個常人而言，已不簡單，對窮人來說，則更加了不起。如按因果來講，「捨得，捨得，有捨才有得。」「捨不得，捨不得，不捨就不得。」；做一分善事就會有一分福報，所以不必憂愁我們會因為捨財救人，而使自己的生活陷於絕路。】 [Liao-Fan]: The seventh category is ‘giving through donation’: [Narrator]: People of this world love, seek, and even die for money. Who is actually willing to help others by giving their own money away? When we recognize the difficulty involved in donation, we can come to appreciate the rarity of the man who is willing to give for the purpose of helping others in need. He is an even greater man in the eyes of the poor. According to the law of cause and effect, ‘those who give will in turn receive’, and ‘those who refuse to give will not receive’. When we cultivate one share of kindness, we will receive one share of fortune, there is no need to worry about having nothing left when we give to help others. 【了凡】：第八護持正法。 【第八、是護持正法。這種法，就是指各種宗教的法。宗教有正，有邪，法也有正，有邪，邪教的邪法最害人心，自然應該禁止。而具有正知正見的佛法，是最容易勸導人心，挽回善良風俗的。若是有人破壞，一定要用全力保護維持，不可讓他破壞。】 [Liao-Fan]: The eighth category is ‘protecting the proper teachings’: [Narrator]: This is referring to the teachings of different religions. We must be able to differentiate between proper religions and deviant religions, and between proper teachings and deviant teachings. The teachings of deviant religions do great harm to people’s minds and hearts, and naturally should be abolished. On the other hand, teachings with proper wisdom and views, such as that of Buddhism, which promotes kindness and goodness in society, should be supported. If one happens to see others in the act of destroying such proper teachings, one must put forth a complete effort to protect and uphold these teachings. 【了凡】：第九敬重尊長。 【第九、是敬重尊長。凡是學問深，見識好，職位高，輩份大，年紀老的人，都稱為尊長。自己都應該敬重，不可看輕他們。】 [Liao-Fan]: The ninth category is ‘respecting our elders’: [Narrator]: Anyone who is deeply learned, knowledgeable, has high prestige, or is older than us is considered to be an elder, and should be highly regarded and respected. 【了凡】：第十愛惜物命。 【第十、是愛惜物命。凡是有性命的東西，雖然像螞蟻那樣小；也是有知覺的，曉得痛苦，並且也會貪生怕死。應該要哀憐它們，怎可以亂殺亂吃呢？有人常說：這些東雨，本來就是要給人吃的。這話是最不通的，而且都是貪吃的人所造出來的話。】 [Liao-Fan]: The tenth category is ‘loving and cherishing all living things’: [Narrator]: We should feel sympathy for all living creatures, even the tiny ants, who know of suffering and are afraid to die. How can we kill and eat living beings and not feel the least sorry? Some people even say that these things were meant for human consumption, but there is no logic in this argument, and it is only an excuse for those who desire meat. [Liao-Fan]: I have only explained the above ten categories in summary, now I will explain each in detail and example: 【了凡】：何謂與人為善。 昔舜在雷澤。見漁者皆取深潭厚澤。而老弱則漁於急流淺灘之中。惻然哀之。往而漁焉。見爭者。皆匿其過而不談。見有讓者。則揄揚而取法之。朞年。皆以深潭厚澤相讓矣。（「雷澤」：一個澤的名稱，在山東省。「惻然」：悲傷。「揄揚」：稱讚宣揚。「朞年」：滿一年） 【以上所講的十種，只是大概的說明，下面是分別舉例比喻：什麼叫做與人善呢？從前虞朝的舜，在他還沒有做君主之前，在雷澤湖邊看見年輕力壯的漁夫，都揀湖水深處去抓魚；而那些年老體弱的漁夫，都在水流得急而且水較淺的地方抓。 水流急，魚停不住，淺灘水少，魚也比較少，不比水深的地方，魚都在那裡游來游去，較容易抓。那些年輕力壯的漁夫，把好的地方都佔去了。 舜看見這種情形，心裡面悲傷哀憐他們。就想了一個方法，他自己也去參加捉魚，看見那些喜歡搶奪的人，就把他們的過失，掩蓋起來，而且也不對外講；看見那些比較謙讓的漁夫，便到處稱讚他們，拿他們作榜樣，並且學習他們謙讓的模樣。像這樣，舜抓了一年的魚，大家都把水深魚多的地方讓出來了。】 [Liao-Fan]: What is meant by “supporting the practice of kindness”? In the Yu Dynasty, there once was an emperor by the name of Shwun. One day, before he became emperor, Shwun was watching some fishermen on Lake Lei-ze. He noticed that all the younger and stronger fishermen took the spots where the water was deep and the fish were abundant, while the older and weaker fishermen were left with the rapids and shallow water, where there were very few fish. When Shwun saw this situation, he felt sympathy for the older and weaker fishermen, and thought of a way turn the situation around. He decided to join in the fishing party to set an example for the others. Whenever he saw fishermen plunder good fishing spots, he would conceal their faults and never even spoke of that their selfishness. When he saw those who were humble and yielding, he praised them everywhere he went and even followed their humble and polite ways. Shwun stayed and fished like this for a whole year until the other fishermen got into the habit of yielding good fishing spots to others. [Narrator]: This story of Shwun is only an example to show how a person influences others through his actions, and not through his speech. It is not meant to encourage people to fish, because fishing is an act of killing. Please refrain from sports which take the lives of others. 【了凡】：夫以舜之明哲。豈不能出一言教眾人哉。乃不以言教而以身轉之。此良工苦心也。 【舜的故事，不過是用來勸化人，不可誤解是勸人抓魚。要知道抓魚是犯殺生的罪孽，千萬不可以做啊！那麼像舜那樣明白聰明的聖人，那有不能說幾句中肯的話，來教化眾人，而一定要親自參與呢？要曉得舜不用言語來教化眾人，而是拿自己做榜樣，使人見了，感覺漸愧而改變自己的自私心理，這真是一個用心良苦的人，所費的苦心啊！】 [Liao-Fan]: A wise and intelligent man such as Shwun could have easily influenced others with a few words of advice. Why didn’t he just say something instead of personally joining the gathering? You should understand that Shwun didn’t want to use words, but preferred to set an example for others through his own actions. Shwun wanted those fishermen to feel ashamed of their own selfish behavior and change on their own accord. This really shows how deep and sincere Shwun’s wish was for others to practice kindness. 【了凡】：吾輩處末世。勿以己之長而蓋人。勿以己之善而形人。勿以己之多能而困人。收斂才智。若無若虛。見人過失。且涵容而掩覆之。一則令其可改。一則令其有所顧忌而不敢縱。見人有微長可取。小善可錄。翻然舍己而從之。且為艷稱而廣述之。凡日用間。發一言。行一事。全不為自己起念。全是為物立則。此大人天下為公之度也。（「形」：比。「困」：為難。「艷稱」：稱讚得很好聽。「則」：規則、典範） 【我們生在這個人心風俗敗壞，末世的時代，做人很不容易；因此，旁人有不如我的地方，不可以把自己的長處，去蓋過旁人？旁人有不善的事情，不可以把自己的善，來和別人比較。別人能力不及我，不可以把自己有的能力，來為難別人。自己縱然有才幹聰明，也要收斂起來，不可以外露炫耀，應該像是沒有聰明才幹一樣。要看聰明才幹，都是虛的、假的一般。 看到別人有過失，姑且替他包含掩蓋。像這樣，一方面可以使他有改過自新的機會，另一方面可以使他有所顧忌而不敢放肆。若是扯破面皮，他就沒有顧忌了。 看到旁人有些小的長處，可以學的，或有小的善心善事，可以記的；都應該立刻翻轉過來，放下自己的主見，學他的長處；並且稱讚他，替他廣為傳揚。一個人在平常生活中，不論講句話或是做件事，全不可為自己，發起一種自私自利的念頭；而要全為了社會大眾設想，立出一種規則來，使大眾可以通行遵守，這才是一位偉大的人物，把天下所有的一切，都看做是公而不是私的度量呢！】 [Liao-Fan]: In today’s era of low morality, social breakdown, and loss of proper thinking, it is most difficult to find a good standard of behavior. Therefore, when those around us have shortcomings, we should not use our good points to highlight their deficiencies. When the other person is unkind, we should not use our kindness to measure or compare ourselves to them. When others are not as capable as we are, we should not purposely surpass them with our abilities. Even when we are intelligent and competent, these skills should be kept hidden and not boasted of. Instead, we should behave even more humbly than ever. We should look upon our skills and abilities as unimportant, false, and unreal. When someone makes a mistake, we should tolerate it and conceal it, giving them a chance to reform without losing their self-respect. When we let the person keep his dignity, he will be even more careful of his actions in the future. When we see strengths and kindness in others, we should learn from them, praise them, and make their goodness known to others. In daily life, we should refrain from speaking and acting with selfish intentions, but instead seek to benefit society and the public. We can make beneficial laws and regulations for the public to follow. These are the qualities of a great man, since he thinks of the public welfare as more important than his own. 【了凡】：何謂愛敬存心。君子與小人。就形跡觀。常易相混。惟一點存心處。則善惡懸絕。判然如黑白之相反。故曰。（「形跡」：外貌。「懸絕」：相去很遠。「判然」：大不相同） 【什麼叫做愛敬存心呢？君子與小人，從外貌來看，常常容易混淆，分不出真假。因為小人會裝假仁假義，冒充君子。不過這一點存心，君子是善，小人是惡，彼此相去很遠，他們的分別，就像黑白兩種顏色，絕對相反不同。所以孟子說：】 [Liao-Fan]: What is meant by “harboring love and respect for others”? Sometimes it is hard to tell from appearance whether a person is a gentleman or a scoundrel, since scoundrels can pretend to be gentlemen. The difference lies in their intentions: A gentleman’s intentions are good, and a scoundrel’s intentions are wicked. There is a great distance between the two, and they are as different as black and white. Mencius has said, 【孟子】：君子所以異於人者。以其存心也。 【君子所以與常人不同的地方，就是他們的存心啊！】 [Mencius]: The difference between gentlemen and common people lies in their intentions. 【了凡】：君子所存之心。只是愛人敬人之心。蓋人有親疏貴賤。有智愚賢不肖。萬品不齊。皆吾同胞。皆吾一體。孰非當敬愛者。愛敬眾人。即是愛敬聖賢。能通眾人之志。即是通聖賢之志。何者。（「疏」：遠，不親近。「品」：類） 【君子所存的心，只有愛人敬人的心。因為人雖然有親近的，疏遠的，有尊貴的，有低微的，有聰明的，有愚笨的，有道德的，有下流的，千千萬萬不同的種類；但是這些都是我們的同胞，都是和我們一樣有生命，有血有肉，有感情，那一個不該愛他敬他呢？愛敬眾人，就是愛敬聖賢人。能夠明白眾人的意思，就是明白聖賢人的意思。為什麼呢？】 [Liao-Fan]: A gentleman’s heart is only filled with love and respect for others. There are thousands of different types of people in this world, some close to us, some strangers, some in high class and some in low, some smart while others are not, and some virtuous and some sinful, but nevertheless, they are our fellow mankind. They are like us, alive in flesh and blood, and they have feelings. There isn’t a single person whom I should hate and disrespect. When your hearts are full of love and respect for others, it is the same as if your heart is full of love and respect for the saints and sages. When you understand others, it is the same as if you understand the saints and sages. Why? 聖賢之志。本欲斯世斯人。各得其所。 【因為聖賢人本來都希望世界上的人，大家都能安居樂業，過著幸福美滿的生活。】 [Narrator]: Because all the saints and sages want the people on this earth to lead happy, productive lives. 【了凡】：吾合愛合敬。而安一世之人。即是為聖賢而安之也。 【所以，我們能夠處處愛人，處處敬人，使世上的人，個個平安幸福，也就可以說是代替聖賢，使這個世界上人人都能夠平安快樂了。】 [Liao-Fan]: Therefore, if we can love and respect people and make them peaceful and happy, we are doing the job of a saint or sage. 【了凡】：何謂成人之美。玉之在石。抵擲則瓦礫。追琢則圭璋。故凡見人行一善事。或其人志可取而資可進。皆須誘掖而成就之。或為之獎借。或為之維持。或為白其誣而分其謗。務使之成立而後已。（「抵擲」：亂丟拋棄。「礫」：石子。「追」：同琢，雕刻之意。「圭」：古代賞賜臣子的一種瑞玉，上頭是尖的，下頭是方的。「璋」：圭切成兩半謂之。「資」：資質。「誘」：勸導。「掖」：攙扶。「獎借」：誇讚。「誣」：冤枉） 【什麼叫做成人之美呢？舉例來說，若是把一塊裏面有玉的石頭，隨便亂丟拋棄，那末這塊裏面有玉的石頭也只不過是和瓦片碎石一樣，一文不值了。若是把它好好的加以雕刻琢磨，那麼這塊石頭，就成了非常珍貴的寶物圭璋了。 一個人也是如此，也全是靠勸導提引；所以看到別人做一件善事，或者是這個人立志向上，而且他的資質足以造就的話；都應該好好的引導他，提拔他，使他成為社會上的有用之材；或是誇讚他，激勵他，扶持他；若是有人冤枉他，就替他辯解冤屈，來替他分擔無端被人惡意的毀謗，可以設法代替他，頂替他被毀謗的事實，減輕他所受的毀謗，這樣叫做分謗。 務必要使他能夠立身於社會，而後才算是盡了我的心意。】 [Liao-Fan]: What is meant by “helping others to succeed”? If we cast away raw jade, then this stone would be like any other worthless stone. But if we were to carve and polish it, it could be transformed into a priceless jewel. It is the same with people. A person needs to be taught and guided, just as a jade needs to be carved and polished. When we see someone whom we feel has good potentials doing a good deed or working towards a proper goal, we should guide, support, praise, and encourage him, helping him succeed in his endeavors. If he is ever wrongly accused by another, you should try to clear his name and share his burden of slander. Only when you have helped him stand on his feet and be a part of good society would you have fulfilled your share of responsibility in helping others to succeed. 【了凡】：大抵人各惡其非類。鄉人之善者少。不善者多。善人在俗。亦難自立。且豪傑錚錚。不甚修形跡。多易指摘。故善事常易敗。而善人常得謗。惟仁人長者。匡直而輔翼之。其功德最宏。（「大抵」：大概。「錚錚」：像鐵一樣的聲音，後漢光武帝曾以”鐵中錚錚”稱讚劉盆子，形容不同於常人的意思。「指摘」：說常道短。「翼」：保護。「宏」：大） 【大概通常的人，對那些與他不同類型的人，都不免有厭惡感，譬如小人恨君子，惡人恨善人。 在同一個鄉里的人，都是善的少，不善的多。正因為不善的人很多，善的人少，所以善人處在世俗裡，常常被惡人欺負，很難立得住腳，況且豪傑的性情大多數是剛正不屈，並且不注意修飾外表，世俗的眼光，見識不高，只看外表，就說長道短，隨便批評；所以做善事也常常容易失敗，善人也常常被人毀謗。 碰到這種情形，只有全靠仁人長者，才能糾正那些邪惡不正的人，教導指引他們改邪歸正，保護，幫助善人，使他成立；像這樣闢邪顯正的功德，實在是最大的。】 [Liao-Fan]: Most people dislike those who are different from them, such as a scoundrel versus a gentleman, and a bad person versus a good person. In villages, there are usually more bad people than virtuous ones. Since there are always more bad people around, a good person is often being taken advantage of; therefore a good person often has a hard time standing on his own. Frankness and modesty are the usual characteristics of good people, they do not care much for their appearance. On the other hand, an average uneducated person often only pays attention to another’s outer appearance. They like to gossip and make accusations; so, striving to do good turns out to be quite a challenge. A good person can easily be wrongly accused. When this happens, it is entirely up to the goodness and virtue of an elder to correct the actions of those who are bad and guide them back to the right track. It is also up to these elders to protect and help those who are good and need to stand on their own. The highest merit is achieved by those who can preserve good and rid evil. 【了凡】：何謂勸人為善。生為人類。孰無良心。世路役役。最易沒溺。凡與人相處。當方便提撕。開其迷惑。譬猶長夜大夢。而令之一覺。譬猶久陷煩惱。而拔之清涼。為惠最溥。韓愈云。（「孰」：誰。「役役」：忙碌追求，不停止。「提撕」：提醒使覺悟。「溥」：周徧、大） 【什麼叫做勸人為善呢？一個人既然已經生在世上做了人，那一個沒有良心呢？但是因為汲汲地追逐名利，弄得這世間忙碌不堪，只要有名利可得，就昧著良心，不擇手段地去做，那就最容易墮落了。所以與別人往來相處，時常要留心觀察這個人，若是看他要墮落了，就應該隨時隨地提醒他，警告他，開發他的糊塗昏亂。 譬如，看見他在長夜裡做了一個渾渾噩噩的夢，一定要叫喚他，使他趕快清醒；又譬如看他長久陷落在煩惱裡，一定要提拔他一把，使他頭腦轉為清涼。 像這樣以恩待人，功德是最周遍，最廣大的了。從前韓文公曾說：】 [Liao-Fan]: What is meant by “persuading others to practice kindness”? As humans, we all have a conscience, but chasing after wealth and fame has kept us constantly busy and forgetful of our good conscience. We have become willing to stoop very low as long there is something to be gained from it. When a friend is about to ignore his good conscience to do something unworthy, we must remind and warn him, hoping to wake him from his muddled state of mind. It is like waking up someone when they’re having a nightmare, it is up to us shake them into reality. When a person is undergoing a long spell of depression, we have to pull him out of it and help him clear his mind. You are most virtuous if you can treat your friends with such kindness. A scholar named Han once said: 【韓愈】：一時勸人以口。百世勸人以書。 【以口來勸人，只在一時，事情過了，也就忘了；並且別處的人，無法聽到。以書來勸人，可以流傳到百世，並且能傳遍世界；所以做善書，有立言的大功德。】 [Scholar Han]: By word of mouth, one can only persuade and influence another momentarily. It is easily forgotten with the passing of time and events. No one else would have heard what you have said. If you can persuade and influence others through written works, your words can be passed on for hundreds of generations around the world. Therefore, writing to promote virtue is an act of great speech, and is a most virtuous deed. 【了凡】：較之與人為善。雖有形跡。然對證發藥。時有奇效。不可廢也。失言失人。當反吾智。（「失言」：不可與之言，卻與之言。「失人」：可與之言，卻不與之言。「反」：反省） 【這裡說以口來勸，用書來勸人為善，與前面所講的與人為善比較起來，雖然較注重形式的痕跡，但是這種對症下藥的事，時常會有特殊的效果；這種方法是不可以放棄的。 並且勸人也得要勸的得當，譬如這個人太倔強，不可以用話來勸，你若是用話去勸了，不但是白勸，所勸的話，也成了廢話，這叫做失言。如果這個人性情溫順，可以用話來勸，你卻是不勸，錯過了勸人為善的機會，這叫做失人。失言失人，都是自己智慧不夠，分辨不出來，就應該自己仔細反省檢討；如此才能不失言，也不失人。】 [Liao-Fan]: Here we talked about how we can persuade others by word of mouth and by writing books to promote virtue. Compared with the previous category of helping others to succeed, this is much more direct and obvious. However, the treatment of an illness with the right medicine sometimes proves to have special effects; therefore, we should not give up. It is also important how we do it. For instance, if a person is too stubborn, you should not persuade him with words. If you do, then you are wasting both your words and energy. If a person is gentle and willing to listen, but you fail to persuade him, then you have just missed a golden opportunity to do good. Either way is because you are not wise enough to tell the difference. You should then reflect to see what you did wrong so next time you will do it right and won’t waste any more words or lose another opportunity. 【了凡】：何謂救人危急。患難顛沛。人所時有。偶一遇之。當如痌瘝之在身，速為解救。或以一言伸其屈抑。或以多方濟其顛連。崔子曰。（「顛」：傾家蕩產。「沛」：遇災難，一家失散。「痌」：瘡口穿破。「瘝」：周身痛苦。「屈」：冤屈。「抑」：壓迫。「連」：接二連三。「崔子」：應是指明朝大學問家崔銑，卒諡文敏） 【什麼叫做救人危急呢？患難顛沛的事情，在人的一生當中，都是常有的。假使偶而碰到患難危急的人，應該要將他的痛苦，當做是發生在自己的身上一樣，趕快設法解救，看他有什麼被人冤屈壓迫的事情，或是用話語幫助他申辯明白，或是用種種的方法來救濟他的困苦。明朝的崔子曾經說：】 [Liao-Fan]: What is meant by “helping those in desperate need”? During one’s lifetime, a person often will suffer from serious problems, financial troubles, or separation from loved ones. If we meet someone like that, we should help that person as if we are the one who is experiencing the suffering. We should immediately come to his aid. If a person has been wrongly accused or convicted, we should plead for this person’s innocence as well as aid him in any way we can. Scholar Suai once said, 【崔子】：惠不在大。赴人之急可也。 【恩惠不在乎大小，只要在別人危急的時候，趕緊去幫助他就可以了。】 [Scholar Suai]: It does not matter whether a favor is big or small; what counts is that it’s done at a time when others need it most. 【了凡】：蓋仁人之言哉。 【這句話真正是仁者的話呀！】 [Liao-Fan]: What humane words! 【了凡】：何謂興建大利。小而一鄉之內。大而一邑之中。凡有利益。最宜興建。或開渠導水。或築堤防患。或修橋樑以便行旅。或施茶飯以濟飢渴。隨緣勸導。協力興修。勿避嫌疑。勿辭勞怨。（「邑」：縣。「樑」：橋。「旅」：旅人） 【什麼叫做興建大利呢？講小的，在一個鄉中，講大的，在一個縣內，凡是有益公眾的事，最應該發起興建。或是開闢水道來灌溉農田；或是建築堤岸來預防水災；或是修築橋樑，使行旅交通方便，或是施送茶飯，救濟飢餓口渴的人。 隨時遇到機會，都要勸導大家，同心協力，出錢出力來興建；縱然有別人在暗中毀謗你，中傷你；你也不要為了避嫌疑就不去做，也不要怕辛苦，擔心別人嫉妒怨恨，就推託不做，這都是不可以的。】 [Liao-Fan]: What is meant by “developing public projects for the greater benefit of the people”? Small construction works are needed for villages and big construction jobs are needed for cities. Public projects are anything that needs to be constructed for the public welfare, such as: irrigation systems for farm lands, dams, bridges, or giving food and water to those who are hungry or thirsty. Whenever you have the opportunity, you need to persuade others to put out their share of effort as well. Even when others slander or talk behind your back, you should not be deterred. Don’t be afraid of what others might say about you, and don’t get scared when the job gets tough. You should not let people’s jealousy and hatred shake your resolve to do kind deeds. 【了凡】：何謂捨財作福。釋門萬行。以布施為先。所謂布施者。只是捨之一字耳。達者內捨六根。外捨六塵。一切所有。無不捨者。苟非能然。先從財上布施。世人以衣食為命。故財為最重。吾從而捨之。內以破吾之慳。外以濟人之急。始而勉強。終則泰然。最可以蕩滌私情。祛除執吝。（「釋門」：釋、佛陀姓氏，釋門即指佛門。「達」：通達明理。「六根」：眼，耳，鼻，舌，身，意。「六塵」：色、聲、香、味、觸、法。「慳」：氣小貪心。「祛」：除去。「執」：執著） 【什麼叫做捨財作福呢？佛門裡的萬種善行，以布施為最重要。講到布施，就只有一個捨字，什麼都捨得，就合佛的意思了。 真正明白道理的人，什麼都肯捨；譬如自己身上的眼睛，耳朵，鼻子，舌頭，身體，念頭，沒有一樣不肯捨掉。譬如，佛陀曾在因地修行的時候，捨身飼虎。 在身外的色、聲、香、味、觸、法，也都可以一概捨棄。一個人所有的一切，沒有一樣不可以捨掉，能夠如此，那就身心清淨，沒有煩惱，就如同佛菩薩了。 若是不能什麼都捨，那就先從錢財上著手布施。世間人都把穿衣吃飯，看得像生命一樣重要；因此，錢財上的布施也最為重要；如果我能夠痛痛快快地施捨錢財；對內而言，可以破除我小器的毛病；對外而言，則可救濟別人的急難。 不過錢財不易看破，起初做起來，難免會有一些勉強，只要捨慣了，心中自然安逸，也就沒有什麼捨不得了。這是最容易消除自己的貪念私心，也可以除掉自己對錢財的執著與吝嗇。】 [Liao-Fan]: What is meant by “giving through donation”? In Buddhism, giving is considered foremost in all practices of kindness. When one truly understands the meaning of giving and is willing to give away all his worldly belongings, even to the point of donating parts from his own body, then he is walking the way of the Buddha. A person who understands this principle would be willing to give away anything, even to the point of donating his eyes, ears, nose, tongue, body, and mind. For instance, in a past life, Shakyamuni Buddha offered his own body as food for a hungry tiger. One can also give away the sight, sound, smell, taste, touch, and dharma. There is nothing a person cannot give away if he or she’s willing. If a person can do this, then he is on his way to gaining purity of mind and body. He will have no worries or afflictions, just like the Buddha. When we find ourselves unable to give away everything, we can start by donating money. Worldly people treat their clothing and food as dearly as their lives. Therefore, monetary donation is most important for them. When we practice giving without hesitation, we can cure miserliness and at the same time help others in need. However, it is not an easy thing to do. It’s a difficult task at first, but will become natural the more we give. From cultivating giving, peace of mind can be attained, and then there is nothing you cannot give away. This is the best way to cure a bad case of selfishness and an opportunity to change our attitudes toward money and worldly possessions. 【了凡】：何謂護持正法。法者。萬世生靈之眼目也。不有正法。何以參贊天地。何以裁成萬物。何以脫塵離縛。何以經世出世。故凡見聖賢廟貌。經書典籍。皆當敬重而修飭之。至於舉揚正法。上報佛恩。尤當勉勵。（「參」：加入。「贊」：幫助。「裁成」：做成功。「飭」：整理） 【什麼叫做護持正法呢？法是千萬年來，有靈性的有情生命的眼目，也是真理的準繩；但是法有正有邪，如果沒有正法，如何能夠參加幫助天地造化之功呢？怎樣會使得各式各樣的人以及種種的東西，都能夠像裁布成衣那樣的成功呢？怎樣可以脫出那種種的迷惑，離開那種種的束縛呢？怎樣可以建設整理世上一切的事情，和逃出這個污穢世界，生死輪迴的苦海呢？這都需要靠有了正法，纔像有了光明的大路可走。 所以凡是看到聖賢的寺廟，圖像，經典，遺訓，都要加以敬重；至於有破損不完全的，都應該要修補，整理。而講到佛門正法，尤其應該敬重的加以傳播宣揚，使大家都重視，纔可以上報佛的恩德，這些都是更應該加以全力去實踐的。】 [Liao-Fan]: What is meant by “protecting the proper teachings”? For millions of years, the proper teachings of religion has been a standard of truth and a spiritual guide for all living beings. If we don’t have good doctrines, how can we join in and support the interplay of heaven and earth? How can people of all walks of life succeed in their endeavors without a standard to live by? How would we be able to escape from delusion and life’s bondages? How would we create and arrange worldly affairs and transcend the cycle of birth and death? These all depend on good and proper teachings as the lighted path. Therefore, whenever you see temples, memorials of past saints or sages, pictures of sages, or Buddhist texts, you should be respectful. If they are in need of repair, you should repair and put them back in order. We should especially tell people about the teachings of Buddha and widely spread the proper teachings. We should let others know of its value, in this way we are also showing our gratitude towards the Buddhas and sages. We need to do all we can to make this goal come true. 【了凡】：何謂敬重尊長。家之父兄。國之君長。與凡年高德高位高識高者。皆當加意奉事。在家而奉侍父母。使深愛婉容。柔聲下氣。習以成性。便是和氣格天之本。出而事君。行一事。毋謂君不知而自恣也。刑一人。毋謂君不知而作威也。（「加意」：格外虔誠。「格」：感動。「恣」：驕傲放肆。） 【什麼叫做敬重尊長呢？家裏的父親，兄長，國家的君王，長官；以及凡是年歲，道德，職位，見識高的人，都應該格外虔誠的去敬重他們。 在家裡侍奉父母，要有深愛父母的心，與委婉和順的容貌；而且聲要和，氣要平；這樣不斷地薰染成習慣，就變成自然的好性情，這就是和氣可以感勤天心的根本辦法。 出門在外侍候君王，不論什麼事，都應該依照國法去做；不可以為君王不知道，自己就可以隨意亂做呀！辦一個犯罪的人，不論他的罪輕或重，都要仔細審問，公平地執法；不可以為君王不知道，就可以作威作福冤枉人！】 [Liao-Fan]: What is meant by “respecting our elders”? We should make an extra effort in showing our attention and respect towards parents, elder siblings, the governor, our superiors, or any elders of high virtue, prestige, and learning. When taking care of parents at home, we should do it with love in our hearts and a gentle, accommodating appearance. We should not raise our voice but maintain a peaceful bearing. As we cultivate these virtues, they will become a part of us, and we will change into a mild-mannered person. This is the way we can touch the hearts of heaven and evoke a response. When carrying out deeds for our superiors or the government, we should follow the rules even when we aren’t obliged to. We shouldn’t try to slack off just because our superiors don’t know what we are doing. Before we convict someone of a crime, regardless of whether the crime is serious or not, we should investigate carefully and handle the case with justice. We should not abuse the power and rights given to us by our superiors. 事君如天。古人格論。此等處最關陰德。（「格論」：格、格式，格論是說這樣的議論，可作為榜樣） 【服侍君王，像面對上天一樣的恭敬，這是古人所訂的規範，這種地方關係陰德最大。】 [Narrator]: When you face the emperor, you should respect him with the same respect as if you were facing the heavens. This is the correct behavior handed down from our ancestors. It has a direct and important effect on your hidden goodness. 【了凡】：試看忠孝之家。子孫未有不綿遠而昌盛者。切須慎之。（「綿」：長久不斷） 【你們試看，凡是忠孝人家，他們的子孫，沒有不發達久遠而且前途興旺的，所以一定要小心謹慎的去做。】 [Liao-Fan]: Look at all the families who practiced loyalty and filial piety. Their descendants prosper for a long time and have bright futures. Therefore, we should follow their example and practice with caution. 【了凡】：何謂愛惜物命。 【什麼叫做愛惜物命呢？】 [Liao-Fan]: What is meant by “loving and cherishing all living things”? We should know that a heart of compassion is what makes a man. Mencius once said: 【孟子】：凡人之所以為人者。惟此惻隱之心而已。（「惻隱」：惻、哀傷很切，隱、悲痛很深，惻隱心就是慈悲心） 【要知道一個人之所以能夠算他是人，就是在他有這一片惻隱的心罷了。所以孟子說：沒有惻隱之心就不是人。】 [Mencius]: A man is not human if he does not feel compassion. 【了凡】：求仁者求此。積德者積此。周禮。（「周禮」：周公所訂定） 【求仁的，就是求這一片惻隱之心；積德的，也就是積這一片惻隱的心。有惻隱心就是仁；有惻隱心，就是德。沒有惻隱心，就是無仁心，沒道德。周禮上曾說：】 [Liao-Fan]: A person in search of the virtue of mercy and kindness looks out for his heart of compassion. A person who wants to accumulate merits also cultivates a compassionate heart. A person with compassion is a kind, virtuous, and merciful person, while one without compassion for others is unkind and without morals. It stated in The Ethical Code of the Chu Dynasty : 孟春之月。犧牲毋用牝。（「孟春」：正月。「犧牲」：犧、毛色全白者，牲、牛羊豬等，犧牲指祭品。「牝」：母的） 【每年正月的時候，正是畜牲最容易懷孕的期間，這時候祭品勿用母的。因為要預防畜牲肚裡有胎兒的緣故。】 [Narrator]: In January, when most animals are bearing young, female species are not to be used for sacrificial purposes. 【孟子】：孟子謂 【孟子說：】 [Liao-Fan]: Mencius once said: 君子遠庖廚。 【君子不肯住在廚房附近。】 [Narrator]: A gentleman will not live near the kitchen. 【了凡】：所以全吾惻隱之心也。故前輩有四不食之戒。謂聞殺不食。見殺不食。自養者不食。專為我殺者不食。學者未能斷肉。且當從此戒之。（「學者」：後輩的人） 【就是要保全自己的惻隱之心，所以，前輩有四種肉不吃的禁忌。譬如說，聽到動物被殺的聲音，不吃，或者在它被殺的時候看見，不吃；或者是自己養大的，不吃，或專門為我殺的，不吃。後輩的人，若要學習前輩的仁慈心，一下子做不到斷食葷腥，也應該依照前輩的辦法，禁戒少吃。】 [Liao-Fan]: This is to protect a compassionate heart, since a lot of slaughtering is done in the kitchen. Therefore, our forefathers did not eat meat under four circumstances: First is if they heard the killing, second is if they saw the killing, third is if the animal was raised by them, and fourth is if the animal was killed for their sake. If you are not vegetarian but wish to cultivate compassion, then you can learn from our ancestors by eating less meat. [Narrator]: According to the Buddha’s teachings, living beings are born as animals as a result of having accumulated bad karma in their previous lives. After they pay their dues in retribution, they can be born as humans again. If they are willing to cultivate as a man, they can even become Buddhas. The meat I eat today may be the flesh of a future Buddha. The animal we see today may have been a man in previous lives. It is then possible that this animal was my parent, wife, son, relatives or friends. Presently, I am human and they are animals. To kill and eat them would be making enemies of those I used to love. If I eat them today, perhaps in the future they will become human again while I become an animal due to my sins of killing. In their revenge, I will have to undergo the same suffering of being killed and eaten. When we think thus, how dare we kill? How can we swallow a morsel of that flesh? Besides, even if the meat does taste good, the taste only lasts from the mouth to the throat. After we swallow, there is nothing left to taste. There is no difference between eating meat and vegetables, why would you want to kill when there’s no good behind it? 【了凡】：漸漸增進。慈心愈長。不特殺生當戒。蠢動含靈。皆為物命。求絲煮繭。鋤地殺蟲。念衣食之由來。皆殺彼以自活。故暴殄之孽。當與殺生等。至於手所誤傷。足所誤踐者。不知其幾。皆當委曲防之。古詩云。（「蠢動」：蠢笨的，但也會動的。「靈」：有靈性的。「暴殄」：糟蹋東西。「踐」：踏） 【照佛法來講，一切有生命的東西，都是因為前生造了孽而投胎做處牲；等到它們的罪孽還完了後，仍然可以投胎做人的。做人以後若是肯修行，也可以修成佛。那麼我今生所吃的肉，難保不就是吃了未來佛的肉，並且現在的畜牲，在無量過去的前世中，也一定曾經做過人；那麼它們可能曾做過我前生中的父母，妻子，親族，朋友，我今天吃的肉，可能就是吃我前生的父母，妻子，親族，朋友的肉了。而今天我做人，它做畜牲，我吃它，我就造了殺孽，與它結下冤仇。如果被我吃的畜牲，來世它的孽債還清了，投生做了人，而我卻因為殺生造孽，投胎做畜牲，恐怕他也要報復我殺他之仇，而來殺我，吃我了。這樣說來，還能殺生麼？肉還能吃得下嗎？況且吃肉就算味道好，也不過是經過嘴裡到喉嚨那段時候，還覺得有味道，等到咽了下去，還有什麼味道？與素菜有什麼兩樣，為什麼一定要殺生造孽呢？ 雖然一時做不到不吃肉，也應該漸漸地減少吃肉，直到完全不吃。這樣子慈悲心就會愈來愈增加。不但殺生應戒，就是那些極小，不論愚蠢的或是有靈性的，凡是有生命的，都應該禁止傷害它們的性命。像要用絲來做衣服，就把蠶繭放在水裡燒，那要傷害多少蠶的性命？掘地種田，要殺害地下多少蟲的性命；想想我們穿的衣、吃的飯，是從那裡來的呢？都是殺它們的命，來養活我們自己；所以糟蹋糧食，浪費東西的罪孽，實在也應該與殺生的罪孽相等。至於隨手誤傷的生命，腳下誤踏而死的生命，又不曉得有多少，這都應該要設法防止。宋朝的蘇東坡有首詩說：】 [Liao-Fan]: Even if you cannot quit eating meat altogether, you should still try to gradually reduce your meat intake until vegetarianism is accomplished. In this way, you can reach a higher state of compassion within your heart. We should refrain from killing any living creature, even insects. Man makes silk from the cocoons of silkworms. The cocoons have to be boiled in water first, with the silkworms inside. Think about it, how many silkworms lose their lives in the process? When we cultivate the land for farming, how many insects have to be killed? Are you aware of the cost of lives involved in our everyday food and clothing? We kill to support ourselves. Therefore, we should be conservative and cherish the food and clothing we have. To waste them would create the same sin as killing. How often have we unknowingly harmed or stepped on a living creature? With a little awareness, we can prevent this from happening. Tung-pwo Su, a great poet from the Sung Dynasty once wrote: 愛鼠常留飯。憐蛾不點燈。 【愛鼠常留飯，憐蛾不點燈。 意思是說：恐怕老鼠餓死，所以為老鼠留些飯；哀憐飛蛾撲到燈上燙死，所以燈也不點。】 [Narrator]: ‘In love of the mice, we often leave him some rice; In pitying the moth, we won’t light the lamp.’ 【了凡】：何其仁也。 【這話是多麼的仁厚慈悲呀！】 [Liao-Fan]: What a kind and compassionate statement! 【了凡】：善行無窮。不能殫述。由此十事而推廣之。則萬德可備矣。（「殫」：詳細完全） 【善事無窮無盡，那能說得完；只要把上邊說的十件事，加以推廣發揚，那麼無數的功德，就都完備了。】 [Liao-Fan]: There are infinite types of goodness, I cannot mention them all. As long as you can expand on the ten previous categories, you can make them into a multitude of good deeds and virtues. 第三篇所说的，都是积善的方法，能够积善，自然最好，但人在社会上，不能不和人来往，做人的方法必须加以讲究；而最好的方法就是谦虚了。一个人能谦虚，在社会上一定会得到大众广泛的支持与信任，而懂得谦虚，便更知道「日新又新」的重要；不但学问要求进步，做人做事交朋友等等，样样都要求进步。所有种种的好处，都从谦虚上得来，所以称为谦德。这一篇专讲谦虚的好处，谦虚的效验；大家要仔细的研究，不可以囫囵吞枣，那就必定能够得到大的利益。 The third lesson taught us the ways to accumulate kind deeds. Naturally, it would be best if people would practice kindness, but as humans, we are social beings. It is impossible to not come in contact with others in society; therefore, it is important to know the ways to improve our persons in dealing with others. The best way to do this is to follow the virtue of humility. A humble person in society receives support and trust from the general public. If a person understands the virtue of humility, he is the person who also understands the importance of constant self improvement. This constant self improvement not only includes the search for higher knowledge, but also encompasses the need to be more humane, better performance in daily duties, and improved communication with friends. Many benefits and rewards result from behaving with an understanding of humility. This lesson focuses on the benefits of virtue and humility, proven by Liao-Fan’s own experiences. You will be greatly benefited if you can thoroughly contemplate and understand these teachings. 謙德之效 The Fourth Lesson: The Benefit of the Virtue of Humility 【了凡】：易曰。 【易經謙卦上說：】 [Liao-Fan]: In the I Ching/Book of Change, the hexagram of Humility stated, 天道虧盈而益謙。地道變盈而流謙。鬼神害盈而福謙。人道惡盈而好謙。（「虧」：虧損。「變」：變動。「流」：滋潤不枯） 【天的道理，不論什麼，凡是驕傲自滿的，就要使他虧損，而謙虛的就讓他得到益處。地的道理，不論什麼，凡是驕傲自滿的，也要使他改變，不能讓他永遠滿足；而謙虛的要使他滋潤不枯，就像低的地方，流水經過，必定會充滿了他的缺陷。鬼神的道理，凡是驕傲自滿的，就要使他受害，謙虛的便使他受福。人的道理，都是厭惡驕傲自滿的人，而喜歡謙虛的人。】 [Narrator]: The law of heaven takes from those who are arrogant and benefits those who are humble. The law of earth will not allow those who are conceited or self-content to always remain that way, but will bring change upon them. The humble will not wither, but shall be replenished, just as flowing water fills up lower places on the ground as it passes by, making up the differences. The law of spirits and gods bring harm to those who are arrogant and fortune to those who are humble. Even the laws of men despise the arrogant and like the humble. 【了凡】：是故謙之一卦。六爻皆吉。書曰。 【這樣看來，天、地、鬼、神、人、都看重謙虛的一邊。易經上六十四卦，所講的都是天地陰陽變化的道理，教人做人的方法。每一卦爻中，有凶有吉，凶卦是警戒人去惡從善，吉卦是勉勵人要日新又新，唯有這個謙卦，每一爻都吉祥。書經上也講：】 [Liao-Fan]: Therefore, heaven, earth, spirits, gods, and people all prefer humility over arrogance. In the I Ching/Book of Change, the sixty four hexagrams talk about the constant changes and interactions of heaven and earth, ying and yang. The book teaches a person how to become more humane. Every hexagram contains both good and bad outcomes. The bad outcomes of a hexagram warn people to stop doing evil and to practice kind deeds. The good outcomes of a hexagram encourages people to diligently improve themselves and strive to be better. Only the Humility hexagram contains all good outcomes and no bad outcomes. The Chinese Book of History has also said, 滿招損。謙受益。 【自滿，就會遭到損害，自謙，就會受到益處。】 [Narrator]: A person’s arrogance will bring him harm; and his humbleness will bring him benefit. 【了凡】：予屢同諸公應試。每見寒士將達。必有一段謙光可掬。 【我好幾次和許多人去參加考試，每次都看到貧寒的讀書人，快要發達考中的時候，臉上一定有一片謙和，而且安詳的光采發出來，彷彿可以用手捧住的樣子。】 [Liao-Fan]: I often went to take the exams accompanied by others, and every time I would meet scholars who were very poor. I noticed that before they succeeded in passing the exams and became prosperous, their faces showed such humility, peace, and harmony that I felt I could almost hold that quality in my hands. 【了凡】：辛未計偕。我嘉善同袍凡十人。惟丁敬宇賓。年最少。極其謙虛。予告費錦坡曰。此兄今年必第。費曰。（「計偕」：計、計算，偕、一同，計偕一辭，來自一典故，後來被用在舉人進京城去考會試。「同袍」：合穿一件袍，指在一起的人。「丁敬宇賓」：姓丁名賓號敬宇） 【辛未年，我到京城去會試，我的同鄉嘉善人一起去參加會試的，大約有十個人，只有丁敬宇，這個人最年輕，而且非常謙虛，我告訴同去會試的費錦坡講：這位老兄，今年一定考中。費錦坡問我說：】 [Liao-Fan]: Several years ago, I took my imperial exam in Beijing. Among the ten applicants from my village, Ching-Yu Ding was the youngest and extremely humble. I told one of the applicants, Jin-Po Fay; that this young man would definitely pass the exam this year. Jin-Po Fay asked, 【錦坡】：何以見之。 【怎樣能看出來呢？】 [Jin-Po]: How can you tell? 【了凡】：予曰。惟謙受福。兄看十人中。有恂恂款款。不敢先人。如敬宇者乎。有恭敬順承。小心謙畏。如敬宇者乎。有受侮不答。聞謗不辯。如敬宇者乎。人能如此。即天地鬼神。猶將佑之。豈有不發者。及開榜。丁果中式。（「恂」：信用誠實。「款款」：樸實厚道） 【我說：只有謙虛的人，可以承受福報。老兄你看我們十人當中，有誠實厚道，一切事情，不敢搶在人前，像敬宇的嗎？有恭恭敬敬，一切多肯順受，小心謙遜，像敬宇的嗎？有受人侮辱而不回答，聽到人家毀謗他而不去爭辯，像敬宇的嗎？一個人能夠做到這樣，就是天地鬼神，也都要保佑他，豈有不發達的道理？等到放榜，丁敬宇果然考中了。】 [Liao-Fan]: I said, ‘Only those who are humble are qualified to receive fortune. My friend, look at the ten of us; is there anyone as honest, generous, and never tries to come in first, as Ching-Yu? Do you see anyone who is always respectful, tolerant, careful and humble like Ching-Yu? Do you see anyone like Ching-Yu, who, when he is insulted, does not talk back, or who, when he is slandered, does not argue? Any person who can achieve such a level of humility will receive protection from the heaven, earth, and spirits. There is no reason he will not become prosperous.’ Sure enough, when the test results came out, Ching-Yu Ding passed. 【了凡】：丁丑在京。與馮開之同處。見其虛己斂容。大變其幼年之習。李霽巖直諒益友。時面攻其非。但見其平懷順受。未嘗有一言相報。予告之曰。福有福始。禍有禍先。此心果謙。天必相之。兄今年決第矣。已而果然。（「斂容」：和順謙虛。「相」：幫助） 【丁丑年在京城裡，和馮開之住在一起，看見他總是虛心自謙，面容和順，一點也不驕傲，大大的改變了他小時候的那種習氣。他有一位正直又誠實的朋友季霽巖，時常當面指責他的錯處，但卻只看到他，平心靜氣地接受朋友的責備，從來不反駁一句話。我告訴他說：一個人有福，一定有福的根苗；有禍，也一定有禍的預兆。只要這個心能夠謙虛，上天一定會幫助他，你老兄今年必定能夠登第了！後來馮開之果然真的考中了。】 [Liao-Fan]: One year in Beijing, I was staying with my childhood friend, Kai-Zhi Fung. I noticed that he always carried himself in a humble way, and had a kind and accommodating appearance. He was not a bit arrogant, which was an immense change from his childhood ways. Kai-Zhi had a friend named Ji-Yen Li who was straightforward and honest. Ji-Yen often scolded him on his mistakes, but Kai-Zhi always accepted the accusations calmly without talking back. I told him, 'Just as there are signs which warn of coming misfortune, we can see that prosperity comes to those who have cultivated the cause for it. Heaven will help those whose hearts are humble. You, my friend, will definitely pass the imperial examination this year!&quot;. Later on, he indeed passed the exam. 【了凡】：趙裕峰。光遠。山東冠縣人。童年舉於鄉。久不第。其父為嘉善三尹。隨之任。慕錢明吾。而執文見之。明吾悉抹其文。趙不惟不怒。且心服而速改焉。明年遂登第。（「舉於鄉」：鄉試考中了舉人。「三尹」：一縣最大的是縣官，就是知縣，可以稱做大尹；第二等的縣丞，可以稱做二尹；第三等的主簿，就稱做三尹） 【趙裕峰，名光遠，是山東省冠縣人；不滿二十歲的時候，就中了舉人，後來又考會試，卻多次不中。他的父親做嘉善縣的主任秘書，裕峰隨同他父親上任。裕峰非常羨慕嘉善縣名士錢明吾的學問，就拿自己的文章去見他，那曉得這位錢先生，竟然拿起筆來，把他的文章都塗掉了。裕峰不但不發火，並且心服口服，趕緊把自己文章的缺失改了。如此虛心用功的年輕人，實在是少有，到了明年，裕峰就考中了。】 [Liao-Fan]: There was a young man from San-tong Province named Yu-Fong Zhou who passed the first level of imperial examinations before he was even twenty. Unfortunately, try as he might, he could not pass the succeeding exams. When his father was moved to another post in the government, Yu-Fong went with him, and came to greatly admire a well-known scholar in that village named Min-Wu Chian. Yu-Fong brought his own essays to see this man. He had no idea that Mr. Chian would pick up his calligraphy brush and blot out his entire essay. Not only was Yu-Fong not angry, he sincerely accepted all of Mr. Chian’s corrections and immediately changed his paper accordingly. A young man who could be that humble and showed such willingness to improve himself was very rare indeed. The following year, Yu-Fong passed the imperial examination. 【了凡】：壬辰歲。予入覲。晤夏建所。見其人氣虛意下。謙光逼人。歸而告友人曰。凡天將發斯人也。未發其福。先發其慧。此慧一發。則浮者自實。肆者自斂。建所溫良若此。天啟之矣。及開榜。果中式。（「入覲」：覲、見，入覲是指進京見皇帝。「晤」：碰到） 【壬辰年我入京城去覲見皇帝，見到一位叫夏建所的讀書人，看到他的氣質，虛懷若谷，毫無一點驕傲的神氣，而且他那謙虛的光采，就像會逼近人的樣子。我回來告訴朋友說：凡是上天要使這個人發達，在沒有發他的福時，一定先發他的智慧，這種智慧一發，那就使浮滑的人自然會變得誠實，放肆的人也就自動收斂了，建所他溫和善良到這種地步，是已發了智慧了，上天一定要發他的福了。等到放榜的時候，建所果然考中了。】 [Liao-Fan]: One year, I went to the Capital to pay my respects to the Emperor. I met a scholar named Jian-Suo Hsia who had all the qualities of a great man without a trace of arrogance. I felt the intense aura of his virtue and humility all about him. When I returned home, I told my friend, “When heaven wants a person to prosper, it will first bestow him with wisdom. Wisdom can make a person honest and well-disciplined. Heaven has already bestowed Jian-Suo with wisdom, or he couldn’t be that gentle, kind and good. Surely, heaven will now make him prosperous.” Sure enough, when the test results came out, Jian-Suo passed the exam. 【了凡】： 江陰張畏巖。積學工文。有聲藝林。甲午。南京鄉試。寓一寺中。揭曉無名。大罵試官。以為瞇目。時有一道者。在傍微笑。張遽移怒道者。道者曰。（「江陰」：江蘇省縣名。「積學」：學問積得很深。「藝林」：藝、文藝；藝林是指許多讀書人聚集在一起。「遽」：急） 【江陰有一位讀書人。名叫張畏巖，他的學問積得很深，文章做得很好，在許多讀書人當中，很有名聲。甲午年南京鄉試，他借住在一處去寺院裡，等到放榜，榜上沒有他的名字，他不服氣，大罵考官，眼睛不清楚，看不出他的文章好。那時候有一個道士在旁微笑，張畏巖馬上就把怒火發在道士的身上。道士說：】 [Liao-Fan]: There was a scholar named Wei-Yan Chang from Jiang-ying who was very learned and wrote good essays. He was also very well-known among many scholars. One year he took his exam at Nanking and stayed at a Taoist temple. When the test results were posted, he found that he had not passed the exam. He became furious and loudly accused the examiner of being blind for not recognizing his obvious talents. At that time, a Taoist monk stood by smiling, and Wei-Yan immediately directed his anger towards the monk. The monk said to him, 【僧人】：相公文必不佳。（「相公」：考試人的普通稱呼） 【你的文章一定不好。】 [Monk]: Your essay must not be good! 【了凡】：張益怒曰。（「益」：更加） 【張畏巖更加的發怒說：】 [Liao-Fan]: Wei-Yan got even angrier and said, 【畏巖】：汝不見我文。烏知不佳。（「烏」：怎麼） 【你沒有看到我的文章，怎麼知道我寫得不好呢？】 [Wei-Yan]: How do you know it’s not good when you haven’t even read it? 【僧人】：道者曰。 【道士說：】 [Liao-Fan]: The monk said, 【僧人】：聞作文。貴心氣和平。今聽公罵詈。不平甚矣。文安得工。 【我常聽人說，做文章最要緊的，是心平氣和，現在聽到你大罵考官，表示你的心非常不平，氣也太暴了，你的文章怎麼會好呢？】 [Monk]: I often hear people say that the most important element in writing good essays is a peaceful heart and harmonious temperament. Your loud and angry accusations just of now clearly shows that your mind is certainly not at peace and your temperament is violent. How could you possibly write good essays? 【了凡】：張不覺屈服。因就而請教焉。道者曰。 【張畏巖聽了道士的話，倒不覺的屈服了，因此，就轉過來向道士請教。道士說：】 [Liao-Fan]: Wei-Yan obliviously submitted to the Taoist’s words and in turn asked him for his advice. The Taoist said, 【僧人】：中全要命。命不該中。文雖工。無益也。須自己做個轉變。 【要考中功名，全要靠命，命裡不該中，文章雖好，也沒益處，仍不會考中，一定要你自己改變改變。】 [Monk]: Whether you pass or not depends on your fate. If you are destined not to pass, then no matter how good your paper is, you will still fail the exam. You yourself will have to make a few changes! 【了凡】：張曰。 【張畏巖問道：】 [Liao-Fan]: Wei-Yan asked, 【畏巖】：既是命。如何轉變。 【既然是命，怎樣去改變呢？】 [Wei-Yan]: How can I change it if it is predestined? 【了凡】：道者曰。 【道士說：】 [Liao-Fan]: The monk replied, 【僧人】：造命者天。立命者我。力行善事。廣積陰德。何福不可求哉。 【造命的權，雖然在天，立命的權，還是在我；只要你肯盡力去做善事，多積陰德，什麼福不可求得呢？】 [Monk]: Though the power to form your destiny lies in the Heavens, the right to recreate it is in yourself. As long as you are willing to do kind deeds and cultivate hidden virtues, there is nothing you ask that you will not receive. 【了凡】：張曰。 【張畏巖說：】 [Liao-Fan]: Wei-Yan said, 【畏巖】：我貧士。何能為。（「士」：讀書人） 【我是一個窮讀書人，能做什麼善事呢？】 [Wei-Yan]: I am only a poor scholar. What good deeds can I possibly do? 【了凡】：道者曰。 【道士說：】 [Liao-Fan]: The monk said, 【僧人】：善事陰功。皆由心造。常存此心。功德無量。且如謙虛一節。並不費錢。你如何不自反。而罵試官乎。 【行善事，積陰功，都是從這個心做出來的。只要常常存做善事，積陰功的心，功德就無量無邊了。就像謙虛這件事，又不要花錢，你為什麼不自我反省，自己工夫太淺，不能謙虛，反而罵考官不公平呢？】 [Monk]: Practicing kind deeds and accumulating hidden virtues all stem from the heart. As long as you constantly harbor the intent to practice kindness and accumulate virtues, your merits are infinite and boundless! Take the virtue of humility for example, it does not cost anything; why can’t you be humble and reflect on your own essay instead of blaming the examiner for being unfair? 【了凡】：張由此折節自持。善日加修。德日加厚。丁酉。夢至一高房。得試錄一冊。中多缺行。問旁人。（「節」：志向，此處指高傲的志向。「試錄」：考試錄取名冊） 【張畏巖聽了道士的話，從此以後就壓低一向驕傲的志向，自己很留意把持住自己，勿走錯了路，天天加功夫去修善，天天加功夫去積德。到了丁酉年，有一天，他做夢到一處很高的房屋裡去，看到一本考試錄取的名冊，中間有許多的缺行。他看不懂，就問旁邊的人說：】 [Liao-Fan]: Wei-Yan Chang listened to the Taoist monk, and from then on, suppressed his arrogant ways. He became very mindful of his own actions and tried not to make mistakes. Everyday he put forth additional effort to do more good deeds and accumulate more merits. Three years later, he dreamed one night that he entered a very tall house, and saw a booklet that contained all the names of the applicants who passed the exam that year. He saw many blank lines. Unable to understand what it meant, he asked the person next to him, 這是什麼？ [Wei-Yan]: What is this? 【了凡】：曰。 【那個人說：】 [Liao-Fan]: The person replied, 【旁人】：此今科試錄。（「今科」：今年的一科，因為考一次，故稱考一科，所以今年的考試，就可以叫今科） 【這是今年考試錄取的名冊。】 [Person]: This is the booklet that contains all the names of the applicants who passed the exam this year. 【了凡】：問。 【而張畏巖問：】 [Liao-Fan]: Wei-Yan asked, 【畏巖】：何多缺名。 【為什麼名冊內有這麼多的缺行？】 [Wei-Yan]: Why does it have so many blank lines? 【了凡】：曰。 【那個人又回答說：】 [Liao-Fan]: The person answered, 【旁人】：科第陰間三年一考較。須積德無咎者。方有名。如前所缺。皆係舊該中式。因新有薄行而去之者也。（「薄行」：做了輕薄、有罪過的事） 【陰間對那些考試的人，每三年考查一次，一定要積德，沒有過失，這冊裡才會有名字。像名冊前面的缺額，都是從前本該考中，但是因為他們最近犯了有罪過的事情，才把名字去掉的。】 [Person]: The spirits of the underworld check on the applicants every three years. Only the names of those who practice kind deeds and do not make mistakes are allowed to appear in this booklet. The blank lines used to bear the names of those who were supposed to pass the exam, but due to their recent offenses, their names have been erased. 【了凡】：後指一行云。 【後來那個人又指了一行說：】 [Liao-Fan]: Then, pointing to a line, the person said: 【旁人】：汝三年來。持身頗慎。或當補此。幸自愛。 【你三年來，很留心的把持住自己，沒犯罪過，或者是應該補上這個空缺了，希望你珍重自愛，勿犯過失！】 [Person]: Ah-ha, for the past three years you have been very careful and have exerted such self-control that you haven’t made any mistakes. Perhaps you should fill this blank. I hope you will cherish this opportunity and take care not to make any mistakes! 【了凡】：是科果中一百五名。 【果然張畏巖就在這次的會考，考中了第一百零五名。】 [Liao-Fan]: Sure enough, Wei-Yan passed the exam that year and placed 105th. 【了凡】：由此觀之。舉頭三尺。決有神明。趨吉避凶。斷然由我。須使我存心制行。毫不得罪於天地鬼神。而虛心屈己。使天地鬼神。時時憐我。方有受福之基。彼氣盈者必非遠器。縱發亦無受用。稍有識見之士。必不忍自狹其量。而自拒其福也。況謙則受教有地。而取善無窮。尤修業者所必不可少者也。（「制」：約束。「屈己」：自己肯遷就，不驕傲） 【從上面所講的看來，舉頭三尺高，一定有神明在監察著人的行為。因此，利人，吉祥的事情，都應該趕快的去做；凶險，損人的事，應該避免，不要去做，這是可以由我自己決定的，只要我存好心，約束一切不善的行為，絲毫不得罪天地鬼神，而且還要虛心，自己肯遷就不驕傲，使得天地鬼神，時時哀憐我，才可以有福的根基，那些滿懷傲氣的人，一定不是遠大的器量，就算能發達，也不會長久地享受福報。稍有見識的人，一定不肯把自己肚量，弄得很狹窄，而自己拒絕可以得到的福，況且謙虛的人，他還有地方可以受到教導，若人不謙虛，誰肯去教他？ 並且謙虛的人，肯學別人的好處，別人有善的行動，就去學他，那麼得到的善行，就沒有窮盡了。尤其是進德修業的人，一定所不可缺少的啊！】 [Liao-Fan]: From the examples given above, we know that spirits and gods are always watching our behaviors from above. Therefore, we must immediately do whatever is beneficial to others and avoid doing whatever is violent, dangerous, and harmful to others. These are all things I can decide for myself. As long as I harbor good intentions; refrain from evil-doings; don’t offend the heaven, earth, spirits, and gods; humble myself; be tolerant and not arrogant; then the heaven, earth, spirits and gods will constantly have pity on me; only then will I have a foundation for my future prosperity. Those who are full of conceit are definitely not destined to be great men. Even if they do prosper, they will not be able to enjoy their fortune for long. Intelligent people would definitely not make themselves small and narrow-minded and refuse the fortune they are entitled to. Besides, those who are humble always increase their opportunities to learn. If a person is not humble, who would want to teach him? Also, humble people are always willing to learn the strengths of others. When others perform good deeds, the humble person will learn and follow their examples. In this way, the kind deeds humble people accomplish are boundless! For those who wish to cultivate and improve upon their virtues, they especially, cannot do without the virtue of humility. 【了凡】：古語云。 【古人有幾句老話說：】 [Liao-Fan]: The ancients had an old saying, 有志於功名者。必得功名。有志於富貴者。必得富貴。 【有心要求功名的，一定可以得到功名；有心要求富貴的，一定可以得到富貴。】 [Narrator]: Those who have their hearts set on attaining success and fame, will surely attain success and fame. Those who have their hearts set on attaining wealth and position, will surely attain wealth and position. 【了凡】：人之有志。如樹之有根。立定此志。須念念謙虛。塵塵方便。自然感動天地。而造福由我。今之求登科第者。初未嘗有真志。不過一時意興耳。興到則求。興闌則止。孟子曰。（「塵塵」：極小。「闌」：退了） 【一個人有遠大的志向，就像樹有根一樣；樹有根，就會生出枒枝花葉來。 人要立定了這種偉大的志向，必須在每一個念頭上，都要謙虛，即使碰到像灰塵一樣極小的事情，也要使別人方便，能夠做到這樣，自然會感動天地了。 而造福全在我自己，自己真心要造，就能夠造成。像現在那些求取功名的人，當初那有什麼真心，不過是一時的興緻罷了；興緻來了，就去求，興緻退了，就停止，孟子對齊宣王說：】 [Liao-Fan]: A person who has great and far reaching goals is like a tree having roots. A tree with roots will eventually sprout into branches, flowers and, leaves. A person who has set down great and far reaching goals must humble himself in every thought and try to relieve another’s burden even if the occurrence is as insignificant as a speck of dust. If you can reach this level of humility, you will naturally touch the hearts of heaven and earth. Furthermore, I am the creator of my own prosperity; if I truly want to create it, I will certainly succeed. Look at the applicants who sought for fame and wealth, in the beginning, they did not harbor a sincere heart; it was only a passing notion. When they fancied it, they sought it. When their interest dropped, they stopped. Mencius once told Emperor Shuan Chi, 【孟子】：王之好樂甚。齊其庶幾乎。（「庶幾」：差不多可以了） 【大王喜好音樂，若是到了極點，那麼齊國的國運大概可以興旺了。但是大王喜好音樂，只是個人在追求快樂罷了，若是能把個人追求快樂的心，推廣到與民同樂，使百姓都快樂，那麼齊國還有不興旺的麼？】 [Mencius]: Your Highness has a love for music. But your love for music is only a personal pleasure. If you can expand from the heart which seeks after personal happiness to that of sharing happiness with all your subjects, and make them just as happy as you are, then, surely the nation is bound to prosper! 【了凡】：予於科名亦然。 【我看求科名，也是這樣，要把求科名的心，落實推廣到積德行善上；並且要盡心盡力地去做，那麼命運與福報，就都能夠由我自己決定了！】 [Liao-Fan]: I think it is the same for those who are seeking to pass the imperial exams. If a person can expand upon the heart which seeks to pass the exams to that of diligently doing kind deeds and accumulating merits, putting forth his best efforts to improve his character, then both destiny and prosperity are his to create. ---------------------------- 了凡四訓 終 ------------------------------- 各位聽眾朋友，在聽完了【了凡四訓有聲書】之後，您的內心一定是感觸很多，覺得獲益匪淺，這的的確確是一部扣人心弦，淨化人心的有聲書；而了凡四訓這本書的原文，文字非常的優美典雅，表面上看起來，好像並不難了解，但是其中所深藏宇宙人生的道理，卻是非常的深奧，必須用心體會，才能有得於心。 所以盼望各位聽眾朋友，在聽過錄音帶以後，最好能夠熟讀了凡四訓的原文三百遍；必定能夠信心益增，效法了凡先生立命精神的決心，會更加的堅定；進而身體力行，斷惡修善。由是而個人的學業，事業，家庭均能圓滿，成聖成賢，也是指日可待的。 為了利益大眾，廣為流傳，在此我們聲明，了凡四訓有聲書並沒有所謂「智慧財產權」的問題，非常歡迎善心人士大力提倡翻錄，提供各級學校教學參考，來協助我們大、中、小學生的心理建設；並且能淨化社會人心，提昇道德觀念；大家都學了凡精神，諸惡莫作，眾善奉行，行善積德，服務人群，如果說人人能夠如此，國家前途一定光明，世界一片祥和。 整理人的話： 各位親愛的聽眾朋友大家好，末學首先要恭喜您，能夠聽完「了凡四訓有聲書」。這是很不簡單的，如果您沒有具足相當的善根、福德、因緣，就可能沒機會聽到，甚至聽了也不能聽到心裡，內心的震動、感受，自然也不強烈；相信諸位聽完的感受一定很深、而且是法喜充滿，所以向各位祝賀。 如果您想要繼續研究「了凡四訓」，末學向各位建議，最好能夠聽「了凡四訓文教基金會」製作的當代佛門高僧，淨空法師演述的「了凡四訓講記廣播劇」錄音帶，共有十八卷，相當的精彩，並應熟讀了凡四訓原文三百遍，而且要依教奉行，如此，您對自己的命運，就有相當的把握。 中國人常講到積德，「了凡四訓」也強調行善積德，而中國最會積德的人是誰呢？就是孔子，孔子積了百代之德，所以他的子孫，七十三代的孔德成先生，以前是考試院院長；現在是總統府資政。 中國第二位會積德的就是宋朝的宰相范仲淹，范仲淹積了千年之德，所以范氏的子孫，到現在還是很興旺。所以「德」相當的重要，所謂：「有德者保之，無德者失之。」小至個人的身家性命財產，大至國家乃至全世界的存亡興廢，跟這個「德」字有相當大的因果關係，可惜一般人多未能深入的了解，而秦始皇若是知道這個道理，就不會焚書坑儒。他也想使子孫萬世而為皇，只要積德，秦朝的基業，一樣也可以保持相當的長遠；但是他不了解這個道理，所以十五年就垮了。而且子孫都很慘。這是歷史的經驗教訓，相當的發人深省。 一般人，對命運多是感到很迷茫，論語說：「不知命，無以為君子」，所以要知命，也不簡單。因為這個學問很深，如果對命運真正的了解，自然就理得心安，不可能怨天尤人了。我們現在社會上有很多亂象，各種問題層出不窮，而了凡四訓這本書，對於人心來講，有相當大的穩定作用和淨化效果。所以，希望社會賢達、政府官員，都能提倡。 這個對國家社會的安定，必然會產生很大的力量，如果了凡四訓這套錄音帶，能夠有三百萬套在台灣流通，相信我們的社會風氣會為之一變，人心道德會為之一振，這是可以預估的。 而且這套錄音帶並沒有版權，歡迎大家助錄、弘揚；我們學會成立的目的，就是希望把這本改造命運的寶典，推薦給世界上每一個人，所以已經有了英文的翻譯和英文有聲書的出版。這對促進世界和平、人類幸福，必定會有相當深廣的影響。 另外，了凡四訓講到布施，我們的錢財要捨，確實不容易，俗話說：「捨得捨得，有捨才有得」；韓愈講過：「一時勸人以口，百世勸人以書」。所以我們贊助了凡四訓等於是財布施，而這種財施，還有兩種的效果在裡面；就是法施和無畏施；法施是使人聞到正法，聞到正法能使人心安法喜；而遠離煩惱，心無恐怖就是無畏施也具足了。所以我們在「了凡四訓」行財布施，法施和無畏施，也都圓滿具足了！ 最後希望大家給我們指教、支持、與贊助，謝謝各位！ Dear Listeners and Friends, We hope you have benefited from listening to Liao-Fan’s Four Lessons and will acquire the same spirit in creating your own destiny. We encourage everyone to do their best in ‘refraining from evil and practicing kindness’. The teachings in Liao-Fan’s Four Lessons can lift the morale of the public and transform our society into one of peace and harmony. We welcome all interested parties to sponsor the distribution of this audio book as teaching material for schools and colleges. Let us all be a part in the rebuilding of our children’s morals and virtues. We hereby announce that we do not reserve our copyrights, and welcome all to reproduce and distribute this audio book for the benefit of the general public. Here at The Education Foundation of Liao-Fan’s Four Lessons, our goal is to promote the study and practice of these teachings worldwide. Therefore, we will have editions of this book in English, Japanese, German, French, and Spanish. Through understanding and practicing these teachings, world peace is possible. We welcome your comments, support, and sponsorship. Thank you very much! Liao-Fan’s Four Lessons Audio Book Original work by Mr. Liao-Fan Yuan of the Ming Dynasty Interpreted by Mr. Zhi-Hai Huang Re-edited by Police Officer Wang Sponsored and recorded by The Education Foundation of Liao-Fan’s Four Lessons 附錄 雲谷禪師授袁了凡功過格參雲棲大師自知錄 陳癸丞提供 准百功： 救免一人死。完一婦女節。阻人不溺一子女。為人延一嗣。 准五十功： 免墮一胎。當欲染境，守正不染。收養一無倚。葬一無主骸骨。救免一人流離。救免一人軍徒重罪。白一人冤。發一言利及百姓。 准三十功： 施一葬地與無土之家。化一為非者改行。度一受戒弟子。完聚一人夫婦。收養一無主遺棄門孩。成就一人德業。 准十功： 薦引一有德人。除一人害。編纂一切眾經法。以方術治一人重病。發至德之言。有財勢可使而不使。善遺妾婢。救一有力報人之畜命。 准五功： 勸息一人訟。傳人一保益性命事。編纂一保益性命經法。以方術救一人輕疾。勸止傳播人惡。供養一賢善人。祈福禳災等，但許善願不殺生。救一無力報人之畜命。 准三功： 受一橫不嗔。任一謗不辯。受一逆耳言。免一應責人。勸養蠶、漁人、獵人、屠人等改業。葬一自死畜類。 准一功： 讚一人善。掩一人惡。勸息一人爭。阻人一非為事。濟一人饑。留無歸人一宿。救一人寒。施藥一服。施行勸濟人書文。誦經一卷。禮懺百拜。誦佛號千聲。講演善法。諭及十人。興事利及十人。拾得遺字一千。飯一僧。護持僧眾一人。不拒乞人。接濟人畜一時疲頓。見人有憂，善為解慰。肉食人持齋一日。見殺不食。聞殺不食。為己殺不食。葬一自死禽類。放一生。救一細微濕化之屬命。作功果薦沉魂。散錢粟衣帛濟人。饒人債負。還人遺物。不義之財不取。代人完納債負。讓地讓產。勸人出財作種種功德。不負寄托財物。建倉平糶、修造路橋、疏河掘井、修置三寶寺院、造三寶尊像及施香燭燈油等物、施茶水、捨棺木一切方便等事。自「作功果」以下，俱以百錢為一功。 准百過： 致一人死。失一婦女節。讚人溺一子女。絕一人嗣。 准五十過： 墮一胎。破一人婚。拋一人骸。謀人妻女。致一人流離。致一人軍徒重罪。教人不忠不孝大惡等事。發一言害及百姓。 准三十過： 造謗污陷一人。摘發一人陰私與行止事。唆一人訟。毀一人戒行。反背師長。抵觸父兄。離間人骨肉。荒年積囤五穀不糶生索。 准十過： 排擯一有德人。薦用一匪人。平人一塚。凌孤逼寡。受畜一失節婦。畜一殺眾生具。惡語向尊親、師長、良儒。修合害人毒藥。非法用刑。毀壞一切正法經典。誦經時，心中雜想惡事。以外道邪法授人。發損德之言。殺一有力報人之畜命。 准五過： 訕謗一切正法經典。見一冤可白不白。遇一病求救不救。阻絕一道路橋樑。編纂一傷化詞傳。造一渾名歌謠。惡口犯平交。殺一無力報人之畜命。非法烹炮生物，使受極苦。 准三過： 嗔一逆耳言。乖一尊卑次。責一不應責人，播一人惡。兩舌離間一人。欺誑一無識。毀人成功。見人有憂，心生暢快。見人失利、失名，心生歡喜。見人富貴，願他貧賤。失意輒怨天尤人。分外營求。 准一過： 沒一人善。唆一人鬥。心中暗舉惡意害人。助人為非一事。見人盜細物不阻。見人憂驚不慰。役人畜，不憐疲頓。不告人取人一針一草。遺棄字紙。暴棄五穀天物。負一約。醉犯一人。見一人饑寒不救濟。誦經差漏一字句。僧人乞食不與。拒一乞人。食酒肉五辛，誦經登三寶地。服一非法服。食一報人之畜等肉。殺一細微濕化屬命以及履巢破卵等事。背眾受利，傷用他錢。負貸。負遺。負寄托財物。因公恃勢乞索、巧索，取人一切財物。廢壞三寶尊像以及殿宇、器用等物。斗秤等小出大入。販賣屠刀、漁網等物。自「背眾受利」以下，俱以百錢為一過。]]></content>
      <categories>
        <category>think</category>
      </categories>
      <tags>
        <tag>think</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[16_Call_Python]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-16-Call-Python%2F</url>
    <content type="text"><![CDATA[16-Nodejs如何调用Python函数 例子：用Nodejs的应用程序，调用Python的Machine Learning算法。 最简单的方式是使用随Nodejs打包的&quot;child_process&quot;包。 123456var spawn = require('child_process').spawn;var process = spawn('python',[ 'path_to_script.py', arg1, arg2]); 所有你需要做的就是确保在你的python脚本中导入sys，然后你可以使用sys.argv [1]，sys.argv[2]访问arg1、arg2等等。 要将数据发送回Nodejs，只需在python脚本中执行以下操作： 12print(dataToSendBack)sys.stdout.flush() 然后Nodejs可以使用以下方式监听数据： 123process.stdout.on('data', function (data)&#123;// Do something with the data returned from python script&#125;); 由于这允许使用spawn将多个参数传递给脚本，您可以重新构造一个python脚本，以便其中一个参数决定要调用哪个函数，另一个参数被传递给该函数等。 下面是一个具体的例子： start.js 123456789101112131415161718192021222324var express = require('express'); //import modulevar app = express(); // create its variableapp.listen(3000,function()&#123; // create a server running on port 3000 console.log('server running on port 3000');&#125;); // server can be accessed through localhost:3000// when the url if of the form localhost:3000/name,callName() function is excuted app.get('/name',callName);function callName(req,res)&#123; var spawn = require('child_process').spawn; // import chile_process module and user its spawn method, and assign create its variable var process = spawn('python',[ './hello.py', req.query.firstname, req.query.lastname ]); // parameters passed in spawn:1.type of script 2.list containing the path and arguments of the script process.stdout.on('data',function(data)&#123; // standard output data from script which executed res.send(data.toString()); // send this data to res object &#125;);&#125;; //http://localhost:3000/name?firstname=Mike&amp;lastname=Will//Output from Python-- First name: Mike Last name: Will//http://localhost:3000/name?firstname=elaine&amp;lastname=zhong//Output from Python-- First name: elaine Last name: zhong hello.py 1234567import sys# Takes first name and last name via command# line arguments and then display themprint("\n Output from Python-- \n\n")print("\n First name: " + sys.argv[1])print("\n Last name: " + sys.argv[2])# Save the script as hello.py 品尝了前菜，下面系统来讲讲Nodejs想要调用Python文件有哪些方法。 话说Nodejs是利用子进程来调用系统命令或者文件，它的子进程提供了与系统交互的重要接口，其主要API有： 标准输入、标准输出及标准错误输出的接口。 child.stdin 获取标准输入 child.stdout 获取标准输出 child.stderr 获取标准错误输出 获取子进程的PID：child.pid ： 提供生成子进程的方法：child_process.spawn(cmd, args=[], [options]) 提供直接执行系统命令的方法：child_process.exec(cmd, [options], callback) 提供调用脚本文件的方法：child_process.execFile(file, [args], [options], [callback]) 提供杀死进程的方法：child.kill(signal=‘SIGTERM’) 下面结合例子来解释： 利用子进程调用系统命令（获取系统内存使用情况） 新建nodejs文件，名为cmd_spawn.js，代码如下： 1234567891011121314var spawn = require('child_process').spawn;var free = spawn('free', ['-m']); // 捕获标准输出并将其打印到控制台 free.stdout.on('data', function (data) &#123; console.log('standard output:\n' + data); &#125;); // 捕获标准错误输出并将其打印到控制台 free.stderr.on('data', function (data) &#123; console.log('standard error output:\n' + data); &#125;); // 注册子进程关闭事件 free.on('exit', function (code, signal) &#123; console.log('child process eixt ,exit:' + code); &#125;); 运行node cmd_spawn.js和free -m的结果一模一样。 执行系统命令（child_process.exec()） 功能比上面的强大一点，比如我想关注天气，现在我要curl一下天气的接口返回json格式的数据，可能我要对它进行一番操作，这里就打印出来不操作。 新建nodejs文件，名为cmd_exec.js: 1234567891011121314var exec = require('child_process').exec; var cmdStr = 'curl http://www.weather.com.cn/data/sk/101010100.html';exec(cmdStr, function(err,stdout,stderr)&#123; if(err) &#123; console.log('get weather api error:'+stderr); &#125; else &#123; /* 这个stdout的内容就是上面我curl出来的这个东西： &#123;"weatherinfo":&#123;"city":"北京","cityid":"101010100","temp":"3","WD":"西北风","WS":"3级","SD":"23%","WSE":"3","time":"21:20","isRadar":"1","Radar":"JC_RADAR_AZ9010_JB","njd":"暂无实况","qy":"1019"&#125;&#125; */ var data = JSON.parse(stdout); console.log(data); &#125;&#125;); 直接curl出来和通过运行脚本的出来的结果是一样的：node cmd_exec.js的结果与curl http://www.weather.com.cn/data/sk/101010100.html是一样的。 调用传参数的shell脚本（child_process.execFile()） 这个要先准备个shell脚本，比如我要连到一台服务器，来修改它的密码，则我要提供IP，user，new pwd，old pwd，新建shell脚本文件change_password.sh： 12345678910111213141516171819202122232425262728293031323334#!/bin/shIP=""NAME=""PASSWORD=""NEWPASSWORD=""while getopts "H:U:P:N:" arg #选项后面的冒号表示该选项需要参数do case $arg in H) IP=$OPTARG ;; U) NAME=$OPTARG ;; P) PASSWORD=$OPTARG ;; N) NEWPASSWORD=$OPTARG ;; ?) #当有不认识的选项的时候arg为? echo "含有未知参数" exit 1 ;; esacdone#先获取useridUSERID=`/usr/bin/ipmitool -I lanplus -H $IP -U $NAME -P $PASSWORD user list | grep root | awk '&#123;print $1&#125;'`# echo $USERID#根据userid来修改密码/usr/bin/ipmitool -I lanplus -H $IP -U $NAME -P $PASSWORD user set password $USERID $NEWPASSWORD 然后我准备一个nodejs文件来调用这个shell脚本，叫file_changepwd.js： 123456789var callfile = require('child_process'); var ip = '1.1.1.1';var username = 'test';var password = 'pwd';var newpassword = 'newpwd';callfile.execFile('change_password.sh',['-H', ip, '-U', username, '-P', password, '-N', newpassword],null,function (err, stdout, stderr) &#123; callback(err, stdout, stderr);&#125;); 看过上面的，其实调用python脚本就没什么悬念了，本质上也就是执行命令。 调用python脚本（python脚本本身是传参数的） 下面这段是对python传参数的简单说明： 123456789101112# -*-coding:utf-8 -*-'''需要模块：sys参数个数：len(sys.argv)脚本名： sys.argv[0]参数1： sys.argv[1]参数2： sys.argv[2]'''import sysprint u"脚本名：", sys.argv[0]for i in range(1, len(sys.argv)):#这里参数从1开始 print u"参数", i, sys.argv[i] 准备一个nodejs文件来调用这个python脚本，file_python.js: 123456789101112131415161718var exec = require('child_process').exec;var arg1 = 'hello'var arg2 = 'jzhou'exec('python py_test.py '+ arg1+' '+arg2+' ',function(error,stdout,stderr)&#123; if(stdout.length &gt;1)&#123; console.log('you offer args:',stdout); &#125; else &#123; console.log('you don\'t offer args'); &#125; if(error) &#123; console.info('stderr : '+stderr); &#125;&#125;);py_test.py内容如下：# -*-coding:utf-8 -*-import sysprint sys.argv 比较exec和spawn exec将子进程输出结果暂放在buffer中，在结果完全返回后，再将输出一次性的以回调函数返回。如果exec的buffer体积设置的不够大，它将会以一个“maxBuffer exceeded”错误失败告终。而spawn在子进程开始执行后，就不断的将数据从子进程返回给主进程，它没有回调函数，它通过流的方式发数据传给主进程，从而实现了多进程之间的数据交换。这个功能的直接用应用场景就是“系统监控”。 exec更方便一些,将整个命令放在第一个参数中，而spqwn需要拆分。 child_process.spawn('python', ['support.py', i]) child_process.exec('python support.py '+i, callback) 上面的方法主要都是执行整个Python文件的，下面介绍Github上一个在传递参数、返回值、异常上很有优势的模块：python.js]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[01_jQuery_introduction]]></title>
    <url>%2F2019%2F04%2F22%2FjQuery-01-jQuery-introduction%2F</url>
    <content type="text"><![CDATA[jQuery教程 jQuery 是一个 JavaScript 库，极大地简化了 JavaScript 编程。 实例1 123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("p").click(function()&#123; $(this).hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;如果你点我，我就会消失。&lt;/p&gt; &lt;p&gt;继续点我!&lt;/p&gt; &lt;p&gt;接着点我!&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 什么是jQuery？ jQuery是一个JavaScript函数库，是一个轻量级的&quot;写的少，做的多&quot;的JavaScript库。 jQuery库包含以下功能： HTML 元素选取 HTML 元素操作 CSS 操作 HTML 事件函数 JavaScript 特效和动画 HTML DOM 遍历和修改 AJAX Utilities 除此之外，Jquery还提供了大量的插件。 为什么使 jQuery？ 目前网络上有大量开源的 JS 框架, 但是 jQuery 是目前最流行的 JS 框架，而且提供了大量的扩展。 很多大公司都在使用 jQuery， 例如: Google Microsoft IBM Netflix jQuery安装 网页中添加 jQuery 可以通过多种方法在网页中添加 jQuery。 您可以使用以下方法： 从 jquery.com 下载 jQuery 库 从 CDN 中载入 jQuery, 如从 Google 中加载 jQuery 下载 jQuery 有两个版本的 jQuery 可供下载： Production version - 用于实际的网站中，已被精简和压缩。 Development version - 用于测试和开发（未压缩，是可读的代码） 以上两个版本都可以从 jquery.com 中下载。 jQuery 库是一个 JavaScript 文件，您可以使用 HTML 的 标签引用它： 123&lt;head&gt; &lt;script src="jquery-1.10.2.min.js"&gt;&lt;/script&gt;&lt;/head&gt; 提示： 将下载的文件放在网页的同一目录下，就可以使用jQuery。 您是否很疑惑为什么我们没有在 标签中使用 type=“text/javascript” ？在 HTML5 中，不必那样做了。JavaScript 是 HTML5 以及所有现代浏览器中的默认脚本语言！ 一、jQuery语法 jQuery 语法是通过选取 HTML 元素，并对选取的元素执行某些操作。 基础语法： $(selector).action() 美元符号定义 jQuery 选择符（selector）“查询&quot;和&quot;查找” HTML 元素 jQuery 的 action() 执行对元素的操作 实例: $(this).hide() - 隐藏当前元素 $(“p”).hide() - 隐藏所有 元素 $(“p.test”).hide() - 隐藏所有 class=“test” 的 元素 $(&quot;#test&quot;).hide() - 隐藏所有 id=“test” 的元素 你对 CSS 选择器熟悉吗？ jQuery 使用的语法是 XPath 与 CSS 选择器语法的组合。 1. 文档就绪事件 123$(document).ready(function)&#123; // jQuery代码&#125; 所有 jQuery 函数位于一个 document ready 函数中，这是为了防止文档在完全加载（就绪）之前运行 jQuery 代码，即在 DOM 加载完成后才可以对 DOM 进行操作。 如果在文档没有完全加载之前就运行函数，操作可能失败。下面是两个具体的例子： 试图隐藏一个不存在的元素 获得未完全加载的图像的大小 **提示：**简洁写法（与以上写法效果相同）: 123$(function)&#123; // jQuery代码&#125; 以上两种方式你可以选择你喜欢的方式实现文档就绪后执行 jQuery 方法。 笔记： jQuery 入口函数: 1234567$(document).ready(function()&#123; // 执行代码&#125;);或者$(function()&#123; // 执行代码&#125;); JavaScript 入口函数: 123window.onload = function () &#123; // 执行代码&#125; jQuery 入口函数与 JavaScript 入口函数的区别： jQuery 的入口函数是在 html 所有标签(DOM)都加载之后，就会去执行。 JavaScript 的 window.onload 事件是等到所有内容，包括外部图片之类的文件加载完后，才会执行。 二、jQuery 选择器 jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。 1. jQuery 选择器 jQuery 选择器基于元素的 id、类、类型、属性、属性值等&quot;查找&quot;（或选择）HTML 元素。 它基于已经存在的 CSS 选择器，除此之外，它还有一些自定义的选择器。 jQuery 中所有选择器都以美元符号开头：$()。 2. 元素选择器 jQuery 元素选择器基于元素名选取元素。 在页面中选取所有 元素: $(“p”) 实例2 用户点击按钮后，所有 元素都隐藏： 12345$(document).read(function()&#123; $('button').click(function()&#123; $('p').hide(); &#125;);&#125;); 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/2.0.0/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("p").hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;这是一个标题&lt;/h2&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;p&gt;这是另一个段落。&lt;/p&gt; &lt;button&gt;点我&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 3. #id 选择器 jQuery #id 选择器通过 HTML 元素的 id 属性选取指定的元素。页面中元素的 id 应该是唯一的，所以您要在页面中选取唯一的元素需要通过 #id 选择器。 通过 id 选取元素语法如下： $(&quot;#test&quot;) 实例3 当用户点击按钮后，有 id=“test” 属性的元素将被隐藏： 12345$(document).ready(function()&#123; $("button").click(function()&#123; $("#test").hide(); &#125;);&#125;); 4. .class 选择器 jQuery 类选择器可以通过指定的 class 查找元素。 语法如下： $(&quot;.test&quot;) 实例4 用户点击按钮后所有带有 class=“test” 属性的元素都隐藏： 12345$(document).read(function()&#123; $("button").click(function()&#123; $(".test").hide(); &#125;);&#125;); 5. 更多实例 $(&quot;*&quot;) ：选取所有元素； 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/2.0.0/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("*").hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;这是一个标题&lt;/h2&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;p&gt;这是另一个段落。&lt;/p&gt; &lt;button&gt;点我&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1点击“点我”按钮后，“这是一个标题”+“这是一个段落”+“这是另一个段落”全部消失 $(this)：选取当前 HTML 元素； 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/2.0.0/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $(this).hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;这是一个标题&lt;/h2&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;p&gt;这是另一个段落。&lt;/p&gt; &lt;button&gt;点我&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1点击“点我”按钮后，“点我”按钮消失 $(“p.intro”)：选取 class 为 intro 的 元素； 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/2.0.0/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("p.intro").hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2 class="intro"&gt;这是一个标题&lt;/h2&gt; &lt;p class="intro"&gt;这是一个段落，点击按钮隐藏。&lt;/p&gt; &lt;p&gt;这是另一个段落，点击按钮不会隐藏。&lt;/p&gt; &lt;button&gt;点我&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1点击“点我”按钮后，“这是一个段落，点击按钮隐藏。”消失 $(“p:first”)：选取第一个 元素； 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/2.0.0/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("p:first").hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;这是标题&lt;/h2&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;p&gt;这是另外一个段落。&lt;/p&gt; &lt;button&gt;点我&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1点击“点我”按钮后，“这是一个段落。”消失 $(“ul li:first”)：选取第一个 元素的第一个 元素； 12345678910111213141516171819202122232425262728293031&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/2.0.0/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("ul li:first").hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;List 1:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;List 2:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Coffee&lt;/li&gt; &lt;li&gt;Milk&lt;/li&gt; &lt;li&gt;Tea&lt;/li&gt; &lt;/ul&gt; &lt;button&gt;点我&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1点击“点我”按钮后，第一个“Coffee”消失 $(“ul li:first-child”)：选取每个 元素的第一个 元素； 1点击“点我”按钮后，两个“Coffee”都消失 $(&quot;[href]&quot;)：选取带有 href 属性的元素； 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("[href]").hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;这是标题&lt;/h2&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;p&gt;这是另外一个段落。&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.runoob.com/html/"&gt;HTML 教程&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.runoob.com/css/"&gt;CSS 教程&lt;/a&gt;&lt;/p&gt; &lt;button&gt;点我&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1点击“点我”按钮后，“HTML 教程”和“CSS 教程”消失 $(“a[target=’_blank’]”)： 选取所有 target 属性值等于 “_blank” 的 元素； 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("a[target='_blank']").hide(); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;这是标题&lt;/h2&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;p&gt;这是另外一个段落。&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.runoob.com/html/" target="_blank"&gt;HTML 教程&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.runoob.com/css/"&gt;CSS 教程&lt;/a&gt;&lt;/p&gt; &lt;button&gt;点我&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1点击“点我”按钮后，“HTML 教程”消失 $(“a[target!=’_blank’]”)：选取所有 target 属性值不等于 “_blank” 的 元素； 1点击“点我”按钮后，“CSS 教程”消失 $(&quot;:button&quot;)：选取所有 type=“button” 的 元素 和 元素； 1点击“点我”按钮后，“点我”按钮消失 $(“tr:even”)：选取偶数位置的 元素； 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("tr:even").css("background-color","yellow"); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;欢迎访问我的主页&lt;/h1&gt; &lt;table border="1"&gt; &lt;tr&gt; &lt;th&gt;网站名&lt;/th&gt; &lt;th&gt;网址&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Google&lt;/td&gt; &lt;td&gt;http://www.google.com&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Baidu&lt;/td&gt; &lt;td&gt;http://www.baidu.com&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;菜鸟教程&lt;/td&gt; &lt;td&gt;http://www.runoob.com&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;淘宝&lt;/td&gt; &lt;td&gt;http://www.taobao.com&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Facebook&lt;/td&gt; &lt;td&gt;http://www.facebook.com&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&lt;/html&gt; $(“tr:odd”)：选取奇数位置的 元素。 6. 独立文件中使用jQuery函数 如果您的网站包含许多页面，并且您希望您的 jQuery 函数易于维护，那么请把您的 jQuery 函数放到独立的 .js 文件中。 把它们放到一个单独的文件中会更好，就像这样（通过 src 属性来引用文件）： 12345&lt;head&gt; &lt;script src='http://cdn.static.runoob.com/libs/jquery/1.10.2/jquery.min.js'&gt; &lt;/script&gt; &lt;script src='my_jquery_functions.js'&gt;&lt;/script&gt;&lt;/head&gt; 笔记： 通过 $(&quot;:button&quot;) 可以选取所有 type=“button” 的 元素 和 元素，如果去掉冒号，$(“button”)只能获取 元素。 1234&lt;p id="test1"&gt;点进这里测试 &lt;b&gt;button&lt;/b&gt;&lt;/p&gt;&lt;p id="test2"&gt;点进这里测试 &lt;b&gt;:button&lt;/b&gt;&lt;/p&gt;&lt;button&gt;Button 按钮&lt;/button&gt;&lt;input type="button" value="Input 按钮"&gt; 关于 : 和 [] 这两个符号的理解: **：**可以理解为种类的意思，如：p:first，p 的种类为第一个。 [] 很自然的可以理解为属性的意思，如：[href] 选取带有 href 属性的元素。 12345678910111213141516$("#id", ".class") 复合选择器$(div p span) 层级选择器 //div下的p元素中的span元素$(div&gt;p) 父子选择器 //div下的所有p元素$(div+p) 相邻元素选择器 //div后面的p元素(仅一个p)$(div~p) 兄弟选择器 //div后面的所有p元素(同级别)$(.p:last) 类选择器 加 过滤选择器 第一个和最后一个（first 或者 last）$("#mytable td:odd") 层级选择 加 过滤选择器 奇偶（odd 或者 even）$("div p:eq(2)") 索引选择器 div下的第三个p元素（索引是从0开始）$("a[href='www.baidu.com']") 属性选择器$("p:contains(test)") // 内容过滤选择器，包含text内容的p元素$(":emtyp") //内容过滤选择器，所有空标签（不包含子标签和内容的标签）parent 相反$(":hidden") //所有隐藏元素 visible $("input:enabled") //选取所有启用的表单元素$(":disabled") //所有不可用的元素$("input:checked") //获取所有选中的复选框单选按钮等$("select option:selected") //获取选中的选项元素 三、jQuery-HTML 1.jQuery - 获取内容和属性 jQuery 拥有可操作 HTML 元素和属性的强大方法。 (1) jQuery DOM 操作 jQuery 中非常重要的部分，就是操作 DOM 的能力。jQuery 提供一系列与 DOM 相关的方法，这使访问和操作元素和属性变得很容易。 DOM = Document Object Model（文档对象模型）DOM 定义访问 HTML 和 XML 文档的标准：“W3C 文档对象模型独立于平台和语言的界面，允许程序和脚本动态访问和更新文档的内容、结构以及样式。” (2) 获得内容 - text()、html() 以及 val() 三个简单实用的用于 DOM 操作的 jQuery 方法： text() - 设置或返回所选元素的文本内容 html() - 设置或返回所选元素的内容（包括 HTML 标记） val() - 设置或返回表单字段的值 下面的例子演示如何通过 jQuery text() 和 html() 方法来获得内容： 123456$("#btn1").click(function()&#123; alert("Text: " + $("#test").text());&#125;);$("#btn2").click(function()&#123; alert("HTML: " + $("#test").html());&#125;); 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("#btn1").click(function()&#123; alert("Text: " + $("#test").text()); &#125;); $("#btn2").click(function()&#123; alert("HTML: " + $("#test").html()); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p id="test"&gt;这是段落中的 &lt;b&gt;粗体&lt;/b&gt; 文本。&lt;/p&gt; &lt;button id="btn1"&gt;显示文本&lt;/button&gt; &lt;button id="btn2"&gt;显示 HTML&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 12点击“显示文本”按钮：Text: 这是段落中的 粗体 文本。点击“显示HTML”按钮：HTML: 这是段落中的 &lt;b&gt;粗体&lt;/b&gt; 文本。 下面的例子演示如何通过 jQuery val() 方法获得输入字段的值： 123$("#btn1").click(function()&#123; alert("值为: " + $("#test").val());&#125;); 12345678910111213141516171819&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;meta charset="utf-8"&gt; &lt;head&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; alert("值为: " + $("#test").val()); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;名称: &lt;input type="text" id="test" value="菜鸟教程"&gt;&lt;/p&gt; &lt;button&gt;显示值&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1在“名称”框中输入elaine，点击“显示值”按钮：值为: elaine （3）获取属性 - attr() jQuery attr() 方法用于获取属性值。下面的例子演示如何获得链接中 href 属性的值： 123$("button").click(function()&#123; alert($("#runoob").attr("href"));&#125;); 12345678910111213141516171819&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; alert($("#runoob").attr("href")); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;&lt;a href="http://www.runoob.com" id="runoob"&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt; &lt;button&gt;显示 href 属性的值&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 1点击“显示 href 属性的值”按钮： http://www.runoob.com 笔记： 1. attr 和 prop 的区别介绍： 对于 HTML 元素本身就带有的固有属性，在处理时，使用 prop 方法。 对于 HTML 元素我们自己自定义的 DOM 属性，在处理时，使用 attr 方法。 实例 1： 1&lt;a href="https://www.runoob.com" target="_self" class="btn"&gt;菜鸟教程&lt;/a&gt; 这个例子里 元素的 DOM 属性有: href、target 和 class，这些属性就是 元素本身就带有的属性，也是 W3C 标准里就包含有这几个属性，或者说在 IDE 里能够智能提示出的属性，这些就叫做固有属性。处理这些属性时，建议使用 prop 方法。 1&lt;a href="#" id="link1" action="delete" rel="nofollow"&gt;删除&lt;/a&gt; 这个例子里 元素的 DOM 属性有: href、id 和 action，很明显，前两个是固有属性，而后面一个 action 属性是我们自己自定义上去的， 元素本身是没有这个属性的。这种就是自定义的 DOM 属性。处理这些属性时，建议使用 attr 方法。 prop()函数的结果: ​ 1.如果有相应的属性，返回指定属性值。 ​ 2.如果没有相应的属性，返回值是空字符串。 attr()函数的结果: ​ 1.如果有相应的属性，返回指定属性值。 ​ 2.如果没有相应的属性，返回值是 undefined。 对于HTML元素本身就带有的固有属性，在处理时，使用prop方法。 对于HTML元素我们自己自定义的DOM属性，在处理时，使用 attr 方法。 具有 true 和 false 两个属性的属性，如 checked, selected 或者 disabled 使用prop() 2. jQuery - 设置内容和属性 (1) 设置内容 - text()、html() 以及 val() 我们将使用前一章中的三个相同的方法来设置内容： text() - 设置或返回所选元素的文本内容 html() - 设置或返回所选元素的内容（包括 HTML 标记） val() - 设置或返回表单字段的值 下面的例子演示如何通过 text()、html() 以及 val() 方法来设置内容： 123456789$("#btn1").click(function()&#123; $("#test1").text("Hello world!");&#125;);$("#btn2").click(function()&#123; $("#test2").html("&lt;b&gt;Hello world!&lt;/b&gt;");&#125;);$("#btn3").click(function()&#123; $("#test3").val("RUNOOB");&#125;); 1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("#btn1").click(function()&#123; $("#test1").text("Hello world!"); &#125;); $("#btn2").click(function()&#123; $("#test2").html("&lt;b&gt;Hello world!&lt;/b&gt;"); &#125;); $("#btn3").click(function()&#123; $("#test3").val("RUNOOB"); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p id="test1"&gt;这是一个段落。&lt;/p&gt; &lt;p id="test2"&gt;这是另外一个段落。&lt;/p&gt; &lt;p&gt;输入框: &lt;input type="text" id="test3" value="菜鸟教程"&gt;&lt;/p&gt; &lt;button id="btn1"&gt;设置文本&lt;/button&gt; &lt;button id="btn2"&gt;设置 HTML&lt;/button&gt; &lt;button id="btn3"&gt;设置值&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 123点击“设置文本”按钮：“这是一个段落”变成“Hello world!”；点击“设置HTML”按钮：“这是另外一个段落”变成加粗的&quot;Hello world!”；点击“设置值”按钮：输入框中的文字变为“RUNOOB”。 （2）text()、html() 以及 val() 的回调函数 上面的三个 jQuery 方法：text()、html() 以及 val()，同样拥有回调函数。回调函数有两个参数：被选元素列表中当前元素的下标，以及原始（旧的）值。然后以函数新值返回您希望使用的字符串。 下面的例子演示带有回调函数的 text() 和 html()： 1234567891011$("#btn1").click(function()&#123; $("#test1").text(function(i,origText)&#123; return "旧文本: " + origText + " 新文本: Hello world! (index: " + i + ")"; &#125;);&#125;); $("#btn2").click(function()&#123; $("#test2").html(function(i,origText)&#123; return "旧 html: " + origText + " 新 html: Hello &lt;b&gt;world!&lt;/b&gt; (index: " + i + ")"; &#125;);&#125;); 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("#btn1").click(function()&#123; $("#test1").text(function(i,origText)&#123; return "旧文本: " + origText + " 新文本: Hello world! (index: " + i + ")"; &#125;); &#125;); $("#btn2").click(function()&#123; $("#test2").html(function(i,origText)&#123; return "旧 html: " + origText + " 新 html: Hello &lt;b&gt;world!&lt;/b&gt; (index: " + i + ")"; &#125;); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p id="test1"&gt;这是一个有 &lt;b&gt;粗体&lt;/b&gt; 字的段落。&lt;/p&gt; &lt;p id="test2"&gt;这是另外一个有 &lt;b&gt;粗体&lt;/b&gt; 字的段落。&lt;/p&gt; &lt;button id="btn1"&gt;显示 新/旧 文本&lt;/button&gt; &lt;button id="btn2"&gt;显示 新/旧 HTML&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; 12点击“显示 新/旧 文本”按钮：“这是一个有 粗体 字的段落”变为“旧文本: 这是一个有 粗体 字的段落。 新文本: Hello world! (index: 0)”；点击“显示 新/旧 HTML”按钮：“这是另外一个有 粗体 字的段落”变为“旧 html: 这是另外一个有 粗体 字的段落。 新 html: Hello world! (index: 0)”。 （3）设置属性 - attr() jQuery attr() 方法也用于设置/改变属性值。下面的例子演示如何改变（设置）链接中 href 属性的值： 123$("button").click(function()&#123; $("#runoob").attr("href","http://www.runoob.com/jquery");&#125;); 1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("#runoob").attr("href","http://www.runoob.com/jquery"); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;&lt;a href="http://www.runoob.com" id="runoob"&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt; &lt;button&gt;修改 href 值&lt;/button&gt; &lt;p&gt;点击按钮修改后，可以点击链接查看链接地址是否变化。&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; attr() 方法也允许同时设置多个属性。下面的例子演示如何同时设置 href 和 title 属性： 123456$("button").click(function()&#123; $("#runoob").attr(&#123; "href" : "http://www.runoob.com/jquery", "title" : "jQuery 教程" &#125;);&#125;); 1234567891011121314151617181920212223242526&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("#runoob").attr(&#123; "href" : "http://www.runoob.com/jquery", "title" : "jQuery 教程" &#125;); // 通过修改的 title 值来修改链接名称 title = $("#runoob").attr('title'); $("#runoob").html(title); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;&lt;a href="http://www.runoob.com" id="runoob"&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt; &lt;button&gt;修改 href 和 title&lt;/button&gt; &lt;p&gt;点击按钮修改后，可以查看 href 和 title 是否变化。&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 1点击“修改 href 和 title”按钮后，“菜鸟教程”及其连接变成“jQuery 教程”及其链接。 （4）attr() 的回调函数 jQuery 方法 attr()，也提供回调函数。回调函数有两个参数：被选元素列表中当前元素的下标，以及原始（旧的）值。然后以函数新值返回您希望使用的字符串。 下面的例子演示带有回调函数的 attr() 方法： 12345$("button").click(function()&#123; $("#runoob").attr("href", function(i,origValue)&#123; return origValue + "/jquery"; &#125;);&#125;); 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("button").click(function()&#123; $("#runoob").attr("href", function(i, origValue)&#123; return origValue + "/jquery"; &#125;); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;&lt;a href="http://www.runoob.com" id="runoob"&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt; &lt;button&gt;修改 href 值&lt;/button&gt; &lt;p&gt;点击按钮修改后，可以点击链接查看 href 属性是否变化。&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 3. jQuery - 添加元素 (1) 添加新的 HTML 内容 我们将学习用于添加新内容的四个 jQuery 方法： append() - 在被选元素的结尾插入内容 prepend() - 在被选元素的开头插入内容 after() - 在被选元素之后插入内容 before() - 在被选元素之前插入内容 (2) jQuery append() 方法 jQuery append() 方法在被选元素的结尾插入内容（仍然该元素的内部）。 1$("p").append("追加文本"); 1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("#btn1").click(function()&#123; $("p").append(" &lt;b&gt;追加文本&lt;/b&gt;。"); &#125;); $("#btn2").click(function()&#123; $("ol").append("&lt;li&gt;追加列表项&lt;/li&gt;"); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;p&gt;这是另外一个段落。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;List item 1&lt;/li&gt; &lt;li&gt;List item 2&lt;/li&gt; &lt;li&gt;List item 3&lt;/li&gt; &lt;/ol&gt; &lt;button id="btn1"&gt;添加文本&lt;/button&gt; &lt;button id="btn2"&gt;添加列表项&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; (3) jQuery prepend() 方法 jQuery prepend() 方法在被选元素的开头插入内容。 1$("p").prepend("在开头追加文本"); 123456789101112131415161718192021222324252627282930&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; $(document).ready(function()&#123; $("#btn1").click(function()&#123; $("p").prepend("&lt;b&gt;在开头追加文本&lt;/b&gt;。 "); &#125;); $("#btn2").click(function()&#123; $("ol").prepend("&lt;li&gt;在开头添加列表项&lt;/li&gt;"); &#125;); &#125;); &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;p&gt;这是另外一个段落。&lt;/p&gt; &lt;ol&gt; &lt;li&gt;列表 1&lt;/li&gt; &lt;li&gt;列表 2&lt;/li&gt; &lt;li&gt;列表 3&lt;/li&gt; &lt;/ol&gt; &lt;button id="btn1"&gt;添加文本&lt;/button&gt; &lt;button id="btn2"&gt;添加列表项&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; (4) 通过 append() 和 prepend() 方法添加若干新元素 append() 和 prepend() 方法能够通过参数接收无限数量的新元素。可以通过 jQuery 来生成文本/HTML（就像上面的例子那样），或者通过 JavaScript 代码和 DOM 元素。 在下面的例子中，我们创建若干个新元素。这些元素可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建。然后我们通过 append() 方法把这些新元素追加到文本中（对 prepend() 同样有效）： 12345678function appendText()&#123; var txt1="&lt;p&gt;文本。&lt;/p&gt;"; // 使用 HTML 标签创建文本 var txt2=$("&lt;p&gt;&lt;/p&gt;").text("文本。"); // 使用 jQuery 创建文本 var txt3=document.createElement("p"); txt3.innerHTML="文本。"; // 使用 DOM 创建文本 text with DOM $("body").append(txt1,txt2,txt3); // 追加新元素&#125; 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; &lt;meta charset="utf-8"&gt; &lt;script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"&gt; &lt;/script&gt; &lt;script&gt; function appendText()&#123; var txt1="&lt;p&gt;文本。&lt;/p&gt;"; // 使用 HTML 标签创建文本 var txt2=$("&lt;p&gt;&lt;/p&gt;").text("文本。"); // 使用 jQuery 创建文本 var txt3=document.createElement("p"); txt3.innerHTML="文本。"; // 使用 DOM 创建文本 text with DOM $("body").append(txt1,txt2,txt3); // 追加新元素 &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;这是一个段落。&lt;/p&gt; &lt;button onclick="appendText()"&gt;追加文本&lt;/button&gt; &lt;/body&gt;&lt;/html&gt; (5) jQuery after() 和 before() 方法 jQuery after() 方法在被选元素之后插入内容。jQuery before() 方法在被选元素之前插入内容。 12$("img").after("在后面添加文本");$("img").before("在前面添加文本"); (6) 通过 after() 和 before() 方法添加若干新元素 after() 和 before() 方法能够通过参数接收无限数量的新元素。可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建新元素。 在下面的例子中，我们创建若干新元素。这些元素可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建。然后我们通过 after() 方法把这些新元素插到文本中（对 before() 同样有效）： 12345678function afterText()&#123; var txt1="&lt;b&gt;I &lt;/b&gt;"; // 使用 HTML 创建元素 var txt2=$("&lt;i&gt;&lt;/i&gt;").text("love "); // 使用 jQuery 创建元素 var txt3=document.createElement("big"); // 使用 DOM 创建元素 txt3.innerHTML="jQuery!"; $("img").after(txt1,txt2,txt3); // 在图片后添加文本&#125;]]></content>
      <categories>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[15_Await]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-15-Await%2F</url>
    <content type="text"><![CDATA[15-Node.js中Promise、Async、await使用 async是“异步”的简写，await是“async wait”的简写。async用于申明一个function是异步的，而await用于等待一个异步方法执行完成。 async让方法变成异步； await等待异步方法执行完成。 async让方法变成异步。在终端里用node执行这段代码，你会发现输出了 Promise{‘Hello async’}，这时候它返回的是Promise。 12345// 首先定义一个普通方法getData，返回一个数据function getData()&#123; return '这是一个数据';&#125;console.log(getData()); // 打印此方法中的数据 用async让方法变成Promise的异步方法： 1234async function getData()&#123; return '这是一个数据';&#125;console.log(getData()); 12&gt;node test.jsPromise &#123; &apos;这是一个数据&apos; &#125; 如何获取async异步方法里面的数据： 用类似于回调的方法和Promise中.then()方法 1234567async function getData()&#123; return '这是一个数据';&#125;var p = getData(); // 此时p是一个Promise对象p.then((data)=&gt;&#123; console.log(data); // 拿到异步方法里面的数据&#125;); 用await方法（可以获取异步方法里面的数据，但是必须用在异步方法里面） 12345678async function getData()&#123; return '这是一个数据';&#125;async function test()&#123; var d = await getData(); console.log(d);&#125;test(); // 打印'这是一个数据' async阻塞的功能，可以把异步改成一个同步 1234567891011async function getData()&#123; console.log(2); return '这是一个数据';&#125;async function test()&#123; console.log(1); var d = await getData(); console.log(d); console.log(3);&#125;test(); 12345&gt;node test.js12这是一个数据3 如果是异步的，应该是132不是123，说明await让方法变成了同步的。 用Promise方法 123456789101112function getData()&#123; return new Promise((resolve,reject)=&gt;&#123; setTimeout(()=&gt;&#123; var username = '张三'; resolve(username); &#125;,1000); &#125;);&#125;var p = getData();p.then(function(d)&#123; console.log(d);&#125; 换成await就简单了 12345678910111213function getData()&#123; return new Promise((resolve,reject)=&gt;&#123; setTimeout(()=&gt;&#123; var username = '张三'; resolve(username); &#125;,1000); &#125;);&#125;async function test()&#123; var data = await getData(); console.log(data);&#125;test();]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[14_Restful_API]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-14-Restful-API%2F</url>
    <content type="text"><![CDATA[14-Node.js RESTful API 什么是REST? REST即表述性状态传递（英文：Representational State Transfer，简称REST）是Roy Fielding博士在2000年他的博士论文中提出来的一种软件架构风格。表述性状态转移是一组架构约束条件和原则。满足这些约束条件和原则的应用程序或设计就是RESTful。 注意，REST是设计风格而不是标准。REST通常基于使用HTTP，URI，和XML（标准通用标记语言下的一个子集）以及HTML（标准通用标记语言下的一个应用）这些现有的广泛流行的协议和标准。REST 通常使用 JSON 数据格式。 什么是REST API? 要解释什么是REST，你应该先了解什么是API（Application Programming Interface，应用程序编程接口），形象一点说就像是腾讯、阿里巴巴这些公司提供的API接口，我们可以编写一个软件去跟这个API接口连接或交互。 举个栗子，比如你可以用手机的某些软件分享内容到微信朋友圈，这个软件就是与微信的API进行了交互。知道了API，就容易理解REST了。REST是什么呢？它是一种架构风格，是腾讯、阿里巴巴等公司建立API时要遵守的一种风格，当然也有其他的风格可以用。 要具体解析什么是REST，我们还必须提到Web，因为REST是以Web为平台的。 Web是什么: 分布式信息系统为超文本文件和其他对象（资源）提供访问入口。资源是Web架构的关键点,需要 3个操作：识别(identify) 表示(represent) 交互(interact with)。通过这三个操作，又引出三个概念：uri（统一资源标识符包括url和urn）识别资源；representation （例如html，xml，图片，视频等等）表示资源；通过协议（包括http，ftp等等）与资源进行交互。 所以REST就是选择通过使用http协议和uri，利用client/server model对资源进行CRUD (Create/Read/Update/Delete)增删改查操作。 为什么要使用REST风格？ REST风格的限制及其优点： 客户-服务器（Client-Server）客户端服务器分离； 优点：提高用户界面的便携性（操作简单），简化服务器提高可伸缩性（高性能，低成本），允许组件分别优化（可以让服务端和客户端分别进行改进和优化）。 无状态（Stateless）客户端的每个请求要包含服务器所需要的所有信息； 优点：提高可见性（可以单独考虑每个请求），提高了可靠性（更容易从局部故障中修复），提高了可靠性（更容易从局部故障中修复）。 缓存（Cachable）服务器返回信息必须被标记是否可以缓存，如果缓存，客户端可能会重用之前的信息发送请求； 优点：减少交互次数，减少交互的平均延迟。 分层系统（Layered System）系统组件不需要知道与他交流组件之外的事情。封装服务，引入中间层； 优点：限制了系统的复杂性，提高可扩展性。 统一接口（Uniform Interface）； 优点：提高交互的可见性，鼓励单独改善组件。 支持按需代码（Code-On-Demand 可选）； 优点：提高可扩展性… 举例说明什么是Representation，什么是State，以及什么是Representation State Transfer Representation 例如我订阅了一个人的博客，想要获取他发表的所有文章（这里『他发表的所有文章』就是一个资源Resource）。于是我就向他的服务发出请求，说『我要获取你发表的所有文章，最好是atom格式的』，这时候服务器向你返回了atom格式的文章列表第一页（这里『atom格式的文章列表』就是表征Representation）。 State 你看到了第一页的页尾，想要看第二页，这时候有趣的事情就来了。如果服务器记录了应用的状态（stateful），那么你只要向服务询问『我要看下一页』，那么服务器自然就会返回第二页。类似的，如果你当前在第二页，想服务器请求『我要看下一页』，那就会得到第三页。但是REST的服务器恰恰是无状态的（stateless），服务器并没有保持你当前处于第几页，也就无法响应『下一页』这种具有状态性质的请求。因此客户端需要去维护当前应用的状态（application state），也就是『如何获取下一页资源』。当然，『下一页资源』的业务逻辑必然是由服务端来提供。服务器在文章列表的atom表征中加入一个URI超链接（hyper link），指向下一页文章列表对应的资源。客户端就可以使用统一接口（Uniform Interface）的方式，从这个URI中获取到他想要的下一页文章列表资源。上面的『能够进入下一页』就是应用的状态（State）。 Representation State Transfer 服务器把『能够进入下一页』这个状态以atom表征形式**传输（Transfer）给客户端就是表征状态传输（REpresentational State Transfer）**这个概念。 举个具体API的例子： 1234567891011121314151617181920212223242526272829// 请求GET /posts HTTP/1.1Accept: application/atom+xml// 响应HTTP/1.1 200 OKContent-Type: application/atom+xml&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;feed xmlns="http://www.w3.org/2005/Atom"&gt; &lt;title&gt;Posts&lt;/title&gt; &lt;link href="http://example.org/posts" rel="self" /&gt; &lt;link href="http://example.org/posts?pn=2" rel="next" /&gt; &lt;id&gt;urn:uuid:60a76c80-d399-11d9-b91C-0003939e0af6&lt;/id&gt; &lt;updated&gt;2003-12-13T18:30:02Z&lt;/updated&gt; &lt;entry&gt; &lt;title&gt;Post XXX&lt;/title&gt; &lt;link href="http://example.org/post-xxx" /&gt; &lt;id&gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&lt;/id&gt; &lt;updated&gt;2003-12-13T18:30:02Z&lt;/updated&gt; &lt;content type="xhtml"&gt; &lt;div xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;p&gt;This is the post content.&lt;/p&gt; &lt;/div&gt; &lt;/content&gt; &lt;/entry&gt; &lt;entry&gt;...&lt;/entry&gt;&lt;/feed&gt; 上面atom格式中的多个元素，它们分别定义了当前状态下合法的状态转移。 例如，这是一个指向自己的链接，其中rel属性指定了状态转移的关系为自身。 1&lt;link href="http://example.org/posts" rel="self" /&gt; 这是下一页的链接， 1&lt;link href="http://example.org/posts?pn=2" rel="next" /&gt; 如果当前不是第一页的话，就会有类似如下的链接来表示上一页， 1&lt;link href="http://example.org/posts?pn=2" rel="prev" /&gt; 而这个是某一篇文章的链接， 1&lt;link href="http://example.org/post-xxx" /&gt; 总结一下，就是： 服务器生成包含状态转移的表征数据，用来响应客户端对于一个资源的请求； 客户端借助这份表征数据，记录了当前的应用状态以及对应可转移状态的方式。 为了要实现这一系列的功能，一个不可或缺的东西就是超文本（hypertext）或者说超媒体类型（hypermedia type）。这绝对不是一个简简单单的媒体类型（例如，JSON属性列表）可以做到的。 REST是怎么产生的？ http是目前在互联网上使用最多的协议，没有之一。可是http的创始人一直都觉得，在过去10几年来，所有的人都在错误的使用Http. 这句话怎么说呢？如果说你要删除一个数据，以往的做法通常是 delete/{id}。如果你要更新一个数据，可能是Post数据放Body，然后方法是 update/{id}， 或者是artichle/{id}?method=update。 这种做法让Roy Fielding很暴燥，他觉得这个世界不该这样的，所有的人都在误解而且在严重错误的误解Http的设计初衷，好比是发明了火药却只用它来做烟花爆竹。那么正确的使用方式是什么呢？如果你要看Rest各种特性，你恐怕真的很难理解Rest，但是如果你看错误的使用http的人倒底儿了哪些错，什么是Rest就特别容易理解了。 七宗罪的第一条，混乱。 一万个人心里有一万个Url的命名规则，Url是统一资源定位符，重点是资源。而很多人却把它当成了万金油，每一个独立的虚拟的网页都可以随意使用，各种操作都能够迭加。这是混乱的来源之一。 第二条，贪婪。 有状态和无状态全部混在一起。特别是在购物车或者是登录的应用中，经常刷新就丢失带来的用户体验简直棒棒哒。每一个请求并不能单独的响应一些功能，很多的功能混杂在一起里。 这是人性贪婪的本质，也是各种Hack的起源，只要能够把问题解决掉，总会有人用他认为最方便的方式去解决问题，比如说汽车门把手坏掉了直接系根绳子当把手，emmmm这样确实很棒啊。 第三条，无序。 返回的结果往往是很随意，各种错误信息本来就是用Http的状态码构成的，可是很多人还是喜欢把错误信息返回在返回值中。最常见的就是Code和Message，当然对于这一点，我个人是保留疑问的，我的观点是，Http本身的错误和服务器的内部错误还是需要在不断层面分开的，不能混在一起。可是在大神眼里并非如此，这个再议。 好了我编不下去了。那么怎么解决这些问题呢？强迫症患者的福音就是先颁规则，第一个规则就是明确Url是什么，该怎么用。 就是所有的Url本质来讲，都应该是一种资源。一个独立的Url地址，就是对应一个独一无二的资源。怎么样？这种感觉是不是棒棒哒？一个冰淇淋，一个老师，一间房子，在Url上对应的都是一个资源，不会有多余的Url跟他对应，也不会表示有多个Url地址~~注意，这里点的是Url地址，并不是单独的参数，他就是一个/room/{room_id}这样的东西，举个栗子,/room/3242 这就表示3242号房间。 这是一个清爽的世界啊，你想想，之前的Url是什么都要，我开房，可能是/open/room/3242 我要退房可能是/exit/3242/room，我要打理房间，可能是room/3242?method=clean. 够了！这些乱七八糟的东西全够了，让世界回归清爽的本质，一间房，就是/room/3242 没有别的Url地址了。那我想要对这个资源有操作怎么办？ 这就是棒棒哒大神想出来的了，http有几种Method来着？get ,put ,post,delete，还有其他隐藏的4种。 在过去的混乱世界里，经常用的就是Get和Post。如果不是因为Get不支持大数据传输，我想连Post都会有人使用。（想像一下Roy Fielding在愤怒的对着电脑屏幕喊，Http的Method一共有八个，你们为毛只逮着Get一只羊的毛薅薅薅薅薅）。 而对资源最常见的操作是什么？CRUD，对不对，就是创建，读，更新，删除。再看Http的Method？是不是非常完美？其实也怪Fielding老爷子一开始命名不准确，如果刚开始就是把Get方法叫做Read，Put方法叫做Update，Post叫做Create这该多好。。 你用一个Get，大家又发现没什么限制没什么所谓，又很难理解Put和Post的差别，法无禁止即可为啊，呃，老爷子不要瞪我，我瞎说的。 总之，这四种方法够不够你浪？你有本事找出来更多的对资源的操作来啊，我还有4个Method没用过呢。如果这4个真的不够了，有什么问题，大不了我再重新更改http协议啊。 其实简单说，对于Rest理解到这里就够了。后续的东西，都是在这一条基础上空想出来的，比强迫症更强迫症，当然，无状态我是百分百支持的。 以上的各种表述可能不太准确，也纯属是我的意淫和各种小道资料，并未考据，但是凭良心讲，我是早就看不惯黑暗年代里的Url命名风格了，所以当时最早接触到Rest的时候，瞬间就找到了真爱，我靠，这不就是我一直想要的答案吗？但是我一直想的仅仅是命名规范，从来没有把自己的思考角度放在一个url就是一个资源，所有的操作都是对资源的更改而言的角度上啊。 所以你能理解到的程度，更多的就是在于你要弄清楚你要解决的什么问题，如果你的问题只是理解Rest，恐怕你很理解，如果你的问题是怎么解决Url混乱的问题，你反而很快能弄懂了~ HTTP方法 以下为 REST 基本架构的四个方法： GET - 用于获取数据。 PUT - 用于更新或添加数据。 DELETE - 用于删除数据。 POST - 用于添加数据。 RESTful Web Services Web service是一个平台独立的，低耦合的，自包含的、基于可编程的web的应用程序。基于 REST 架构的 Web Services 即是 RESTful。 由于轻量级以及通过 HTTP 直接传输数据的特性，Web 服务的 RESTful 方法已经成为最常见的替代方法。可以使用各种语言（比如 Java 程序、Perl、Ruby、Python、PHP 和 Javascript[包括 Ajax]）实现客户端。 RESTful Web 服务通常可以通过自动客户端或代表用户的应用程序访问。但是，这种服务的简便性让用户能够与之直接交互，使用它们的 Web 浏览器构建一个 GET URL 并读取返回的内容。 如果你还不明白，下面的理解都是对的，可以找到你容易理解的对号： URL定位资源，用HTTP动词（GET,POST,DELETE,DETC）描述操作。 就是用URL定位资源，用HTTP描述操作。 如何使用RESTful风格的API 一、域名： 将api部署在专用域名下： 1http://api.example.com 或者将api放在主域名下： 1http://www.example.com/api/ 二、版本： 将API的版本号放在url中。 12http://www.example.com/app/1.0/infohttp://www.example.com/app/1.2/info 三、路径： 路径表示API的具体网址。每个网址代表一种资源。 资源作为网址，网址中不能有动词只能有名词，一般名词要与数据库的表名对应。而且名词要使用复数。 错误示例： 12http://www.example.com/getGoodshttp://www.example.com/listOrders 正确示例： 123456#获取单个商品http://www.example.com/app/goods/1#获取所有商品http://www.example.com/app/goods 四、使用标准的HTTP方法： 对于资源的具体操作类型，由HTTP动词表示。 常用的HTTP动词有四个。 1234GET SELECT ：从服务器获取资源。POST CREATE ：在服务器新建资源。PUT UPDATE ：在服务器更新资源。DELETE DELETE ：从服务器删除资源。 示例： 1234567891011#获取指定商品的信息GET http://www.example.com/goods/ID#新建商品的信息POST http://www.example.com/goods#更新指定商品的信息PUT http://www.example.com/goods/ID#删除指定商品的信息DELETE http://www.example.com/goods/ID 五、过滤信息： 如果资源数据较多，服务器不能将所有数据一次全部返回给客户端。API应该提供参数，过滤返回结果。 实例： 12345678#指定返回数据的数量http://www.example.com/goods?limit=10#指定返回数据的开始位置http://www.example.com/goods?offset=10#指定第几页，以及每页数据的数量http://www.example.com/goods?page=2&amp;per_page=20 六、状态码： 服务器向用户返回的状态码和提示信息，常用的有： 123456789200 OK ：服务器成功返回用户请求的数据201 CREATED ：用户新建或修改数据成功。202 Accepted：表示请求已进入后台排队。400 INVALID REQUEST ：用户发出的请求有错误。401 Unauthorized ：用户没有权限。403 Forbidden ：访问被禁止。404 NOT FOUND ：请求针对的是不存在的记录。406 Not Acceptable ：用户请求的的格式不正确。500 INTERNAL SERVER ERROR ：服务器发生错误。 七、错误信息： 一般来说，服务器返回的错误信息，以键值对的形式返回。 123&#123; error: &apos;Invalid API KEY&apos;&#125; 八、响应结果： 针对不同结果，服务器向客户端返回的结果应符合以下规范。 1234567891011#返回商品列表GET http://www.example.com/goods#返回单个商品GET http://www.example.com/goods/cup#返回新生成的商品POST http://www.example.com/goods#返回一个空文档DELETE http://www.example.com/goods 九、使用链接关联相关的资源： 在返回响应结果时提供链接其他API的方法，使客户端很方便的获取相关联的信息。 十、其他： 服务器返回的数据格式，应该尽量使用JSON，避免使用XML。 创建RESTful 首先，创建一个 json 数据资源文件 users.json，内容如下： users.json 1234567891011121314151617181920&#123; "user1" : &#123; "name" : "mahesh", "password" : "password1", "profession" : "teacher", "id": 1 &#125;, "user2" : &#123; "name" : "suresh", "password" : "password2", "profession" : "librarian", "id": 2 &#125;, "user3" : &#123; "name" : "ramesh", "password" : "password3", "profession" : "clerk", "id": 3 &#125;&#125; 基于以上数据，我们创建以下 RESTful API： 序号 URI HTTP方法 发送内容 结果 1 listUsers GET 空 显示所有用户列表 2 addUser POST JSON 字符串 添加新用户 3 deleteUser DELETE JSON 字符串 删除用户 4 :id GET 空 显示用户详细信息 1. 获取用户列表： 以下代码，我们创建了 RESTful API listUsers，用于读取用户的信息列表， server.js 文件代码如下所示： server.js 123456789101112131415var express = require('express');var app = express();var fs = require('fs');app.get('/listUsers',function(req,res)&#123; fs.readFile(__dirname+'/'+'users.json','utf8',function(err,data)&#123; console.log(data); res.end(data); &#125;);&#125;);var server = app.listen(8081,function()&#123; var host = server.address().address; var port = server.address().port; console.log('应用实例，访问地址为 http://%s:%s',host,port);&#125;); 接下来执行以下命令： 12$ node server.js 应用实例，访问地址为 http://0.0.0.0:8081 在浏览器中访问 http://127.0.0.1:8081/listUsers，结果如下所示： 1234567891011121314151617181920&#123; &quot;user1&quot; : &#123; &quot;name&quot; : &quot;mahesh&quot;, &quot;password&quot; : &quot;password1&quot;, &quot;profession&quot; : &quot;teacher&quot;, &quot;id&quot;: 1 &#125;, &quot;user2&quot; : &#123; &quot;name&quot; : &quot;suresh&quot;, &quot;password&quot; : &quot;password2&quot;, &quot;profession&quot; : &quot;librarian&quot;, &quot;id&quot;: 2 &#125;, &quot;user3&quot; : &#123; &quot;name&quot; : &quot;ramesh&quot;, &quot;password&quot; : &quot;password3&quot;, &quot;profession&quot; : &quot;clerk&quot;, &quot;id&quot;: 3 &#125;&#125; 2. 添加用户： 以下代码，我们创建了 RESTful API addUser， 用于添加新的用户数据，server.js 文件代码如下所示： addUser.js 1234567891011121314151617181920212223242526var express = require('express');var app = express();var fs = require('fs');// 添加的新用户数据var user = &#123; "user4":&#123; "name":"mohit", "password":"password4", "profession":"teacher", "id":4 &#125;&#125;app.get('/addUser',function(req,res)&#123; // 读取已存在的数据 fs.readFile(__dirname+'/'+'users.json','utf8',function(err,data)&#123; data = JSON.parse(data); data["user4"] = user["user4"]; console.log(data); res.end(JSON.stringify(data)); &#125;);&#125;);var server = app.listen(8081,function()&#123; var host = server.address().address; var port = server.address().port; console.log('应用实例，访问地址为 http://%s:%s',host,port);&#125;); 接下来执行以下命令： 12$ node server.js 应用实例，访问地址为 http://0.0.0.0:8081 在浏览器中访问 http://127.0.0.1:8081/addUser，结果如下所示： 123456789101112131415161718192021&#123; user1: &#123; name: &apos;mahesh&apos;, password: &apos;password1&apos;, profession: &apos;teacher&apos;, id: 1 &#125;, user2: &#123; name: &apos;suresh&apos;, password: &apos;password2&apos;, profession: &apos;librarian&apos;, id: 2 &#125;, user3: &#123; name: &apos;ramesh&apos;, password: &apos;password3&apos;, profession: &apos;clerk&apos;, id: 3 &#125;, user4: &#123; name: &apos;mohit&apos;, password: &apos;password4&apos;, profession: &apos;teacher&apos;, id: 4 &#125; &#125; 3. 显示用户详情： 以下代码，我们创建了 RESTful API :id（用户id）， 用于读取指定用户的详细信息，server.js 文件代码如下所示： server.js 1234567891011121314151617var express = require('express');var app = express();var fs = require('fs');app.get('/:id',function(req,res)&#123; // 首先我们读取已存在的用户 fs.readFile(__dirname+'/'+'users.json','utf8',function(err,data)&#123; data = JSON.parse(data); var user = data["user" + req.params.id]; console.log(user); res.end(JSON.stringify(user)); &#125;);&#125;);var server = app.listen(8081,function()&#123; var host = server.address().address; var port = server.address().port; console.log('应用实例，访问地址为 http://%s:%s',host,port);&#125;); 接下来执行以下命令： 12$ node server.js 应用实例，访问地址为 http://0.0.0.0:8081 在浏览器中访问 http://127.0.0.1:8081/2，结果如下所示： 123456&#123; &quot;name&quot;:&quot;suresh&quot;, &quot;password&quot;:&quot;password2&quot;, &quot;profession&quot;:&quot;librarian&quot;, &quot;id&quot;:2&#125; 4. 删除用户： 以下代码，我们创建了 RESTful API deleteUser， 用于删除指定用户的详细信息，以下实例中，用户 id 为 2，server.js 文件代码如下所示： server.js 123456789101112131415161718var express = require('express');var app = express();var fs = require("fs");var id = 2;app.get('/deleteUser',function(req,res)&#123; // First read existing users fs.readFile(__dirname+'/'+'users.json','utf8',function(err,data)&#123; data = JSON.parse(data); delete data["user" + id]; console.log(data); res.end(JSON.stringify(data)); &#125;);&#125;);var server = app.listen(8081,function()&#123; var host = server.address().address; var port = server.address().port; console.log('应用实例，访问地址为 http://%s:%s',host,port);&#125;); 接下来执行以下命令： 12$ node server.js 应用实例，访问地址为 http://0.0.0.0:8081 在浏览器中访问 http://127.0.0.1:8081/deleteUser，结果如下所示： 1234567891011&#123; user1: &#123; name: &apos;mahesh&apos;, password: &apos;password1&apos;, profession: &apos;teacher&apos;, id: 1 &#125;, user3: &#123; name: &apos;ramesh&apos;, password: &apos;password3&apos;, profession: &apos;clerk&apos;, id: 3 &#125; &#125; 如果有人遇到乱码的问题，除了不是文件读取的编码问题，可以考虑为浏览器自动为没有在 html &gt; head 中解释编码的 html 编码为本地默认编码。可以主动添加 head： 1res.setHeader(&apos;Content-Type&apos;, &apos;text/html; charset=utf8&apos;); 如果在同一个 server.js 里创建多个 RESTful API ， 并且 :id 放在前边， 那么它会拦截其他的请求， 比如： 12345678910111213141516171819202122232425var id = 2;// 删除用户app.get('/deleteUser', function (req, res) &#123; // 读取已存在用户 fs.readFile( __dirname + "/" + "user.json", 'utf8', function (err, data) &#123; data = JSON.parse( data ); delete data["user" + id]; console.log( data ); res.end( JSON.stringify(data)); &#125;);&#125;);// 查询用户信息 (放到前边会拦截其他请求)app.get('/:id', function(req, resp)&#123; fs.readFile(__dirname + '/user.json', 'utf-8', function(err, data)&#123; if(err)&#123; console.log(err.stack); return; &#125; data = JSON.parse(data); var user = data['user' + req.params.id]; console.log(user); resp.end(JSON.stringify(user)); &#125; );&#125;); 在浏览器中访问 http://127.0.0.1:8081/deleteUser， 控制台打印信息如下： 123应用实例，访问地址为 http://0.0.0.0:8081undefinedundefined 最后，如果还是不明白，可以看看https://phpenthusiast.com/blog/what-is-rest-api ，这篇文章的解释是比较容易理解的。]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[01_ubuntu_configuration]]></title>
    <url>%2F2019%2F04%2F22%2Flinux-01-ubuntu-configuration%2F</url>
    <content type="text"><![CDATA[01-Ubuntu配置 cat /etc/issue 查看内核版本 12~$ cat /etc/issueUbuntu 16.04.6 LTS \n \l sudo lsb_release -a 查看内核版本(详细信息) 12345~$ sudo lsb_release -aDistributor ID: UbuntuDescription: Ubuntu 8.04Release: 8.04Codename: hardy 查看系统版本号 1~$ cat /proc/version uname -r 查看内核版本号 12~$ uname -r 4.15.0-46-generic pwd 显示当前路径 12~$ pwd/homt/acs ls 列出目标目录中所有的子目录和文件 12345678910111213141516171819202122常用参数：-a -all：列出目录下的所有文件，包括以 . 开头的隐含文件-A 同-a，但不列出“.”(表示当前目录)和“..”(表示当前目录的父目录)-c 配合 -lt：根据ctime排序及显示ctime (文件状态最后更改的时间) 配合 -l：显示ctime但根据名称排序否则：根据ctime排序-C 每栏由上至下列出项目-color[=WHEN] 控制是否使用色彩分辨文件。WHEN 可以是'never'、'always'或'auto'其中之一-d –directory 将目录象文件一样显示，而不是显示其下的文件-D –dired 产生适合Emacs的dired模式使用的结果-h –human-readable 以容易理解的格式列出文件大小-i –inode 印出每个文件的inode号-m 所有项目以逗号分隔，并填满整行行宽-o 类似 -l,显示文件的除组信息外的详细信息-r –reverse 依相反次序排列-R –recursive 同时列出所有子目录层-s –size 以块大小为单位列出所有文件的大小-S 根据文件大小排序-t 以文件修改时间排序-u 配合-lt:显示访问时间而且依访问时间排序 配合 -l:显示访问时间但根据名称排序 否则：根据访问时间排序-l 每行只列出一个文件 常用范例： 1234567891011121314151617181920212223242526272829例一：列出/home/peidachang文件夹下的所有文件和目录的详细资料命令：ls -l -R /home/peidachang命令：ls -lR /home/peidachang 和上面的命令形式执行的结果是完全一样的例二：列出当前目录中所有以“t”开头的目录的详细内容命令：ls -l t*例三：只列出文件下的子目录命令：ls -F /opt/soft |grep /$ 列出 /opt/soft 文件下面的子目录命令：ls -l /opt/soft | grep "^d" 列出 /opt/soft 文件下面的子目录详细情况例四：列出目前工作目录下所有名称是s 开头的档案，愈新的排愈后面命令：ls -ltr s* 例五：列出目前工作目录下所有档案及目录;目录于名称后加"/"命令：ls -AF例七: 在ls中列出文件的绝对路径命令：ls | sed "s:^:`pwd`/:"例九：列出当前目录下的所有文件（包括隐藏文件）的绝对路径， 对目录不做递归命令：find $PWD -maxdepth 1 | xargs ls -ld例十：递归列出当前目录下的所有文件（包括隐藏文件）的绝对路径命令： find $PWD | xargs ls -ld 例十一：指定文件时间输出格式命令：ls -tl --time-style=full-iso命令：ls -ctl --time-style=long-iso rm 删除一个目录中的一个或多个文件或目录 1234567891011121314151617实例一：删除文件file，系统会先询问是否删除命令：rm 文件名实例二：强行删除file，系统不再提示命令：rm -f log1.log实例三：删除任何.log文件；删除前逐一询问确认 命令：rm -i *.log实例四：将test1子目录及子目录中所有档案删除命令：rm -r test1实例五：rm -rf test2命令会将test2子目录及子目录中所有档案删除,并且不用一一确认命令：rm -rf test2 实例六：删除以 -f 开头的文件命令：rm -- -f code --verbose 启动VSCode 1~$ code --verbose nodejs ubuntu-make一键安装开发环境(大大精简安装开发环境的过程) 相比于Windows，Linux下安装软件已经非常简便了，一般只需要一句命令，或者通过 Ubuntu软件中心（Ubuntu Software Center）。Ubuntu Developer Tools Center“Ubuntu开发者工具中心”是在Ubuntu 14.10版本中出现的，到了15.04版本就改名为ubuntu-make了。 ubuntu-make就是旨在方便开发者安装软件开发环境的这么一个命令行工具，让你可以在命令行中输入一行简单的代码，然后敲一下回车键，即可开始安装你所指定的开发环境。 12345678910111213141516(1)安装最新版ubuntu-make# 将ubuntu-make加入apt软件仓库的列表$ sudo add-apt-repository ppa:ubuntu-desktop/ubuntu-make#升级apt的软件仓库，为了加入刚才的ubuntu-make$ sudo apt update#安装ubuntu-make$ sudo apt install ubuntu-make(2)用ubuntu-make一键安装所需开发环境$ umake --help # umake的帮助页面$ man umake # 用man（手册manuel的缩写）命令来查看umake用法$ info umake # umake的信息（info）页面#基本的安装开发环境的方法是：umake 大类 小类 例如：umake android android-studio#如果没有小类的话，那就是：umake 大类 例如：umake go# 安装Visual Studio$ umake ide visual-studio-code$ umake web visual-studio-code（会错误） 在抛出一堆要求和条件后，它会询问你是否确认安装Visual Studio Code。输入‘a’来确定， 确定之后，安装程序会开始下载并安装。安装完成后，你可以发现Visual Studio Code 图标已经出现在了Unity启动器上。点击图标开始运行！安装好后也可以直接在搜索里面找到并锁定到任务栏就可以了。 12#卸载Visual Studio Code$umake web visual-studio-code --remove 使用nodejs在ubuntu上写一个程序 12345$ mkdir myapp$ cd myapp$ npm init$ npm install express --save$ node app.js 查看ubuntu已经安装的软件 在“search your computer”中输入“ubuntu software”，然后点击“Installed”。 重启计算机 1$ sudo reboot ubuntu的垃圾箱trash 1234$ cd ~/.local/share/Trash$ cd files $ ls (files目录下会看到在Trash中删除的文件)$ sudo rm -rf /home/yourname/.local/share/Trash/ (命令行清理) ubuntu安装nodejs 12345678910111213141516(1)ubuntu源码安装nodejs#在Github上获取Node.js源码：$ sudo git clone https://github.com/nodejs/node.git#修改目录权限：$ sudo chmod -R 755 node#使用 ./configure 创建编译文件，并按照：$ cd node$ sudo ./configure$ sudo make$ sudo make install#查看 node 版本：$ node --version(2)Ubuntu apt-get命令安装$ sudo apt-get install nodejs$ sudo apt-get install npm$ sudo apt install nodejs-legacy mysql 1、查看版本 123456mysql&gt; select version(); 查看版本+-----------+| version() |+-----------+| 5.7.25 |+-----------+ Ubunru16.04安装mysql5.7 123456789101112131415161718192021222324252627282930313233343536sudo apt-get updatesudo apt-get install mysql-server此时如果提示依赖不足，那么需要运行下面命令解决依赖问题sudo apt-get install -f完成后再次运行sudo apt-get install mysql-server。如果没出现依赖问题，那么就不需要使用此命令。安装过程会提示输入数据库的登录名和密码，输入即可通过这种方式安装好之后开机自启动都已经配置好，和命令行上的环境变量，无需手动配置安装好之后会创建如下目录：数据库目录：/var/lib/mysql/ 配置文件：/usr/share/mysql（命令及配置文件） ，/etc/mysql（如：my.cnf）相关命令：/usr/bin(mysqladmin mysqldump等命令) 和/usr/sbin启动脚本：/etc/init.d/mysql（启动脚本文件mysql的目录）测试：#服务启动后端口查询sudo netstat -anp | grep mysql#服务管理#启动sudo service mysql start#停止sudo service mysql stop#服务状态sudo service mysql status#连接数据库mysql -h 127.0.0.1 -P 3306 -uroot -p123456#-h为远程IP，-P为端口号，-u为用户名，-p为密码#测试SQLshow databases;#首先使用以下命令删除MySQL服务器：sudo apt-get remove mysql-server#然后，删除随MySQL服务器自动安装的任何其他软件：sudo apt-get autoremove#卸载其他组件：sudo apt-get remove &lt;&lt;package-name&gt;&gt;#查看从MySQL APT存储库安装的软件包列表：dpkg -l | grep mysql | grep ii mysql 123456789101112131415161718192021222324252627282930313233// 创建数据库~$ mysql -u root -p(此处输入密码)mysql&gt;create database virtual_bank; -&gt;show databases; -&gt;use virtual_bank; -&gt;create table if not exists user( -&gt;id int(11) not null primary key auto_increment, -&gt;email varchar(255), -&gt;password varchar(255), -&gt;createdAt timestamp default current_timestamp, -&gt;image varchar(255), -&gt;audio varchar(255));Query OK,0 rows affected (0.04 sec)mysql&gt;show tables;+------------------------+| Tables_in_virtual_bank |+------------------------+| user |+------------------------+1 row in set (0.00 sec)mysql&gt;desc user;+-----------+--------------+------+-----+-------------------+----------------+| Field | Type | Null | Key | Default | Extra |+-----------+--------------+------+-----+-------------------+----------------+| id | int(11) | NO | PRI | NULL | auto_increment || email | varchar(255) | YES | | NULL | || password | varchar(255) | YES | | NULL | || createdAt | timestamp | YES | | CURRENT_TIMESTAMP | || image | varchar(255) | YES | | NULL | || audio | varchar(255) | YES | | NULL | |+-----------+--------------+------+-----+-------------------+----------------+6 rows in set (0.00 sec) ubuntu下解决443端口被占用 ​12１. 根据端口查找进程 sudo lsof -i:端口号２. 杀掉进程 sudo kill PID号]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[13-Nodemailer]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-13-Nodemailer%2F</url>
    <content type="text"><![CDATA[13-nodemailer实现邮箱的发送、激活、注册 nodemailer 是一个简单易用的Node.js邮件发送插件. 官网地址:https://nodemailer.com. Github地址:https://github.com/nodemailer/nodemailer. 😊这次教程，我们使用nodemailer这个插件来收发邮件，这个功能非常常见，当我们注册一个账号时，肯定会有这步. 为了实现这个功能，你首先要有一个邮箱，由于需要使用SMTP方式发送，你还需要开启相关功能（在邮箱里去设置）. 一、思路： 1. 安装使用 1npm install nodemailer --save 2. 发出真实的邮件 因为QQ邮箱申请后需要10多天才可以去设置smtp😐，所以这次我们使用163邮箱来做测试. 1234567891011121314151617181920212223242526const nodemailer = require('nodemailer'); // 发送邮件的node插件let transporter = nodemailer.createTransport(&#123; service: '163', // 发送者的邮箱厂商 secureConnection: true, // SSL安全链接 auth: &#123; // 发送者的账户密码 user: 'your163mail', // 账户 pass: 'smtpCode', // smtp授权码，到邮箱设置下获取 &#125; &#125;);let mailOptions = &#123; from: '"name" &lt;your163mail&gt;', // 发送者昵称和地址 to: 'your163mail', // 接收者的邮箱地址 subject: '请在24小时内激活你的Virtual Bank账号', // 邮件主题 text: '这里是text文本:点击激活&lt;a href="http://localhost:3000/checkCode?name='+ usermess.name +'&amp;code='+ usermess.code + '"', // 邮件的text // html: html //也可以用html发送 &#125;; // 用已经定义好的transport对象来发送邮件transporter.sendMail(mailOptions, (error, info) =&gt; &#123; if (error) &#123; return console.log(error); &#125; console.log('邮件发送成功 ID：', info.messageId);&#125;); 现在邮件已经通过我们的代码发送成功，但是邮件内容只有text，还不够没美观，所以接下来我们只需要对上面的代码做一些小小的改进，就可以美化邮件的内容，做成HTML. nodemailer.js 1234567891011121314151617181920212223242526const nodemailer = require('nodemailer'); // 引入发送邮件的node插件//创建一个SMTP客户端对象（里面是SMTP客户端的配置）let transporter = nodemailer.createTransport(&#123; service: '163', // 发送者的邮箱厂商 secureConnection: true, // SSL安全链接 auth: &#123; // 发送者的账户密码 user: 'your163mail', // 账户 pass: 'smtpCode', // smtp授权码，到邮箱设置下获取 &#125; &#125;);let mailOptions = &#123; from: '"name" &lt;your163mail&gt;', // 发送者昵称和地址 to: 'your163mail', // 接收者的邮箱地址 subject: '请在24小时内激活你的Virtual Bank账号', // 邮件主题 html: fs.createReadStream(path.resolve(__dirname),'virtual_bank.html'); // 流 &#125;; // 用已经定义好的transport对象来发送邮件transporter.sendMail(mailOptions, (error, info) =&gt; &#123; if (error) &#123; return console.log(error); &#125; console.log('邮件发送成功 ID：', info.messageId);&#125;); virtual_bank.html (这里只给出框架，自己发挥想象空间去创作) 123456789&lt;!doctype html&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office"&gt; &lt;head&gt; &lt;script&gt;...&lt;/script&gt; &lt;/head&gt; &lt;body&gt; ... &lt;/body&gt;&lt;/html&gt; 3. 实现邮箱的验证 在用户注册时，我们先保存用户的信息(用户名和加密后的密码)，然后生成激活码(通过username，email，当前时间等数据融合后加密)一并保存，同时将激活码发送至用户邮箱. 在自己定义的数据库中需要加三个字段：激活码 、过期时间(用来验证激活邮件是否过期)、是否已激活 (用于在激活时进行判断). 12345&#123; activeCode:String, //激活码，格式自己定义 codeExptime:Number, //过期日期，过期后不能激活 activeState:Boolean //判断是否激活（0:未激活，1：激活成功）&#125; （1）激活码:用crypto(nodejs的核心模块)来生成，并保证激活码不会重复； （2）过期时间：设为24小时，Date.now() + 24 * 3600 * 1000； （3）数据库结构设计: 用户填写资料，点击注册，插入数据成功，state字段默认是0，同时生成一个activeCode(用传过来的邮箱、用户名和当前时间加密形成)也存入数据库. 发送激活邮件，提示用户登录邮箱激活，邮箱中带有一个激活成功页的URL，URL里有两个参数（用户名和激活码）. 123456let mailOptions = &#123; from: '"name" &lt;your163mail&gt;', // 发送者昵称和地址 to: 'your163mail', // 接收者的邮箱地址 subject: '激活你的Virtual Bank账号', // 邮件主题 html: fs.createReadStream(path.resolve(__dirname),'virtual_bank.html'); // 流 &#125;; 响应激活请求：用户登录自己的邮箱，点击链接，来到处理激活业务逻辑的页面或Servlet，得到URL中的两个参数，以这两个参数为条件查询数据库里的数据. 如果有，取当前时间和之前存入数据库的激活码过期时间codeExptime作比较，看是否过期，如果过期酒删除数据库中的该记录并转到失败页面，如果没有过期就查看链接传过来的激活码与数据库字段激活码是否一致，不一致就同样删除数据库中该条记录并跳转到激活失败页面，一致则将state字段设为1 ，激活成功，跳转到激活成功页. （1）根据激活链接中的激活码查找对应的用户； （2）用户名与数据库是否匹配(若匹配)–&gt;判断激活码是否匹配(若匹配)–&gt;并判断激活码是否过期(未过期)–&gt;改变激活状态:从0变为1，激活成功； 1234&#123; title: '激活成功', content:'已成功激活，请前往&lt;a href="/account/signup"&gt;登录&lt;/a&gt;'&#125; （3）激活时间 &gt; 当前时间，激活码无效；其他任何不匹配，激活失效； 1234&#123; title: '激活失败', content:'您的激活链接无效，请重新&lt;a href="/account/signup"&gt;注册&lt;/a&gt;'&#125; 二、具体实现代码 首先，准备一个简单的测试页面. test.html 123456789101112131415&lt;body&gt; &lt;div id="main" style="margin:0 auto;width:500px;"&gt; &lt;form id="reg" action="user.action?op=reg" method="post"&gt; &lt;p&gt; E-mail：&lt;input type="text" class="input" name="email" id="email"&gt; &lt;/p&gt; &lt;p&gt; 密 码：&lt;input type="password" class="input" name="pwd" id="pwd"&gt; &lt;/p&gt; &lt;p&gt; &lt;input type="submit" class="btn" value="提交注册" &gt; &lt;/p&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt; 点击提交注册，来到user.action?op=reg，注意带的参数op指我要做的操作，用于后面的Servlet做判断该做什么操作，下面的代码完成了形成激活码、过期时间等表示当前注册用户的状态的信息存入数据库并发送邮件的过程。 为了方便，Node.js 中使用 node-uuid 库来生成 UUID，简单地创建随机而且不重复的字符串，可以用来一次生成很多不同的激活码. 1234567891011121314151617181920212223242526272829303132333435363738394041424344//code.jsvar uuid = require('node-uuid');function getCode(number) &#123; var codes = []; for (var i=0; i &lt; number; i++) &#123; codes.push(uuid.v4()); &#125; return codes&#125;exports.getCode = getCode;//code_insert.jsvar mysql = require('mysql');var code = require('./code.js'); var codes = code.getCode(200); // 生成200个不同的激活码var conn = mysql.createConnection(&#123; host: 'localhost', user: 'test0002', password: 'test0002', database: 'test0002'&#125;);conn.connect(function(err)&#123; if (err) &#123; console.error(err); return; &#125;&#125;);var sql_create_table = 'create table if not exists code(id smallint auto_increment, code char(20), primary key(id))';conn.query(sql_create_table,function(err,res)&#123; if(err)&#123; console.log(err); return; &#125; for (var i=0;i&lt;codes.length;i++)&#123; var sql_insert_code = "insert into code values('code','" + codes[i] + "')"; conn.query(sql_insert_code,function(err,res)&#123; if(err)&#123; console.log(err); return; &#125; console.log(res); &#125;); &#125;&#125;);]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[work-summary-2019-4-9.md]]></title>
    <url>%2F2019%2F04%2F22%2Fwork-summary-2019-4-9-md%2F</url>
    <content type="text"><![CDATA[2019-4-9工作总结 一、Mysql数据库 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149//通配符：%mysql&gt; show databases like &apos;virt%&apos;;mysql&gt; show tables like &apos;user%&apos;;mysql&gt; show variables like &apos;character_set%&apos;;+--------------------------+--------------------------+| Variable_name | Value |+--------------------------+--------------------------+| character_set_client | utf8 || character_set_connection | utf8 || character_set_database | utf8 |当前默认数据库的编码| character_set_filesystem | binary || character_set_results | utf8 || character_set_server | utf8 |服务器的编码：my.ini| character_set_system | utf8 |标识符的编码| character_sets_dir | C:\MySQL\share\charsets\ |+--------------------------+--------------------------+//删除表：drop table table_namedrop table user;drop table if exists user;//重命名表: rename table table_name01 to table_name02rename table user to user01,test to test01;//跨数据库重命名(剪切): rename table table_name01 to `database_name`.table_name02rename table user to `test01`.user01;//修改列的定义：(1)增加列：add alter table user01 add age int(11);(2)修改列：modify alter table user01 modify age varchar(40);(3)删除列：drop alter table user01 drop age;(4)重命名列：change alter table user01 change age age01 blob;修改表结构，上面是子命令，上级命令是： alter table table_name//表选项： show create table user01;先分析需要保存的实体数据拥有哪些属性，这些属性应该如何保存。//修改表选项： alter table table_name 新的表选项alter table user01 character set utf8;//修改数据库信息： alter database database_name 修改指令alter database test01 character set gbk;//创建数据(插入数据)：insert into table_name (字段列表) values (值列表)可以省略字段列表，但要求是值的顺序应该与表中的字段顺序一致。insert into user(id,email) values(1,&apos;test@163.com&apos;);//获得数据：select 字段列表 from 表名 查询条件字段列表可以用*代替，表示所有的字段；查询条件可以省略，表示所有的记录都获得。select * from user where id&gt;=72;//删除数据(不可逆)：delete from 表名 条件删除需要在逻辑上严格给条件，否则容易造成数据误操作。delete from user where id&lt;=72;//校对规则： gbk_chinese_ci(不区分大小写)； gbk_bin(按ASC码排序)；show collation;show collation like &apos;gbk%&apos;;//获得数据时按照某个字段排序：select * from user order by name;//列类型：(1)数值型：A. 整数型：a. tinyint 字节1 最小值：-128/0 最大值：127/255b. smallint 字节2 最小值：-32768/0 最大值：32767/65535c. mediumint 字节3 最小值：-8388608/0 最大值：8388607/16777215d. int 字节4 最小值：-2147483648/0 最大值：2147483647/4294967295e. bigint 字节8 最小值：-9223372036854775808/0 最大值：...字节越小，能存储的空间越小；字节越小，处理的速度越快unsigned 控制是否有正负； zerofill 前导零填充； bool布尔类型是 tinyint(1)的别名create table test(a tinyint unsigned,b tinyint);alter table test add c tinyint(2) zerofill; (01,09 ...)B. 小数型：a. float(单精度) 字节4 默认情况，精度位数为6位左右b. double(双精度) 字节8 默认情况，精度位数为16位左右c. decimal 变长（大概每9个数字用4字节存储，整数和分数分开计算） decimal(10,2)123.456 0.123456*10^3 123456 3可以利用M,D控制数值范围；可以无符号；可以zerofill；可以用科学计数法create table test(a float,b double); 精度丢失（7个左右后就不准确） 16位有效insert into test values (123456789.0123456789,123456789.0123456789)Type(M,D):M表示(总位数)所有的数值位数(不包括小数点和符号)，D表示允许的小数位数create table test(a float(5,2), 一共5位，小数2位，小数前面只能有3位（所以最大只能表示999)b double(8,3));insert into test (a) values (0.23E3);float(5,2)表示-999.99到 999.99注意： float(2)是显示宽度；float(5,2)是数值范围(2)日期时间型：a. yearb. timestampc. timed. datee. datetime(3)字符串型：a. setb. enumc. blobd. texte. varchar 可变长 varchar(M)表示允许的最大长度(可变长度)f. char 最大长度255 char(M)表示允许的字符串长度(严格限制长度)//日期事件类型(1)DATETIME: YYYY-MM-DD HH:MM:SS 存储空间8 零值为 0000-00-00 00:00:00取值从‘1000-01-01 00:00:00’到&apos;9999-12-31 23:59:59&apos;create table test(elaine datetime);insert into test values (&apos;2013-04-16 11:50:21&apos;);(2)TIMESTAMP: YYYY-MM-DD HH:MM:SS 存储空间4 零值为 0000-00-00 00:00:00取值从&apos;1970-01-01 00:00:00&apos;到&apos;2038-01-19 03:14:07&apos;create table test(elaine timestamp);insert into test values (&apos;2013-04-16 11:50:21&apos;);(3)DATE: YYYY-MM-DD 存储空间3 零值为 0000-00-00取值从&apos;1000-01-01&apos;到&apos;9999-12-31&apos;(4)TIME: HH:MM:SS 存储空间3 零值为 00:00:00取值从&apos;-838:59:59&apos;到&apos;838:59:59&apos;意义：一天中的时间；表示时间间隔，在表示间隔时可以用天来表示 D HH:MM:SS create table test(elaine time);insert into test values (&apos;23:12:11&apos;);insert into test values (&apos;231211&apos;);insert into test values (&apos;5 12:34:11&apos;);(5)YEAR: YYYY 存储空间1 零值为0000取值从&apos;1901&apos;到&apos;2155&apos; 操作语句： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465mysql&gt; select host,user from user where user=&apos;root&apos;;+-----------+------+| host | user |+-----------+------+| localhost | root |+-----------+------+mysql&gt; select version();+-----------+| version() |+-----------+| 5.7.25 |+-----------+mysql&gt; status--------------mysql Ver 14.14 Distrib 5.7.25, for Win64 (x86_64)Connection id: 23Current database: mysqlCurrent user: root@localhostSSL: Not in useUsing delimiter: ;Server version: 5.7.25 MySQL Community Server (GPL)Protocol version: 10Connection: localhost via TCP/IPServer characterset: utf8Db characterset: utf8Client characterset: utf8Conn. characterset: utf8TCP port: 3306Uptime: 6 days 14 hours 52 min 16 secThreads: 1 Questions: 155 Slow queries: 0 Opens: 146 Flush tables: 1 Open tables: 115 Queries per second avg: 0.000--------------执行 FLUSH PRIVILEGES 语句。 这个命令执行后会重新载入授权表。mysql&gt; use user;Database changedmysql&gt; show columns from user02;+-----------+--------------+------+-----+-------------------+----------------+| Field | Type | Null | Key | Default | Extra |+-----------+--------------+------+-----+-------------------+----------------+| id | int(11) | NO | PRI | NULL | auto_increment || email | varchar(255) | YES | | NULL | || password | varchar(255) | YES | | NULL | || createdAt | timestamp | YES | | CURRENT_TIMESTAMP | || image | varchar(255) | YES | | NULL | || audio | varchar(255) | YES | | NULL | |+-----------+--------------+------+-----+-------------------+----------------+mysql&gt; show index from user02;+--------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |+--------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+| user02 | 0 | PRIMARY | 1 | id | A | 1 | NULL | NULL | | BTREE | | |+--------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+mysql&gt; show table status from virtual_bank;+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------------+----------+----------------+---------+| Name | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time | Update_time | Check_time | Collation | Checksum | Create_options | Comment |+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------------+----------+----------------+---------+| audios | InnoDB | 10 | Dynamic | 0 | 0 | 16384 | 0 | 0 | 0 | 1 | 2019-04-08 10:20:15 | NULL | NULL | utf8_general_ci | NULL | | || images | InnoDB | 10 | Dynamic | 2 | 8192 | 16384 | 0 | 0 | 0 | 3 | 2019-04-08 10:20:15 | 2019-04-08 12:03:56 | NULL | utf8_general_ci | NULL | | || user | InnoDB | 10 | Dynamic | 0 | 0 | 16384 | 0 | 0 | 0 | 1 | 2019-04-08 10:09:56 | NULL | NULL | utf8_general_ci | NULL | | |+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------------+----------+----------------+---------+ 索引： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108mysql&gt; use test;Database changed//建表测试：测试表中有五个列(c1,c2,c3,c4,c5)，均为char(1)类型且不为空。字符集为utf8(索引长度以字节数计算)mysql&gt; create table tb_test( -&gt; c1 char(1) not null, -&gt; c2 char(1) not null, -&gt; c3 char(1) not null, -&gt; c4 char(1) not null, -&gt; c5 char(1) not null) -&gt; engine innodb charset utf8; mysql&gt; show tables;+----------------+| Tables_in_test |+----------------+| tb_test |+----------------+//创建复合索引mysql&gt; alter table tb_test add index idx_c1_c2_c3_c4(c1,c2,c3,c4);Query OK, 0 rows affected (0.02 sec)Records: 0 Duplicates: 0 Warnings: 0//插入几条测试数据mysql&gt; insert into tb_test(c1,c2,c3,c4,c5) -&gt; values(&apos;A&apos;,&apos;A&apos;,&apos;A&apos;,&apos;A&apos;,&apos;A&apos;),(&apos;B&apos;,&apos;B&apos;,&apos;B&apos;,&apos;B&apos;,&apos;B&apos;),(&apos;C&apos;,&apos;C&apos;,&apos;C&apos;,&apos;C&apos;,&apos;C&apos;);Query OK, 3 rows affected (0.01 sec)Records: 3 Duplicates: 0 Warnings: 0mysql&gt; select * from tb_test;+----+----+----+----+----+| c1 | c2 | c3 | c4 | c5 |+----+----+----+----+----+| A | A | A | A | A || B | B | B | B | B || C | C | C | C | C |+----+----+----+----+----+3 rows in set (0.00 sec)//用到了索引的所有部分，其中c1,c2,c3精确匹配，c4范围查询：mysql&gt; explain select * from tb_test where c1=&apos;A&apos; and c2=&apos;A&apos; and c3=&apos;A&apos; and c4&gt;&apos;A&apos;\G*************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_test partitions: NULL type: range //范围查询possible_keys: idx_c1_c2_c3_c4 key: idx_c1_c2_c3_c4 //用到复合索引 key_len: 12 //用到了索引的所有列，每个utf8字符占3个字节 ref: NULL rows: 1 filtered: 100.00 Extra: Using index condition //意味着没有达到索引覆盖1 row in set, 1 warning (0.01 sec)//出现ICP主要是因为我们用了select *。我们把SQL稍微改动一下，让它能达到索引覆盖mysql&gt; explain select c1,c2,c3,c4 from tb_test where c1=&apos;A&apos; and c2=&apos;A&apos; and c4&gt;&apos;A&apos; and c3=&apos;A&apos;\G*************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_test partitions: NULL type: rangepossible_keys: idx_c1_c2_c3_c4 key: idx_c1_c2_c3_c4 key_len: 12 ref: NULL rows: 1 filtered: 100.00 Extra: Using where; Using index1 row in set, 1 warning (0.00 sec)//用到了索引的c1,c2,c3列，其中c1、c2列用于查询，c3用于排序。由于c3列没有精确匹配，导致c4列无法用到索引。mysql&gt; explain select * from tb_test where c1=&apos;A&apos; and c2=&apos;A&apos; and c4=&apos;A&apos; order by c3\G*************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_test partitions: NULL type: ref //从表中读取匹配索引的行（查询语句不能通过索引查找到单独一行数据） //type: eq_ref 就是使用了primary key或unique key的查询，可以查到表中唯一一条记录possible_keys: idx_c1_c2_c3_c4 key: idx_c1_c2_c3_c4 //用到复合索引 key_len: 6 //用到索引的前两列 ref: const,const rows: 1 filtered: 33.33 Extra: Using index condition1 row in set, 1 warning (0.01 sec)//group by子句执行时会先排序，再分组。这条语句由于group by的顺序为c3,c2与索引顺序不匹配，所以没用到索引。group by没有用到索引，导致创建了临时表，并使用文件排序mysql&gt; explain select c2,c3 from tb_test where c1=&apos;A&apos; and c4=&apos;A&apos; group by c3,c2\G*************************** 1. row *************************** id: 1 select_type: SIMPLE table: tb_test partitions: NULL type: refpossible_keys: idx_c1_c2_c3_c4 key: idx_c1_c2_c3_c4 //用到复合索引 key_len: 3 //只用到索引的一列 ref: const rows: 1 filtered: 33.33 Extra: Using where; Using index; Using temporary; Using filesort1 row in set, 1 warning (0.01 sec) mysql实例： 一、使用MySQL命令行将MySQL示例数据库导入到MySQL数据库服务器中 示例数据库下载地址：http://www.yiibai.com/downloads/yiibaidb.zip 1234567891011121314151617181920212223242526272829303132333435363738394041// 1.创建数据库mysql&gt; create database if not exists yiibaidb default charset utf8 collate utf8_general_ci;Query OK, 1 row affected (0.00 sec)// 2.导入数据mysql&gt; use yiibaidb;Database changedmysql&gt; source C:\MySQL\yiibaidb\yiibaidb.sql// 3.测试导入结果mysql&gt; use yiibaidb;Database changedmysql&gt; show tables;+--------------------+| Tables_in_yiibaidb |+--------------------+| customers || employees || items || offices || orderdetails || orders || payments || productlines || products || tokens |+--------------------+10 rows in set (0.00 sec)mysql&gt; select city,phone,country from offices;+---------------+------------------+-----------+| city | phone | country |+---------------+------------------+-----------+| San Francisco | +1 650 219 4782 | USA || Boston | +1 215 837 0825 | USA || NYC | +1 212 555 3000 | USA || Paris | +33 14 723 4404 | France || Beijing | +86 33 224 5000 | China || Sydney | +61 2 9264 2451 | Australia || London | +44 20 7877 2041 | UK |+---------------+------------------+-----------+7 rows in set (0.00 sec) 二、mysql示例数据库结构 MySQL示例数据库模式由以下表组成： customers: 存储客户的数据。 products: 存储汽车的数据。 productLines: 存储产品类别数据。 orders: 存储客户订购的销售订单。 orderDetails: 存储每个销售订单的订单产品数据项。 payments: 存储客户订单的付款数据信息。 employees: 存储所有员工信息以及组织结构，例如，直接上级(谁向谁报告工作)。 offices: 存储销售处数据，类似于各个分公司。 表与表之间的关系，请参考以下ER图： 三、mysql基础教程 1、查询数据 select 语句 select distinct 语句 （1）select 语句 SELECT语句的结果称为结果集，它是行列表。 1mysql&gt; select * from employees; employees表的结构：它有8列：员工人数，姓氏，名字，分机，电子邮件，办公室代码，报告，职位等。 SELECT语句控制要查看哪些列和行。例如，如果只对所有员工的名字，姓氏和职位感兴趣，或者您只想查看其职位是销售代表的每位员工的信息： 12345678select column_1,column_2,... from table_1 [inner | left | right | join table_2 on conditions]where conditionsgroup by column_1having group_conditionsorder by column_1limit offset,length; SELECT语句由以下列表中所述的几个子句组成： SELECT之后是逗号分隔列或星号(*)的列表，表示要返回所有列。 FROM指定要查询数据的表或视图。 JOIN根据某些连接条件从其他表中获取数据。 WHERE过滤结果集中的行。 GROUP BY将一组行组合成小分组，并对每个小分组应用聚合函数。 HAVING过滤器基于GROUP BY子句定义的小分组。 ORDER BY指定用于排序的列的列表。 LIMIT限制返回行的数量。 语句中的SELECT和FROM语句是必须的，其他部分是可选的。 select 语句示例： 1select lastname,firstname,jobtitle from employees; 使用星号(*)可能会返回不使用的列的数据。 它在MySQL数据库服务器和应用程序之间产生不必要的I/O磁盘和网络流量。 如果明确指定列，则结果集更可预测并且更易于管理。 使用星号(*)可能会将敏感信息暴露给未经授权的用户。 （2）select distinct 语句 从表中查询数据时，可能会收到重复的行记录。为了删除这些重复行，可以在SELECT语句中使用DISTINCT子句。 123select distinct columnsfrom table_namewhere where_conditions; 示例： 使用DISTINCT子句从employees表中选择员工的唯一姓氏(lastName)： 12345// 1.使用SELECT语句从employees表中查询员工的姓氏(lastName),有好些结果是重复的mysql&gt; select lastname from employees order by lastname;// 2.要删除重复的姓氏，要将DISTINCT子句添加到SELECT语句中,当使用DISTINCT子句时，重复的姓氏(lastname)在结果集中被消除。mysql&gt; select distinct lastname from employees order by lastname; distinct和null值： 如果列具有NULL值，并且对该列使用DISTINCT子句，MySQL将保留一个NULL值，并删除其它的NULL值，因为DISTINCT子句将所有NULL值视为相同的值。 在customers表中，有很多行的州(state)列是NULL值。 当使用DISTINCT子句来查询客户所在的州时，我们将看到唯一的州和NULL值，如下查询所示： 12345678910111213141516171819202122232425mysql&gt; select distinct state from customers;+---------------+| state |+---------------+| NULL || NV || Victoria || CA || NY || PA || CT || MA || Osaka || BC || Qubec || Isle of Wight || NSW || NJ || Queensland || Co. Cork || Pretoria || NH || Tokyo |+---------------+19 rows in set distinct在多列上的使用： 可以使用具有多个列的DISTINCT子句。 在这种情况下，MySQL使用所有列的组合来确定结果集中行的唯一性。 要从customers表中获取城市(city)和州(state)的唯一组合，可以使用以下查询： 1234select distinct state,city from customers where state is not null order by state,city; 没有DISTINCT子句，将查询获得州(state)和城市(city)的重复组合如下： distinct子句与group by子句比较 如果在SELECT语句中使用GROUP BY子句，而不使用聚合函数，则GROUP BY子句的行为与DISTINCT子句类似。 以下语句使用GROUP BY子句来选择customers表中客户的唯一state列的值： 1select state from customers group by state; 可以通过使用DISTINCT子句来实现类似的结果： 1select distinct state from customers; 一般而言，DISTINCT子句是GROUP BY子句的特殊情况。 DISTINCT子句和GROUP BY子句之间的区别是GROUP BY子句可对结果集进行排序，而DISTINCT子句不进行排序。 如果将ORDER BY子句添加到使用DISTINCT子句的语句中，则结果集将被排序，并且与使用GROUP BY子句的语句返回的结果集相同。 1select distinct state from customers order by state; distinct和聚合函数 可以使用具有聚合函数(例如SUM，AVG和COUNT)的DISTINCT子句中，在MySQL将聚合函数应用于结果集之前删除重复的行。 要计算美国客户的唯一state列的值，可以使用以下查询： 1234567mysql&gt; SELECT COUNT(DISTINCT state) FROM customers WHERE country = &apos;USA&apos;;+-----------------------+| COUNT(DISTINCT state) |+-----------------------+| 8 |+-----------------------+1 row in set distint与limit子句 如果要将DISTINCT子句与LIMIT子句一起使用，MySQL会在查找LIMIT子句中指定的唯一行数时立即停止搜索。 以下查询customers表中的前3个非空(NOT NULL)唯一state列的值。 123456789mysql&gt; SELECT DISTINCT state FROM customers WHERE state IS NOT NULL LIMIT 3;+----------+| state |+----------+| NV || Victoria || CA |+----------+3 rows in set 2、过滤数据 where and or in between like limit is null （1）where 只想从employees表中获取销售代表员工，可使用以下查询： 123select lastname,firstname,jobtitlefrom employeeswhere jobtitle=&apos;Sales Rep&apos;; 即使WHERE子句出现在语句的末尾，但MySQL会首先使用WHERE子句中的表达式来选择匹配的行。它选择具有职位名称为销售代表的行记录。 1jobtitle = 'Sales Rep'; MySQL从SELECT子句中的选择列表中选择列。 在办公室代码(officeCode)等于1中查找所有销售代表： 1select lastname,firstname,jobtitle from employees where jobtitle=&apos;Sales Rep&apos; and officeCode=1; 可用于在WHERE子句中形成过滤表达式的比较运算符： 查询使用不等于(!=)运算符来获取不是销售代表的其它所有员工： 1select lastname,firstname,jobtitle from employees where jobtitle&lt;&gt;&apos;Sales Rep&apos; （2）and AND运算符是组合两个或多个布尔表达式的逻辑运算符，只有当两个表达式求值为true时才返回true。如果两个表达式中的一个求值为false，则AND运算符返回false。 1WHERE boolean_expression_1 AND boolean_expression_2 当求值具有AND运算符的表达式时，MySQL会计算表达式的其余部分，直到可以确定结果为止。该功能称为短路求值。 选择国家是USA和CA的客户。我们在WHERE子句中使用AND运算符： 1SELECT customername, country, state FROM customers WHERE country = &apos;USA&apos; AND state = &apos;CA&apos;; 使用AND运算符，可以组合两个以上的布尔表达式。例如，以下查询返回位于美国加州的客户，并且信用额度大于100K： 12345678SELECT customername, country, state, creditlimitFROM customersWHERE country = &apos;USA&apos; AND state = &apos;CA&apos; AND creditlimit &gt; 100000; （3）or MySQL OR运算符组合了两个或两个以上布尔表达式。当任一条件为真时，返回true。 下面说明了OR运算符的语法。 1boolean_expression_1 OR boolean_expression_2 boolean_expression_1和boolean_expression_2是布尔表达式，它可能返回的结果是：true，false或NULL。 MySQL使用OR运算符进行短路评估(求值计算)。 换句话说，当MySQL可以确定结果时，MySQL会停止评估(求值计算)语句的其余部分。 当您在语句中使用多个逻辑运算符时，MySQL会在AND运算符之后再对OR运算符进行求值。 这称为运算符优先级。运算符优先级决定运算符的求值顺序。 MySQL首先对优先级较高的运算符进行求值。 1234567mysql&gt; SELECT true OR false AND false;+-------------------------+| true OR false AND false |+-------------------------+| 1 |+-------------------------+1 row in set 首先，MySQL对AND运算符求值，因此，false AND false返回false。 其次，MySQL对OR运算符求值，根据返回的false值再执行AND运算，因此true OR false返回true。 要更改评估/求值的顺序，请使用括号，例如： 1SELECT (true OR false) AND false; 要获得美国(USA)或者法国(France)的客户，请在WHERE子句中使用OR运算符，如下所示： 1select customername,country from customers where country=&apos;USA&apos; or country=&apos;France&apos;; 以下声明返回位于美国(USA)或者法国(France)，并且信用额度大于10000的客户： 1select customername,country,creditLimit from customers where (country=&apos;USA&apos; or country=&apos;France&apos;) and creditLimit&gt;10000; https://www.yiibai.com/mysql/or.html]]></content>
      <categories>
        <category>work_summary</category>
      </categories>
      <tags>
        <tag>node.js</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[work-summary-2019-4-8.md]]></title>
    <url>%2F2019%2F04%2F22%2Fwork-summary-2019-4-8-md%2F</url>
    <content type="text"><![CDATA[2019-4-8笔记 一、修改mysql配置 1、存储图像和音频文件 source: https://blog.csdn.net/haluoluo211/article/details/52080325 商品图片，用户上传的头像，其他方面的图片。目前业界存储图片有两种做法： （1）把图片直接以二进制形式存储在数据库中: 一般数据库提供一个二进制字段来存储二进制数据。比如mysql中有个blob字段。oracle数据库中是blob或bfile类型。 将读取到的图片用php程序转化成二进制形式。再结合insert into 语句插入数据表中的blob类型字段中去；从数据库取出图片展示的时候，则是直接发送图片内容。 123$row=mysql_fetch_object($result); Header( "Content-type: image/gif");echo $row-&gt;this_image; 实现代码如下： 123456$PicturePath = ‘/tmp/xxxjgjgj.jpg’;//假设这是上传的图片，php放在一个临时文件夹。脚本执行完毕后自动删除了。$imgStream = fread(fopen($PicturePath, "r");$blob_img = fread(fopen($imgStream, "r"), filesize($PicturePath));$sql =” INSERT INTO Images (this_image) VALUES ($blob_img)";//注：this_image就是数据表中一个blob字段类型的字段 取出展示图片代码： 1234$result=mysql_query("SELECT * FROM Images WHERE PicNum=$PicNum") or die("Cant perform Query"); $row=mysql_fetch_object($result); Header( "Content-type: image/gif");echo $row-&gt; this_image; 总结：处理代码感觉还真比较麻烦。其实，我从来没用过在数据库中以二进制存储图片的做法。我们用得更多的是存储图片的路径，实际图片是在磁盘上保存的(图片二进制放到数据库,把数据库的负担弄重了)。 互联网环境中大访问量，数据库速度和性能方面很重要。一般在数据库存储图片的做法比较少，更多的是将图片路径存储在数据库中，展示图片的时候只需要连接磁盘路径把图片载入进来即可。因为图片是属于大字段。一张图片可能1m到几m。 有个原则：图片尽量不要存储在数据库中(是指不要二进制形式保存到字段，而只保存图片的路径)。这样的大字段数据会加重数据库的负担，拖慢数据库，在大并发访问的情况下很重要。这是一个经验。去看看dba对数据库性能调优方面的分析都能得到这个答案的：就是图片不要存储在数据库中。 就像这个规则一样：文章分为标题、作者、添加时间、更新时间、文章内容、文章关键字。 文章内容一般是比较长的。经常使用text字段去存储。文章的内容就属于大字段。一般文章内容可以拆分到单独一个表中去。不要与文章信息存储在一张表里面。 我理解的原理是：mysql中一张表的数据是全部在一个数据文件中的。如果大字段的数据也存储在里面。程序展示列表，比如文章列表。这个时候根本不需要展示文章内容的。但是仍然会影响速度，数据库查找数据其实就是扫描那个数据文件，文件容量越小，速度就会越快(为什么单表的容量在1g-2g的时候基本上要分表了)。拆分出去到一张单独的表，就是单独的文件了。我觉得，举一反三，相互独立，分离的思想不仅在系统开发中用到，在现实生活中经常存在的。相互混合，就会造成相互影响。小巧，简洁是一种思想。 http://developer.51cto.com/art/201211/364472.htm 作者建议，三种东西永远不要放到数据库里：图片，文件，二进制数据。作者的理由是， 对数据库的读/写的速度永远都赶不上文件系统处理的速度； 数据库备份变的巨大，越来越耗时间； 对文件的访问需要穿越你的应用层和数据库层。 把图片缩略图存到数据库里？很好，那你就不能使用nginx或其它类型的轻量级服务器来处理它们了。 给自己行个方便吧，在数据库里只简单的存放一个磁盘上你的文件的相对路径，或者使用S3（备注：亚马逊云服务）或CDN之类的服务。 （2）图片存储在磁盘上，数据库字段中保存的是图片的路径。 ============================================================================== 关于mysql中的blob类型： bolb像int型那样，分为blob、MEDIUMBLOB、LONGBLOB。其实就是从小到大。blob 容量为64KB ，MEDIUMBLOB 容量为16M，LONGBLOB 容量为4G。 说实话，图片用这样子存储用得还真少。使用php函数serialize进行序列化的值，我看到有人存入这个字段中去。 mysql中blob字段存储图片有个通信大小的设置： 图片要传输给mysql存储起来，那么需要涉及到数据通信。mysql中有个配置是限制通信数据大小的。my.conf配置文件中的max_allowed_packet，mysql默认的值是1M。 好多图片尤其是原始图可能不止1m。传输的数据(也就是图片)超过这个设置大小。结果就会出错，这样明显占用与mysql交互的通信时间嘛。延长响应时长了。 直接丢个图片路径”images/xxxx”给mysql。没这么耗费资源。其实所谓的性能，最关键是数据库性能。因为随着数据库数据量增大，大部分时间耗费是在php，java等语言等待数据库返回数据的过程中耗费时间。 网站访问量大了后，具体的语言不是瓶颈，瓶颈都在数据库。用c，php，java,net都能操作mysql数据库获取数据。语言之间可能存在速度执行差异，但是其实这种差别已经很小了。至少给予用户感觉不到明显。执行相差0.0001秒用户感觉并没有明显的区别。可能说，大并发(很多用户同时访问)的时候，就会体现到差别了。其实我觉得，大并发访问是数据库瓶颈。等待数据库给予数据。没达到一定级别实在体现不了差别。数据库数据量达到一定级别。语言相差0.001s会给予用户体验上的差别。这也是为什么php很适合做web开发了。解析页面速度快(解释型语言，不需要编译)。可以用java来与数据库打交道获取数据。php不直接操作数据库，而是调用java提供的数据接口，获取数据，马上展示在页面中。这是利用了php的页面执行速度快的一个优势。 图片以二进制形式存储在数据库，有一个好处：备份的时候方便。直接备份数据库，图片也跟着备份。换句话说，迁移环境的时候是方便。而图片放在磁盘上的话，数据库中存储的只是图片路径。备份数据库后。磁盘上的图片也要跟着备份才行。 不过我觉得，备份这个好处不是很明显。图片在磁盘上，备份磁盘也没很大的事情。打包压缩也可以了。互联网环境毕竟与传统的软件开发不同，web开发比较关注网站速度。也就是数据库的速度。就像互联网开发中，有时候为了速度，用空间换时间的做法比较普遍，所以往往在设计数据库的时候并不一定遵循传统数据库设计三大范式。 数据库中保存的是图片路径的话，在web开发环境下，其实有个更好处，就是cdn加速。就是下面要进行总结的地方。 ============================================================================== 数据库中保存图片路径： 一般是这样的： 按照年月日生成路径。具体是按照年月日还是按照年月去生成路径，根据自己需要(不一定是按照日期去生成)。理解为什么要分散到多个文件夹中去才是关键，涉及到一个原理就明白了： 操作系统对单个目录的文件数量是有限制的。当文件数量很多的时候。从目录中获取文件的速度就会越来越慢。所以为了保持速度，才要按照固定规则去分散到多个目录中去。 图片分散到磁盘路径中去。数据库字段中保存的是类似于这样子的”images/2012/09/25/ 1343287394783.jpg” 原来上传的图片文件名称会重新命名保存，比如按照时间戳来生成，1343287394783. jpg。这样子是为了避免文件名重复，多个人往同一个目录上传图片的时候会出现。反正用什么样的规则命名图片，只要做到图片名称的唯一性即可。 比如网站的并发访问量大，目录的生成分得月细越好。比如精确到小时，一个小时都可以是一个文件夹。同时0.001秒有两个用户同时在上传图片(因为那么就会往同一个小时文件夹里面存图片)。因为时间戳是精确到秒的。为了做到图片名称唯一性而不至于覆盖，生成可以在在时间戳后面继续加毫秒微秒等。总结的规律是，并发访问量越大。就越精确就好了。 有个方面总结一下：为什么保存的磁盘路径，是”images/2012/09/25/1343287394783.jpg”，而不是” /images/2012/09/25/ 1343287394783.jpg”(最前面带有斜杠)：连那个斜杠都不要。这里也是做到方便以后系统扩展。 在页面中需要取出图片路径展示图片的时候： 如果是相对路径，则可以使用”./”+”images/2012/09/25/1343287394783.jpg”进行组装。 如果需要单独的域名(比如做cdn加速的时候)域名，img1.xxx.com,img2.xxx.com这样的域名，直接组装 “http://img1.xxx.com/”+”images/2012/09/25/1343287394783.jpg” 当然数据库可以在前面加斜杠/保存起来,/images/2012/09/25/ 1343287394783.jpg，但不方便统一。比如相对路径载入图片的时候，则是”.”+” /images/2012/09/25/ 1343287394783.jpg” 可能我还没体会到坏处，以后会遇到问题的。不过，遵循惯例不加斜杠” images/2012/09/25/ 1343287394783.jpg”就对了。 涉及到一个新问题：为什么大部分系统都不会域名保存进去，像这样子http://www.xxx.com/images/2012/09/25/1343287394783.jpg保存到数据库中。 了解的知识越多，越有利于我们做决定。可能就是一个“感觉区别不是很大”的影响下，去做一个决定，反而对后面是比较大的影响的。至少是增加自己的工作量了。 其实把域名保存进去，也不是什么滔天大罪的事情。但凡是经验丰富的开发人员都不会这样子做。这是一个经验积累出来的。需要了解cdn知识，什么情况下会用到cdn知识。 虽然是做开发人员，不需要关注运维和服务器之类的知识。不过了解一些就有利于理解了。 这里涉及到cdn加速。 ============================================================================== 关于cdn原理(就是内容分发网络)： cdn，我理解其本质就是为了解决距离远产生的速度问题，使用就近的服务。 从中国请求美国一台服务器上的图片。一般比较慢，因为距离这么远，网络传输是存在损耗的，距离越远，传输的时间就越长。一般会看到浏览器左下角显示：“已响应,正在传输数据…”。这不是服务器本身问题了。实际上服务器早就响应请求，把数据发给客户端，但是网络问题，就一直在传输，没传完了。 在中国，是南北距离远的问题。南北还会涉及到跨网，南方用户使用电信居多，北方用户网通居多。两个线路需要跨越，会有时间延迟。北京到广州的距离，如果直接请求。 cdn加速就是适应这个需求产生的：现在不请求美国的服务器。直接在中国安放节点(节点是比较笼统的词语，可以理解成一台服务器，也可以理解成一个机房，就是一个点嘛)，请求距离近的节点。这样子就不需要那么远的距离了。 在长沙的网站，团购以城市分站的形式。北京和长沙用的是同一套程序。服务器在长沙。北京用户访问北京站的时候,实际上需要远距离访问长沙的服务器。速度怎么都快不起来。跟服务器性能完全没关系。当时不懂这些。不清楚怎么折腾。看那本《前端优化技巧》，想办法去做js代码压缩，浏览器缓存之类的。实际上瞎折腾。不是说这些前端优化不重要，哲学上有主次矛盾之分，瓶颈在哪里就去突破哪里。没解决主要矛盾，问题并不会迎刃而解。当时也不是数据库瓶颈。如果去优化数据库。也不会明显改善。就那点数据量。根本就达不到瓶颈。哪里谈得上主要矛盾。随着后来去其他公司工作，接触一些东西，类似不找瓶颈的优化例子发生在身边好几次了，先没找到瓶颈就瞎去优化。我的同事可能是抱着多多益善的心态去做的，但主要矛盾(技术上说是瓶颈)没找到，也没改善。 当时如果没想到是距离问题。也就不会想到cdn，当时其实我根本不知道cdn服务。我只知道，google这些网站肯定有在中国部署的服务器，要不然，中国用户还去访问美国的服务器，那再好的服务器都会速度慢的。 由于自己搭建cdn环境和机房的资金比较大（需要大量的服务器），也需要人力维护。反正一般的公司弄不起，其实根本不划算。淘宝以前用商用的cdn服务，后来商用的扛不住了，就搭建了自己的cdn网。我不知道新浪有没有自己搭建，但其实我觉得跟淘宝的特点有关，店铺很多，无论是商品还是交易记录总计起来商品很多的图片，图片都是静态的部分，cdn本来就是用来做静态的(图片，css，js等)请求分发用的。 我之前在网上看到一句话，cdn网络不是一般的公司玩得起的。一般的公司自己搭建cdn网络成本高，所以就有商业的cdn提供付费租用服务，这是一项很成熟的业务，很多这样的公司，大部分全国性的互联网公司都会使用到cdn。 总结：cdn服务。对于静态内容是非常适合的。所以像商品图片，随着访问量大了后，租用cdn服务，只需要把图片上传到他们的服务器上去。 例子：北京访问长沙服务器，距离太远。我完全可以把商品图片，放到北京的云服务（我觉得现在提供给网站使用的云存储其实就是cdn，给网站提供分流和就近访问）上去。这样子北京用户访问的时候，实际上图片就是就近获取。不需要很长距离的传输。 自己用一个域名img.xxx.com来载入图片。这个域名解析到北京的云服务上去。 做法:数据库中保存的是” images/2012/09/25/1343287394783.jpg”,这些图片实际上不存储在web服务器上。上传到北京的cdn服务器上去。从数据库取出来，直接”img.xxx.com/”+” images/2012/09/25/1343287394783.jpg”如果还有多个，就命名img1.xx.com、img2.xx.com 像淘宝，凡客，亚马逊这些电子商务网站，我们看到请求的时候，下面往往会有： img1.xxx.cdn.com img2.xxx.cdn.com 其实他们保存在数据库中的是相对路径。有些是不需要在数据库保存的，缩略图可以实时访问的时候用程序生成(节省很多存储空间)。 实际上，把域名保存在数据库中，非常不利于系统迁移。一旦换个域名的话，原来保存在数据库中的是“www.abc.om/images/xxxxxx“,因为路径都在数据库中写死了。下回换个域名就用不了了。那个时候自己去写sql语句批量更新字段吧。 ============================================================================== 淘宝的图片存储： 淘宝以前使用了商用的存储。但是没法满足需求。据说，到2010年，淘宝网后端保存着286亿张图片。商用的系统系统没法满足需求的时候。他们就自己开发了一个tfs。大规模的小文件在磁盘上读取，需要磁盘磁头频繁的寻道和换道。大并发情况下和大量的操作确实很麻烦。其实借鉴了当时google公布的gfs设计论文。google有相册服务。为每个用户提供上传图片存储。 估计，google是率先实现这种小文件网络存储系统的。 有个观点比较好：对于老板们而言，往往觉得，用钱能解决的都不算问题。但问题在于，你遇到的问题，别人都没遇到过。那这个时候你就没有经验可以参考或者直接拿来使用。只有自己参考一些思路去创造技术了。 关于图片进行云存储(cdn加速)： 曾经看过这个，这个是比较适合创业公司的。价格相对便宜 https://www.upyun.com/ 介绍提到，我们在全国各地部署了55个CDN节点，500多台服务器，电信，联通，移动和教育网的4线带宽。 其实，现在的云存储本质就是一个cdn服务商。你把静态的图片上传到他提供的服务器上去(ftp方式上传或者api形式编写程序上传)。他为你做就近节点访问。 计费方式：按照流量付费，99元购买100g。怎么算流量。每次访问文件的大小累加，比如一个1m的文件，访问一次流量就加1m。 我个人理解，对于图片的量不大的情况下，使用这种云服务，好处不是节省存储空间。你自己的服务器100g的空间可能创业型公司都没用完，不是什么存储空间不够用去用云存储。以前对cdn比较模糊，这么理解，或者以为是分散网站web服务器流压力，服务器分流。这些好处是有的。但是，只要理解了cdn产生的背景和解决的关键问题后，就会明白云存储关键好处在于：给用户就近节点访问，加速。 我觉得，如果不是出于这个考虑，或者达不到这样的目的。用其他方案也完全可以替代。何必使用云存储呢？就是你无非有实力做到全国多个节点去部署服务，才需要租用cdn来帮你，毕竟他们是规模产生的效益，专注于解决这个领域。还有：腾讯云、阿里云 二、Node.js作Gateway 深入研究下node也是到了c/c++如何构建高性能的底层api，这个过程其实收获也非常大，而且这些东西不随语言的变迁而没有用，说到底语言只是工具，不用纠结太多。 语言只是个工具, 重要的是方法和思想, 前端也好, 后端也罢。 Node.js只是一个“运行环境”，本身提供很多功能，在这些功能基础上可以做多种应用开发。Node.js所直接使用的开发语言是JavaScript(ECMAScript)和C/C++，他们都不是依赖Node.js而存在的，这些语言首先是图灵完备的，其次本身具备众多特性，可以被用来做多种应用开发。 前端和后端是软件工程中的一对概念，是用来对应用程序进行分层的，软件或硬件的表示部分被称作前端，数据访问的部分被称为后端。而软件工工程上对软件系统的分层方法并不只有这一种。 从哲学上来讲，“Node.js”和“JavaScript语言”和“后端”之间不存在联系。 如下说法在逻辑学上都是错误的： “JavaScript可以用来写前端程序，所以用JavaScript的都是前端工程师” “Node.js可以用来运行后端程序，所以用Node.js的都是后端工程师” “Node.js工程师普遍会写JavaScript，而JavaScript可以用来写前端程序，所以用Node.js的都是前端工程师” “前端工程师普遍会写JavaScript，JavaScript可以用于做Node.js应用开发，而Node.js可以用来运行后端程序，所以前端工程师都是后端工程师” …… 软件开发通常对逻辑性要求非常高，如果一个软件开发工程师连上述逻辑都搞不懂的话，那么是一件多么可悲的事情。 从“前端与后端”分层思想的角度来说，前端开发需要大量前端独有的程序设计思想，后端开发也需要大量后端独有的程序设计思想，你是“前端工程师”或“后端工程师”就看你掌握哪些思想，如果你两者都掌握，那么你就既是“前端工程师”又是“后端工程师”，或者说是“全栈工程师”。 Node.js 是个运行环境而不是语言，但是现在的大环境放在那，根本不用纠结这些，说句更钻牛角尖的话，怎么解释 fs 与 buffer，所以说 Node.js 是个运行环境也不准确，所以不再纠结。 JD本身是一种很重要的声明，招聘者能够凭借JD在投简历前就能判断自己是否符合职位要求，从而避免在面试中浪费时间。只能说有些公司在招聘的时候不够专业和用心，最终结果是浪费了面试者和自己的时间与精力，甚至招到的员工其实根本在做与JD上不同的工作。 ============================================================================== 1、使用 Node.js 搭建一个 API 网关 为什么要用Node.js作为中间层 封装应用内部结构。相比起来调用指定的服务，客户端直接跟gatway交互更简单点。API Gateway提供给每一个客户端一个特定API，这样减少了客户端与服务器端的通信次数，也简化了客户端代码； 不用在所有的服务中重新实现相同的事情； 可以通过路由处理版本或后端接口，而公开的接口可以保持不变； 分解整体应用； 将共享逻辑（如身份验证）添加到网关API，可以将服务的体积变小，集中管理； 解决客户端所需要的数据的聚合级别不同，比如对在各种微服务中产生的非规范化数据实体的问题； 在 API 网关中进行数据格式的转换，而不是在所有的微服务器中分别进行实现； 处理客户端和微服务器之间的协议转换； 在 API 网关中实现速率限制，缓存以及各种可靠性功能. 客户端直接与服务器端通信的方式很少在实际中使用，通常来说，一个更好的解决办法是采用API Gateway的方式。API Gateway是一个服务器，也可以说是进入系统的唯一节点。这跟面向对象设计模式中的Facet模式很像。API Gateway封装内部系统的架构，并且提供API给各个客户端。它还可能有其他功能，如授权、监控、负载均衡、缓存、请求分片和管理、静态响应处理等。 下图展示了一个适应当前架构的API Gateway。 API Gateway负责请求转发、合成和协议转换。所有来自客户端的请求都要先经过API Gateway，然后路由这些请求到对应的微服务。API Gateway将经常通过调用多个微服务来处理一个请求以及聚合多个服务的结果。它可以在web协议与内部使用的非Web友好型协议间进行转换，如 HTTP协议、WebSocket协议。 API Gateway可以提供给客户端一个定制化的API。它暴露一个粗粒度API给移动客户端。以产品最终页这个使用场景为例。API Gateway提供一个服务提供点（/productdetails?productid=xxx）使得移动客户端可以在一个请求中检索到产品最终页的全 部数据。API Gateway通过调用多个服务来处理这一个请求并返回结果，涉及产品信息、推荐、评论等。 一个很好的API Gateway例子是 Netfix API Gateway。Netflix流服务提供数百个不同的微服务，包括电视、机顶盒、智能手机、游戏系统、平板电脑等。起初，Netflix视图提供一个 适用全场景的 API。但是，他们发现这种形式不好用，因为涉及到各式各样的设备以及它们独特的需求。现在，他们采用一个API Gateway来提供容错性高的API，针对不同类型设备有相应代码。事实上，一个适配器处理一个请求平均要调用6到8个后端服务。Netflix API Gateway每天处理数十亿的请求。 API Gateway的优点和缺点 如你所料，采用API Gateway也是优缺点并存的。API Gateway的一个最大好处是封装应用内部结构。相比起来调用指定的服务，客户端直接跟gatway交互更简单点。API Gateway提供给每一个客户端一个特定API，这样减少了客户端与服务器端的通信次数，也简化了客户端代码。 API Gateway也有一些缺点。它是一个高可用的组件，必须要开发、部署和管理。还有一个问题，它可能成为开发的一个瓶颈。开发者必须更新API Gateway来提供新服务提供点来支持新暴露的微服务。更新API Gateway时必须越轻量级越好。否则，开发者将因为更新Gateway而排队列。但是，除了这些缺点，对于大部分的应用，采用API Gateway的方式都是有效的。 外部客户端访问微服务架构中的服务时，服务端会对认证和传输有一些常见的要求。API 网关提供共享层来处理服务协议之间的差异，并满足特定客户端（如桌面浏览器、移动设备和老系统）的要求。 （1）微服务和消费者 微服务是面向服务的架构，团队可以独立设计、开发和发布应用程序。它允许在系统各个层面上的技术多样性，团队可以在给定的技术难题中使用最佳语言、数据库、协议和传输层，从而受益。例如，一个团队可以使用 HTTP REST 上的 JSON，而另一个团队可以使用 HTTP/2 上的 gRPC 或 RabbitMQ 等消息代理。 在某些情况下使用不同的数据序列化和协议可能是强大的，但要使用我们的产品的客户可能有不同的需求。该问题也可能发生在具有同质技术栈的系统中，因为客户可以从桌面浏览器通过移动设备和游戏机到遗留系统。一个客户可能期望 XML 格式，而另一个客户可能希望 JSON 。在许多情况下，您需要同时支持它们。 当客户想要使用您的微服务时，您可以面对的另一个挑战来自于通用的共享逻辑（如身份验证），因为您不想在所有服务中重新实现相同的事情。 总结：我们不想在我们的微服务架构中实现我们的内部服务，以支持多个客户端并可以重复使用相同的逻辑。这就是 API 网关出现的原因，其作为共享层来处理服务协议之间的差异并满足特定客户端的要求。 （2）什么是 API 网关？ API 网关是微服务架构中的一种服务，它为客户端提供共享层和 API，以便与内部服务进行通信。API 网关可以进行路由请求、转换协议、聚合数据以及实现共享逻辑，如认证和速率限制器。 您可以将 API 网关视为我们的微服务世界的入口点。 我们的系统可以有一个或多个 API 网关，具体取决于客户的需求。例如，我们可以为桌面浏览器、移动应用程序和公共 API 提供单独的网关。 Node.js 用于前端团队的 API 网关 由于 API 网关为客户端应用程序（如浏览器）提供了功能，它可以由负责开发前端应用程序的团队实施和管理。 这也意味着用哪种语言实现 API Gateway 应由负责特定客户的团队选择。由于 JavaScript 是开发浏览器应用程序的主要语言，即使您的微服务架构以不同的语言开发，Node.js 也可以成为实现 API 网关的绝佳选择。 Netflix 成功地使用 Node.js API 网关及其 Java 后端来支持广泛的客户端 - 了解更多关于它们的方法阅读 The “Paved Road” PaaS for Microservices at Netflix 这篇文章 （3）API 网关功能 我们之前讨论过，可以将通用共享逻辑放入您的 API 网关，本节将介绍最常见的网关职责。 路由和版本控制 我们将 API 网关定义为您的微服务的入口点。在您的网关服务中，您可以指定从客户端路由到特定服务的路由请求。您甚至可以通过路由处理版本或更改后端接口，而公开的接口可以保持不变。您还可以在您的 API 网关中定义与多个服务配合的新端点。 API 网关作为微服务入口点 网关设计的升级 API 网关方法也可以帮助您分解您的整体应用程序。在大多数情况下，在微服务端重构一个系统不是一个好主意也是不可能的，因为我们需要在重构期间为业务发送新的以及原有的功能。 在这种情况下，我们可以将代理或 API 网关置于我们的整体应用程序之前，将新功能作为微服务实现，并将新端点路由到新服务，同时通过原有的路由服务旧端点。这样以后，我们也可以通过将原有功能转变为新服务来分解整体。 随着网关设计的升级，我们可以实现整体架构到微型服务的平滑过渡。 API 网关设计的升级 认证 大多数微服务基础设施需要进行身份验证。将共享逻辑（如身份验证）添加到 API 网关可以帮助您保持您的服务的体积变小以及可以集中管理域。 在微服务架构中，您可以通过网络配置将您的服务保护在 DMZ （保护区）中，并通过 API 网关向客户公开。该网关还可以处理多个身份验证方法。例如，您可以同时支持基于 cookie 和 token 的身份验证。 具有认证功能的 API 网关 数据汇总 在微服务架构中，可能客户端所需要的数据的聚合级别不同，比如对在各种微服务中产生的非规范化数据实体。在这种情况下，我们可以使用我们的 API 网关来解决这些依赖关系并从多个服务收集数据。 在下图中，您可以看到 API 网关如何将用户和信用信息作为一个数据返回给客户端。请注意，这些数据由不同的微服务所拥有和管理。 序列化格式转换 我们需要支持客户端不同的数据序列化格式这样子的需求可能会发生。 想象一下我们的微服务使用 JSON 的情况，但我们的客户只能使用 XML APIs。在这种情况下，我们可以在 API 网关中把 JSON 转换为 XML，而不是在所有的微服务器中分别进行实现。 协议转换 微服务架构允许多通道协议传输从而获取多种技术的优势。然而，大多数客户端只支持一个协议。在这种情况下，我们需要转换客户端的服务协议。 API 网关还可以处理客户端和微服务器之间的协议转换。在下一张图片中，您可以看到客户端希望通过 HTTP REST 进行的所有通信，而内部的微服务使用 gRPC 和 GraphQL 。 速率限制和缓存 在前面的例子中，您可以看到我们可以把通用的共享逻辑（如身份验证）放在 API 网关中。除了身份验证之外，您还可以在 API 网关中实现速率限制，缓存以及各种可靠性功能。 超负荷的 API 网关 在实现您的 API 网关时，您应避免将非通用逻辑（如特定数据转换）放入您的网关。 服务应该始终拥有他们的数据域的全部所有权。构建一个超负荷的 API 网关，让微服务团队来控制，这违背了微服务的理念。 这就是为什么你应该关注你的 API 网关中的数据聚合 - 你应该避免它有大量逻辑甚至可以包含特定的数据转换或规则处理逻辑。 始终为您的 API 网关定义明确的责任，并且只包括其中的通用共享逻辑。 实现一个API Gateway 既然我们已经知道了采用API Gateway的动机和优缺点，下面来看在设计它时需要考虑哪些事情。 对于大多数应用，API Gateway的性能和可扩展性也是非常重要的。因此，创建一个支持同步、非阻塞I/O的API Gateway是有意义的。已经有不同的技术可以用来实现一个可扩展的API Gateway。在JVM上，采用基于NIO技术的框架，如Netty，Vertx，Spring Reactor或者JBoss Undertow。Node.js是一个非JVM的流行平台，它是一个在Chrome的JavaScript引擎基础上建立的平台。一个可选的方案是 NGINX Plus。NGINX Plus提供一个成熟的、可扩展的、高性能web服务器和反向代理，它们均容易部署、配置和二次开发。NGINX Plus可以管理授权、权限控制、负载均衡、缓存并提供应用健康检查和监控。 采用反应性编程模型 对于有些请求，API Gateway可以通过直接路由请求到对应的后端服务上的方式来处理。对于另外一些请求，它需要调用多个后端服务并合并结果来处理。对于一些请求，例如产品最终页面请求，发给后端服务的请求是相互独立的。为了最小化响应时间，API Gateway应该并发的处理相互独立的请求。但是，有时候请求之间是有依赖的。API Gateway可能需要先通过授权服务来验证请求，然后在路由到后端服务。类似的，为了获得客户的产品愿望清单，需要先获取该用户的资料，然后返回清单上 产品的信息。这样的一个API 组件是 Netflix Video Grid。 利用传统的同步回调方法来实现API合并的代码会使得你进入回调函数的噩梦中。这种代码将非常难度且难以维护。一个优雅的解决方案是采用反应性编程模式来实现。类似的反应抽象实现有Scala的 Future，Java8的 CompletableFuture和JavaScript的 Promise。基于微软.Net平台的有 Reactive Extensions(Rx)。Netflix为JVM环境创建了RxJava来使用他们的API Gateway。同样地，JavaScript平台有RxJS，可以在浏览器和Node.js平台上运行。采用反应编程方法可以帮助快速实现一个高效的API Gateway代码。 服务调用 一个基于微服务的应用是一个分布式系统，并且必须采用线程间通信的机制。有两种线程间通信的方法。一种是采用同步机制，基于消息的方法。这类的实现方法有JMS和AMQP。另外的，例如Zeromq属于服务间直接通信。还有一种线程间通信采用异步机制，例如Thrift和 HTTP。事实上一个系统会同时采用同步和异步两种机制。由于它的实现方式有很多种，因此API Gateway就需要支持多种通信方式。 服务发现 API Gateway需要知道每一个微服务的IP和端口。在传统应用中，你可能会硬编码这些地址，但是在现在云基础的微服务应用中，这将是个简单的问题。基础服务通常会采用静态地址，可以采用操作系统环境变量来指定。但是，探测应用服务的地址就没那么容易了。应用服务通常动态分配地址和端口。同样的，由于扩展或者升级，服务的实例也会动态的改变。因此，API Gateway需要采用系统的服务发现机制，要么采用 服务端发现，要么是 客户端发现。后续的一篇文章将会更详细的介绍这部分。如果采用客户端发现服务，API Gateway必须要去查询 服务注册处，也就是微服务实例地址的数据库。 处理部分失败 在实现API Gateway过程中，另外一个需要考虑的问题就是部分失败。这个问题发生在分布式系统中当一个服务调用另外一个服务超时或者不可用的情况。API Gateway不应该被阻断并处于无限期等待下游服务的状态。但是，如何处理这种失败依赖于特定的场景和具体服务。例如，如果是在产品详情页的推荐服务模块无响应，那么API Gateway应该返回剩下的其他信息给用户，因为这些信息也是有用的。推荐部分可以返回空，也可以返回固定的顶部10个给用户。但是，如果是产品信息服 务无响应，那么API Gateway就应该给客户端返回一个错误。 在缓存有效的时候，API Gateway应该能够返回缓存。例如，由于产品价格变化并不频繁，API Gateway在价格服务不可用时应该返回缓存中的数值。这类数据可以由API Gateway自身来缓存，也可以由Redis或Memcached这类外部缓存实现。通过返回缓存数据或者默认数据，API Gateway来确保系统错误不影响到用户体验。 Netflix Hystrix对于实现远程服务调用代码来说是一个非常好用的库。Hystrix记录那些超过预设定的极限值的调用。它实现了 circuit break模 式，使得可以将客户端从无响应服务的无尽等待中停止。如果一个服务的错误率超过预设值，Hystrix将中断服务，并且在一段时间内所有请求立刻失效。 Hystrix可以为请求失败定义一个fallback操作，例如读取缓存或者返回默认值。如果你在用JVM，就应该考虑使用Hystrix。如果你采用 的非JVM环境，那么应该考虑采用类似功能的库。 总结 对于大多数微服务基础的应用，实现一个API Gateway都是有意义的，它就像是进入系统的一个服务提供点。API Gateway负责请求转发、请求合成和协议转换。它提供给应用客户端一个自定义的API。API Gateway可以通过返回缓存或者默认值的方式来掩盖后端服务的错误。在本系列的下一篇文章中，我们将讨论服务间的通信问题。 （4）Node.js API 网关 在 Node.js 中，您可以使用 http-proxy 软件包简单地代理对特定服务的请求，也可以使用更多丰富功能的 express-gateway 来创建 API 网关。 在我们的第一个 API 网关示例中，我们在将代码委托给 user 服务之前验证请求。 1234567891011121314const express = require('express')const httpProxy = require('express-http-proxy')const app = express()const userServiceProxy = httpProxy('https://user-service')// 身份认证app.use((req, res, next) =&gt; &#123;// TODO: 身份认证逻辑 next()&#125;)// 代理请求app.get('/users/:userId', (req, res, next) =&gt; &#123; userServiceProxy(req, res, next)&#125;) 另一种示例可能是在您的 API 网关中发出新的请求，并将响应返回给客户端： 12345678910const express = require('express')const request = require('request-promise-native')const app = express()// 解决: GET /users/meapp.get('/users/me', async (req, res) =&gt; &#123; const userId = req.session.userId const uri = `https://user-service/users/$&#123;userId&#125;` const user = await request(uri) res.json(user)&#125;) Node.js API 网关总结 API 网关提供了一个共享层，以通过微服务架构来满足客户需求。它有助于保持您的服务小而专注。您可以将不同的通用逻辑放入您的 API 网关，但是您应该避免 API 网关的过度使用，因为很多逻辑可以从服务团队中获得控制。]]></content>
      <categories>
        <category>work_summary</category>
      </categories>
      <tags>
        <tag>node.js</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[01_common_commands]]></title>
    <url>%2F2019%2F04%2F22%2Fhexo-01-common-commands%2F</url>
    <content type="text"><![CDATA[01-hexo常用命令手册 生成hexo静态博客 新建elaine文件夹 hexo init npm install hexo g hexo s #本地预览 与Github关联 Github上新建 github名字.github.io 的仓库 在elaine_config.yml中设置：将type设置为git（替换成你自己的信息），然后 hexo g、hexo d 1234deploy: type: git repo: git@github.com:ElaineXHZhong/ElaineXHZhong.github.io.git branch: master 用next主题： 将next的解压缩文件放在elaine\themes下面 将elaine下的_config.yml文件修改： theme: next 用live2d动画： 将elaine下的_config.yml文件添加： 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false log: false model: use: live2d-widget-model-tororo display: position: right width: 150 height: 300 mobile: show: true 添加菜单项： 在hexo下运行git: hexo n page ‘about’，（会在source下面出现about文件夹，修改里面的.md文件） 修改themes下的next里的_config.yml文件，添加： 123menu: home: / || home about: /about/ || user 修改： 1language: zh-Hans 修改themes下的next下的languages下的zh-Hans.yml： 123menu: home: 首页 about: 关于 添加分类： hexo n page ‘categories’（source下出现categories文件夹，修改里面的.md文件）：（添加type: “categories”） 123title: categoriesdate: 2019-04-20 23:39:03type: "categories" 以后每次 hexo n articleName（source下面的_posts会出现相应文章），在文章.md文件中编辑： 12345// 方式1categories: 编程// 方式2categories: -编程 然后修改elaine下的_config.yml： 12345# Category &amp; Tagdefault_category: uncategorizedcategory_map: 编程: programming # 分类名称：访问路径tag_map: 就可以把该文章分类到‘programming’类； 标签的设置也是一样的： 12345678910---title: jQuery对表单的操作及更多应用date: 2017-05-26 12:12:57categories: - web前端tags:- jQuery- 表格- 表单验证--- 至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了tags: xxx的文章才会被收录到首页的“标签”中。 两个的设置几乎一模一样！ 所以我们可以打开scaffolds/post.md文件，在tages:上面加入categories:,保存后，之后执行hexo new 文章名命令生成的文件，页面里就有categories:项了： 1234title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories: tags: 异地同步博客：决定博客显示内容的只有一个Public目录，而public目录又是可以动态生成的（hexo g，根据_config.yml，source目录和themes目录下的文件生成），只要在不同电脑上同步可以生成Public目录的文件即可。以下文件以及目录是必须要同步的： source themes _config.yml db.json package.json .deploy_git]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hello-world]]></title>
    <url>%2F2019%2F04%2F22%2Fhexo-00-hello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new "My New Post" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: [Deployment](]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[12_Router]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-12-Router%2F</url>
    <content type="text"><![CDATA[12- Node.js路由封装 01router.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445//引入http模块var http=require('http');var url=require('url');var ejs=require('ejs');var fs=require('fs');//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); //获取get 还是post请求 var method=req.method.toLowerCase(); //console.log(method); var pathname=url.parse(req.url,true).pathname; if(pathname=='/login')&#123; /*显示登录页面*/ ejs.renderFile('views/form.ejs',&#123; &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;else if(pathname=='/dologin' &amp;&amp;method=='get')&#123; /*执行登录的操作*/ //get获取数据 console.log(url.parse(req.url,true).query); res.end('dologin'); &#125;else if(pathname=='/dologin' &amp;&amp;method=='post')&#123; /*执行登录的操作*/ var postStr=''; req.on('data',function(chunk)&#123; postStr+=chunk; &#125;) req.on('end',function(err,chunk)&#123; //res.end(postStr); console.log(postStr); fs.appendFile('login.txt',postStr+'\n',function(err)&#123; if(err)&#123; console.log(err); return; &#125; console.log('写入数据成功'); &#125;) res.end("&lt;script&gt;alert('登录成功');history.back();&lt;/script&gt;") &#125;) &#125;else&#123; ejs.renderFile('views/index.ejs',&#123; &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;&#125;).listen(8001); 02router.js 123456789101112131415161718//引入http模块var http=require('http');var url=require('url');var model=require('./model/model.js');//model['login']('111','22');////路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); var pathname=url.parse(req.url).pathname.replace('/',''); if(pathname!='favicon.ico') &#123; try &#123; model[pathname](req, res); &#125; catch (err) &#123; model['home'](req, res); &#125; &#125; //console.log(pathname);&#125;).listen(8001); 03demo.js 12345678910111213141516171819202122//index.jsvar route = require('./model/http-route.js');var app = route();var http = require('http');var server = http.createServer(app);app.get('/', function (req, res) &#123; res.send('é¦–é¡µ');&#125;);app.get('/login', function (req, res) &#123; res.send('login');&#125;);app.get('/register', function (req, res) &#123; res.send('register');&#125;);app.post('/test', function (req, res) &#123; console.log('POST', req.query); res.send(req.query);&#125;);server.listen(8080, function () &#123; console.log('listen ' + server.address().port);&#125;);]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[11_Get_Post]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-11-Get-Post%2F</url>
    <content type="text"><![CDATA[11-GET、POST、EJS、静态文件托管 一、静态文件托管 和静态web服务是一样的，只不过对静态 web 服务器做一个封装。 二、路由 官方解释： 路由（Routing）是由一个 URI（或者叫路径）和一个特定的 HTTP 方法（GET、POST 等）组成 的，涉及到应用如何响应客户端对某个网站节点的访问。 非官方解释： 路由指的就是针对不同请求的 URL，处理不同的业务逻辑。 三、认识EJS模块引擎 我们学的 EJS 是后台模板，可以把我们数据库和文件读取的数据显示到 Html 页面上面。它 是一个第三方模块，需要通过 npm 安装。 1npm install ejs –save 123ejs.renderFile(filename, data, options, function(err, str)&#123; // str =&gt; Rendered HTML string &#125;); EJS 常用标签 &lt;% %&gt;流程控制标签 &lt;%= %&gt;输出标签（原文输出 HTML 标签） &lt;%- %&gt;输出标签（HTML 会被浏览器解析） 123456&lt;a href="&lt;%= url %&gt;"&gt;&lt;img src="&lt;%= imageURL %&gt;" alt=""&gt;&lt;/a&gt;&lt;ul&gt;&lt;ul&gt; &lt;% for(var i = 0 ; i &lt; news.length ; i++)&#123; %&gt; &lt;li&gt;&lt;%= news[i] %&gt;&lt;/li&gt; &lt;% &#125; %&gt; &lt;/ul&gt; 四、Get、Post 超文本传输协议（HTTP）的设计目的是保证客户端机器与服务器之间的通信。 在客户端和服务器之间进行请求-响应时，两种最常被用到的方法是：GET 和 POST。 GET - 从指定的资源请求数据。（一般用于获取数据） POST - 向指定的资源提交要被处理的数据。（一般用于提交数据） 123获取 GET 传值： var urlinfo= url .parse(req.url,true); urlinfo.query(); 123456789101112获取 POST 传值： var postData = ''; // 数据块接收中 req.on('data', function (postDataChunk) &#123; postData += postDataChunk; &#125;); // 数据接收完毕，执行回调函数 req.on('end', function () &#123; try &#123; postData = JSON.parse(postData); &#125;catch(e)&#123; &#125; req.query = postData; console.log(querystring .parse(postData)); &#125;); 例子： 00services1.js 123456789//引入http模块var http=require('http');//引入扩展名的方法是在文件里面获取到的。var router=require('./model/router.js');//console.log(mimeModel.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //router.statics(req,res,'static'); console.log(req.url);&#125;).listen(8001); 00services2.js 12345678910111213141516//引入http模块var http=require('http');var url=require('url');//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; var pathname=url.parse(req.url).pathname; if(pathname=='/login')&#123; res.end('login'); &#125;else if(pathname=='/register')&#123; res.end('register'); &#125;else if(pathname=='/order')&#123; res.end('order'); &#125;else&#123; res.end('index'); &#125;&#125;).listen(8001); 00services3.js 123456789101112131415161718192021222324252627282930313233//引入http模块var http=require('http');var url=require('url');var ejs=require('ejs');//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); var pathname=url.parse(req.url).pathname; if(pathname=='/login')&#123; var data='你好我是后台数据'; var list=[ '1111', '2222', '3333', ]; //把数据库的数据渲染到模板上面 ejs.renderFile('views/login.ejs',&#123; msg:data, list:list &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;else&#123; var msg='这是注册页面，也是注册的路由'; var h="&lt;h2&gt;这是一个h2&lt;/h2&gt;" ejs.renderFile('views/register.ejs',&#123; msg:msg, h:h &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;&#125;).listen(8001); get_post.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445//引入http模块var http=require('http');var url=require('url');var ejs=require('ejs');var fs=require('fs');//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); //获取get 还是post请求 var method=req.method.toLowerCase(); //console.log(method); var pathname=url.parse(req.url,true).pathname; if(pathname=='/login')&#123; /*显示登录页面*/ ejs.renderFile('views/form.ejs',&#123; &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;else if(pathname=='/dologin' &amp;&amp;method=='get')&#123; /*执行登录的操作*/ //get获取数据 console.log(url.parse(req.url,true).query); res.end('dologin'); &#125;else if(pathname=='/dologin' &amp;&amp;method=='post')&#123; /*执行登录的操作*/ var postStr=''; req.on('data',function(chunk)&#123; postStr+=chunk; &#125;) req.on('end',function(err,chunk)&#123; //res.end(postStr); console.log(postStr); fs.appendFile('login.txt',postStr+'\n',function(err)&#123; if(err)&#123; console.log(err); return; &#125; console.log('写入数据成功'); &#125;) res.end("&lt;script&gt;alert('登录成功');history.back();&lt;/script&gt;") &#125;) &#125;else&#123; ejs.renderFile('views/index.ejs',&#123; &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;&#125;).listen(8001); login.txt 12username=zhangsan&amp;password=123username=zhangsan222&amp;password=3333 model/router.js 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');//获取文件类型的方法 私有function getMime(extname,callback)&#123; /*获取后缀名的方法*/ fs.readFile('./mime.json',function(err,data)&#123; if(err)&#123; console.log('mime.json文件不存在'); return false; &#125; //console.log(data.toString()); var Mimes=JSON.parse(data.toString()); var result= Mimes[extname] || 'text/html'; callback(result) &#125;)&#125;exports.statics=function(req,res,staticpath)&#123; var pathname=url.parse(req.url).pathname; /*获取url的值*/ if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile(staticpath+'/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile(staticpath+'/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ getMime(extname,function(mime)&#123; res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125;); &#125; &#125;) &#125;&#125;]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[10_Callback_Event]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-10-Callback-Event%2F</url>
    <content type="text"><![CDATA[10-Nodejs回调和事件驱动 一、 Node.js的单线程、非阻塞 I/O、事件驱动 在 Java、PHP 或者.net 等服务器端语言中，会为每一个客户端连接创建一个新的线程。 而每个线程需要耗费大约 2MB 内存。也就是说，理论上，一个 8GB 内存的服务器可以同时 连接的最大用户数为 4000 个左右。要让Web应用程序支持更多的用户，就需要增加服务器 的数量，而 Web 应用程序的硬件成本当然就上升了。 Node.js 不为每个客户连接创建一个新的线程，而仅仅使用一个线程。当有用户连接了， 就触发一个内部事件，通过非阻塞 I/O、事件驱动机制，让 Node.js 程序宏观上也是并行的。 使用 Node.js，一个 8GB 内存的服务器，可以同时处理超过4 万用户的连接。 二、Node.js回调处理异步 错误的写法： 123456789function getData ()&#123; // 模拟请求数据 var result=''; setTimeout (function()&#123; result='这是请求到的数据' &#125;,200); return result; &#125; console .log( getData ()); /* 异步导致请求不到数据 */ 正确的写法： 1234567891011function getData (callback)&#123; // 模拟请求数据 var result=''; setTimeout (function()&#123; result='这是请求到的数据'; callback(result); &#125;,200); &#125; getData (function( data )&#123; console.log(data) ; &#125;) 错误的写法：(非阻塞) 12345678910111213141516171819202122var fs=require('fs');//非阻塞io//console.log('1');////fs.readFile('mime.json',function(err,data)&#123;// //console.log(data);// console.log('2');//&#125;)////console.log('3');function getMime()&#123; //1 fs.readFile('mime.json',function(err,data)&#123; //console.log(data.toString()); return data;//3 &#125;) //2 //return '123';&#125;console.log(getMime()); /*有问题*/ 正确的写法：(回调函数) 1234567891011var fs=require('fs');function getMime(callback)&#123; fs.readFile('mime.json',function(err,data)&#123; //console.log(data.toString()); //return data; callback(data); &#125;)&#125;getMime(function(result)&#123; console.log(result.toString());&#125;) 三、Node.js events 模块处理异步 Node.js 事件循环: Node.js 是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高。Node.js 的每一个 API 都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。Node.js 有多个内置的事件，我们可以通过引入 events 模块，并通过实例化 EventEmitter 类来绑定和监听事件。 1234567891011// 引入events模块 var events = require ('events'); var EventEmitter =new events.EventEmitter(); /* 实例化事件对象 */ // 广播和接收广播(也就是事件驱动)EventEmitter.on('to_parent',function()&#123; // 监听to_parent的广播 //on监听一个广播 console.log('接收到了to_parent这个广播事件'); &#125;) setTimeout(function()&#123; // 过1秒后触发一个定时器(一个广播) console.log('开始广播了...'); EventEmitter.emit('to_parent','你要发送的数据'); /* 发送广播 */ //emit触发一个广播&#125;,1000) 程序流程：进来后监听to_parent这个广播（还没有执行），等到1秒后emit广播了以后，它才会监听到这个事件。可以在on里面console.log(data)来得到要发送的数据。 12345678var events = require('events');var EventEmitter = new events.EventEmitter();EventEmitter.on('to_parent',function(data)&#123; console.log(data); // 这个data就是下面emit发送的数据&#125;)setTimeout(function()&#123; EventEmitter.emit('to_parent','要发送的数据');&#125;) 注意看下面广播事件的顺序： 12345678910111213141516171819var events=require('events');var EventEmitter=new events.EventEmitter();EventEmitter.on('to_mime',function(data)&#123; console.log(data);&#125;)//监听to_parent的广播EventEmitter.on('to_parent',function(data)&#123; //console.log('接收到了这个广播事件'); console.log(data); EventEmitter.emit('to_mime','给mime发送的数据')&#125;)setTimeout(function()&#123; console.log('开始广播...'); //广播to_parent事件 EventEmitter.emit('to_parent','发送的数据')&#125;,1000);//开始广播...//发送的数据//给mime发送的数据 首先，开始广播，打印出’开始广播…’，因为首先监听广播，它只监听但是不会执行回调函数；当通过EventEmitter.emit()广播以后，EventEmitter.on()就接收到了广播，才会触发里面的回调函数；在回调函数里又广播了一次 。 Node.js事件驱动获取数据： 12345678910111213var fs=require('fs');var events=require('events');var EventEmitter=new events.EventEmitter();function getMime(callback)&#123; fs.readFile('mime.json',function(err,data)&#123; EventEmitter.emit('data',data) &#125;)&#125;getMime();/*执行方法*///监听广播数据EventEmitter.on('data',function(mime)&#123; console.log(mime.toString());&#125;)]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[09_Create_Server]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-09-Create-Server%2F</url>
    <content type="text"><![CDATA[09-利用http模块、url模块、path模块创建一个web服务器 一、Node.js 创建的第一个应用 123456789101112//1. 引入http 模块 const http = require ('http'); //2. 用http模块创建服务 http.createServer(function(req,res)&#123; // 发送HTTP头部 // HTTP状态值:200 : OK // 设置HTTP头部，状态码是200，文件类型是html，字符集是utf-8 res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write('你好 nodejs'); res.write('我是第一个 nodejs 程序'); res.end(); /* 结束响应 */ &#125;).listen(8001); 二、WEB 服务器介绍 Web 服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，可以向浏览器等Web 客户端提供文档，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。目前最主流的三个 Web 服务器是 Apache Nginx IIS。 静态服务器：就是不支持动态页面和支持数据库的服务器空间，这样的服务器一般就只能放文件或者静态的页面，一般也就是html结尾或者htm结尾的页面。 1234567891011121314151617181920212223242526272829303132333435363738var http = require('http');var fs = require('fs');var path = require('path');var url = require('url');var mimeModel = require('./model/getmime.js');console.log(mimeModel.getMime('.html'));http.createServer(function(req,res)&#123; // req.url能拿到浏览器的输入地址 // var pathname = req.url; var pathname = url.parse(req.url).pathname; var extname = path.extname(pathname); var mime = mimeModel.getMime(extname); // 获取文件类型 if(pathname=='/')&#123; pathname = 'json/index.html'; // 默认加载的首页 &#125; if(pathname!='/favicon.ico')&#123; //过滤favicon.ico请求 console.log(pathname); fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; console.log('404'); fs.readFile('static/json/404.html',function(err,data404)&#123; if(err)&#123; console.log(err); &#125;else&#123; // res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data404); res.end(); &#125; &#125;) &#125;else&#123; res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); &#125; &#125;) &#125;&#125;).listen(8888); 00services1.js 1234567891011121314151617181920212223242526//引入http模块var http=require('http');//fs模块var fs=require('fs');http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css var pathname=req.url; if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); &#125;else&#123; /*返回这个文件*/ res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125; &#125;) &#125;&#125;).listen(8001); 00services2.js 1234567891011121314151617181920212223242526272829303132333435363738394041//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*/var mimeModel=require('./model/getmime.js');//console.log(mime.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css var pathname=req.url; if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile('static/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ var mime=mimeModel.getMime(extname); /*获取文件类型*/ res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125; &#125;) &#125;&#125;).listen(8001); 00services3.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');var mimeModel=require('./model/getmime.js');//console.log(mime.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css //xxx.json?214214124 var pathname=url.parse(req.url).pathname; console.log(pathname); if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile('static/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ var mime=mimeModel.getMime(extname); /*获取文件类型*/ res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125; &#125;) &#125;&#125;).listen(8001); 00services4.js 1234567891011//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');var mimeModel=require('./model/getmimefromfile.js');//console.log(); //获取文件类型console.log(mimeModel.getMime(fs, '.css')); 00services5.js 12345678910111213141516171819202122232425262728293031323334353637383940414243444546//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');//引入扩展名的方法是在文件里面获取到的。var mimeModel=require('./model/getmimefromfile.js');//console.log(mimeModel.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css //xxx.json?214214124 var pathname=url.parse(req.url).pathname; console.log(pathname); if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile('static/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ var mime=mimeModel.getMime(fs,extname); /*获取文件类型*/ res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125; &#125;) &#125;&#125;).listen(8002); 00services6.js 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');var events=require('events');var EventEmitter=new events.EventEmitter();var mimeModel=require('./model/getmimefromfile_events.js');//引入扩展名的方法是在文件里面获取到的。//console.log(mimeModel.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css //xxx.json?214214124 var pathname=url.parse(req.url).pathname; console.log(pathname); if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile('static/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ mimeModel.getMime(fs,EventEmitter,extname); /*调用获取数据的方法*/ EventEmitter.on('to_mime',function(mime)&#123; res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); //res.write(data); res.end(data); /*结束响应*/ &#125;) &#125; &#125;) &#125;&#125;).listen(8002); mime.json 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484&#123; ".323":"text/h323" , ".3gp":"video/3gpp" , ".aab":"application/x-authoware-bin" , ".aam":"application/x-authoware-map" , ".aas":"application/x-authoware-seg" , ".acx":"application/internet-property-stream" , ".ai":"application/postscript" , ".aif":"audio/x-aiff" , ".aifc":"audio/x-aiff" , ".aiff":"audio/x-aiff" , ".als":"audio/X-Alpha5" , ".amc":"application/x-mpeg" , ".ani":"application/octet-stream" , ".apk":"application/vnd.android.package-archive" , ".asc":"text/plain" , ".asd":"application/astound" , ".asf":"video/x-ms-asf" , ".asn":"application/astound" , ".asp":"application/x-asap" , ".asr":"video/x-ms-asf" , ".asx":"video/x-ms-asf" , ".au":"audio/basic" , ".avb":"application/octet-stream" , ".avi":"video/x-msvideo" , ".awb":"audio/amr-wb" , ".axs":"application/olescript" , ".bas":"text/plain" , ".bcpio":"application/x-bcpio" , ".bin ":"application/octet-stream" , ".bld":"application/bld" , ".bld2":"application/bld2" , ".bmp":"image/bmp" , ".bpk":"application/octet-stream" , ".bz2":"application/x-bzip2" , ".c":"text/plain" , ".cal":"image/x-cals" , ".cat":"application/vnd.ms-pkiseccat" , ".ccn":"application/x-cnc" , ".cco":"application/x-cocoa" , ".cdf":"application/x-cdf" , ".cer":"application/x-x509-ca-cert" , ".cgi":"magnus-internal/cgi" , ".chat":"application/x-chat" , ".class":"application/octet-stream" , ".clp":"application/x-msclip" , ".cmx":"image/x-cmx" , ".co":"application/x-cult3d-object" , ".cod":"image/cis-cod" , ".conf":"text/plain" , ".cpio":"application/x-cpio" , ".cpp":"text/plain" , ".cpt":"application/mac-compactpro" , ".crd":"application/x-mscardfile" , ".crl":"application/pkix-crl" , ".crt":"application/x-x509-ca-cert" , ".csh":"application/x-csh" , ".csm":"chemical/x-csml" , ".csml":"chemical/x-csml" , ".css":"text/css" , ".cur":"application/octet-stream" , ".dcm":"x-lml/x-evm" , ".dcr":"application/x-director" , ".dcx":"image/x-dcx" , ".der":"application/x-x509-ca-cert" , ".dhtml":"text/html" , ".dir":"application/x-director" , ".dll":"application/x-msdownload" , ".dmg":"application/octet-stream" , ".dms":"application/octet-stream" , ".doc":"application/msword" , ".docx":"application/vnd.openxmlformats-officedocument.wordprocessingml.document" , ".dot":"application/msword" , ".dvi":"application/x-dvi" , ".dwf":"drawing/x-dwf" , ".dwg":"application/x-autocad" , ".dxf":"application/x-autocad" , ".dxr":"application/x-director" , ".ebk":"application/x-expandedbook" , ".emb":"chemical/x-embl-dl-nucleotide" , ".embl":"chemical/x-embl-dl-nucleotide" , ".eps":"application/postscript" , ".epub":"application/epub+zip" , ".eri":"image/x-eri" , ".es":"audio/echospeech" , ".esl":"audio/echospeech" , ".etc":"application/x-earthtime" , ".etx":"text/x-setext" , ".evm":"x-lml/x-evm" , ".evy":"application/envoy" , ".exe":"application/octet-stream" , ".fh4":"image/x-freehand" , ".fh5":"image/x-freehand" , ".fhc":"image/x-freehand" , ".fif":"application/fractals" , ".flr":"x-world/x-vrml" , ".flv":"flv-application/octet-stream" , ".fm":"application/x-maker" , ".fpx":"image/x-fpx" , ".fvi":"video/isivideo" , ".gau":"chemical/x-gaussian-input" , ".gca":"application/x-gca-compressed" , ".gdb":"x-lml/x-gdb" , ".gif":"image/gif" , ".gps":"application/x-gps" , ".gtar":"application/x-gtar" , ".gz":"application/x-gzip" , ".h":"text/plain" , ".hdf":"application/x-hdf" , ".hdm":"text/x-hdml" , ".hdml":"text/x-hdml" , ".hlp":"application/winhlp" , ".hqx":"application/mac-binhex40" , ".hta":"application/hta" , ".htc":"text/x-component" , ".htm":"text/html" , ".html":"text/html" , ".hts":"text/html" , ".htt":"text/webviewhtml" , ".ice":"x-conference/x-cooltalk" , ".ico":"image/x-icon" , ".ief":"image/ief" , ".ifm":"image/gif" , ".ifs":"image/ifs" , ".iii":"application/x-iphone" , ".imy":"audio/melody" , ".ins":"application/x-internet-signup" , ".ips":"application/x-ipscript" , ".ipx":"application/x-ipix" , ".isp":"application/x-internet-signup" , ".it":"audio/x-mod" , ".itz":"audio/x-mod" , ".ivr":"i-world/i-vrml" , ".j2k":"image/j2k" , ".jad":"text/vnd.sun.j2me.app-descriptor" , ".jam":"application/x-jam" , ".jar":"application/java-archive" , ".java":"text/plain" , ".jfif":"image/pipeg" , ".jnlp":"application/x-java-jnlp-file" , ".jpe":"image/jpeg" , ".jpeg":"image/jpeg" , ".jpg":"image/jpeg" , ".jpz":"image/jpeg" , ".js":"application/x-javascript" , ".jwc":"application/jwc" , ".kjx":"application/x-kjx" , ".lak":"x-lml/x-lak" , ".latex":"application/x-latex" , ".lcc":"application/fastman" , ".lcl":"application/x-digitalloca" , ".lcr":"application/x-digitalloca" , ".lgh":"application/lgh" , ".lha":"application/octet-stream" , ".lml":"x-lml/x-lml" , ".lmlpack":"x-lml/x-lmlpack" , ".log":"text/plain" , ".lsf":"video/x-la-asf" , ".lsx":"video/x-la-asf" , ".lzh":"application/octet-stream" , ".m13":"application/x-msmediaview" , ".m14":"application/x-msmediaview" , ".m15":"audio/x-mod" , ".m3u":"audio/x-mpegurl" , ".m3url":"audio/x-mpegurl" , ".m4a":"audio/mp4a-latm" , ".m4b":"audio/mp4a-latm" , ".m4p":"audio/mp4a-latm" , ".m4u":"video/vnd.mpegurl" , ".m4v":"video/x-m4v" , ".ma1":"audio/ma1" , ".ma2":"audio/ma2" , ".ma3":"audio/ma3" , ".ma5":"audio/ma5" , ".man":"application/x-troff-man" , ".map":"magnus-internal/imagemap" , ".mbd":"application/mbedlet" , ".mct":"application/x-mascot" , ".mdb":"application/x-msaccess" , ".mdz":"audio/x-mod" , ".me":"application/x-troff-me" , ".mel":"text/x-vmel" , ".mht":"message/rfc822" , ".mhtml":"message/rfc822" , ".mi":"application/x-mif" , ".mid":"audio/mid" , ".midi":"audio/midi" , ".mif":"application/x-mif" , ".mil":"image/x-cals" , ".mio":"audio/x-mio" , ".mmf":"application/x-skt-lbs" , ".mng":"video/x-mng" , ".mny":"application/x-msmoney" , ".moc":"application/x-mocha" , ".mocha":"application/x-mocha" , ".mod":"audio/x-mod" , ".mof":"application/x-yumekara" , ".mol":"chemical/x-mdl-molfile" , ".mop":"chemical/x-mopac-input" , ".mov":"video/quicktime" , ".movie":"video/x-sgi-movie" , ".mp2":"video/mpeg" , ".mp3":"audio/mpeg" , ".mp4":"video/mp4" , ".mpa":"video/mpeg" , ".mpc":"application/vnd.mpohun.certificate" , ".mpe":"video/mpeg" , ".mpeg":"video/mpeg" , ".mpg":"video/mpeg" , ".mpg4":"video/mp4" , ".mpga":"audio/mpeg" , ".mpn":"application/vnd.mophun.application" , ".mpp":"application/vnd.ms-project" , ".mps":"application/x-mapserver" , ".mpv2":"video/mpeg" , ".mrl":"text/x-mrml" , ".mrm":"application/x-mrm" , ".ms":"application/x-troff-ms" , ".msg":"application/vnd.ms-outlook" , ".mts":"application/metastream" , ".mtx":"application/metastream" , ".mtz":"application/metastream" , ".mvb":"application/x-msmediaview" , ".mzv":"application/metastream" , ".nar":"application/zip" , ".nbmp":"image/nbmp" , ".nc":"application/x-netcdf" , ".ndb":"x-lml/x-ndb" , ".ndwn":"application/ndwn" , ".nif":"application/x-nif" , ".nmz":"application/x-scream" , ".nokia-op-logo":"image/vnd.nok-oplogo-color" , ".npx":"application/x-netfpx" , ".nsnd":"audio/nsnd" , ".nva":"application/x-neva1" , ".nws":"message/rfc822" , ".oda":"application/oda" , ".ogg":"audio/ogg" , ".oom":"application/x-AtlasMate-Plugin" , ".p10":"application/pkcs10" , ".p12":"application/x-pkcs12" , ".p7b":"application/x-pkcs7-certificates" , ".p7c":"application/x-pkcs7-mime" , ".p7m":"application/x-pkcs7-mime" , ".p7r":"application/x-pkcs7-certreqresp" , ".p7s":"application/x-pkcs7-signature" , ".pac":"audio/x-pac" , ".pae":"audio/x-epac" , ".pan":"application/x-pan" , ".pbm":"image/x-portable-bitmap" , ".pcx":"image/x-pcx" , ".pda":"image/x-pda" , ".pdb":"chemical/x-pdb" , ".pdf":"application/pdf" , ".pfr":"application/font-tdpfr" , ".pfx":"application/x-pkcs12" , ".pgm":"image/x-portable-graymap" , ".pict":"image/x-pict" , ".pko":"application/ynd.ms-pkipko" , ".pm":"application/x-perl" , ".pma":"application/x-perfmon" , ".pmc":"application/x-perfmon" , ".pmd":"application/x-pmd" , ".pml":"application/x-perfmon" , ".pmr":"application/x-perfmon" , ".pmw":"application/x-perfmon" , ".png":"image/png" , ".pnm":"image/x-portable-anymap" , ".pnz":"image/png" , ".pot,":"application/vnd.ms-powerpoint" , ".ppm":"image/x-portable-pixmap" , ".pps":"application/vnd.ms-powerpoint" , ".ppt":"application/vnd.ms-powerpoint" , ".pptx":"application/vnd.openxmlformats-officedocument.presentationml.presentation" , ".pqf":"application/x-cprplayer" , ".pqi":"application/cprplayer" , ".prc":"application/x-prc" , ".prf":"application/pics-rules" , ".prop":"text/plain" , ".proxy":"application/x-ns-proxy-autoconfig" , ".ps":"application/postscript" , ".ptlk":"application/listenup" , ".pub":"application/x-mspublisher" , ".pvx":"video/x-pv-pvx" , ".qcp":"audio/vnd.qcelp" , ".qt":"video/quicktime" , ".qti":"image/x-quicktime" , ".qtif":"image/x-quicktime" , ".r3t":"text/vnd.rn-realtext3d" , ".ra":"audio/x-pn-realaudio" , ".ram":"audio/x-pn-realaudio" , ".rar":"application/octet-stream" , ".ras":"image/x-cmu-raster" , ".rc":"text/plain" , ".rdf":"application/rdf+xml" , ".rf":"image/vnd.rn-realflash" , ".rgb":"image/x-rgb" , ".rlf":"application/x-richlink" , ".rm":"audio/x-pn-realaudio" , ".rmf":"audio/x-rmf" , ".rmi":"audio/mid" , ".rmm":"audio/x-pn-realaudio" , ".rmvb":"audio/x-pn-realaudio" , ".rnx":"application/vnd.rn-realplayer" , ".roff":"application/x-troff" , ".rp":"image/vnd.rn-realpix" , ".rpm":"audio/x-pn-realaudio-plugin" , ".rt":"text/vnd.rn-realtext" , ".rte":"x-lml/x-gps" , ".rtf":"application/rtf" , ".rtg":"application/metastream" , ".rtx":"text/richtext" , ".rv":"video/vnd.rn-realvideo" , ".rwc":"application/x-rogerwilco" , ".s3m":"audio/x-mod" , ".s3z":"audio/x-mod" , ".sca":"application/x-supercard" , ".scd":"application/x-msschedule" , ".sct":"text/scriptlet" , ".sdf":"application/e-score" , ".sea":"application/x-stuffit" , ".setpay":"application/set-payment-initiation" , ".setreg":"application/set-registration-initiation" , ".sgm":"text/x-sgml" , ".sgml":"text/x-sgml" , ".sh":"application/x-sh" , ".shar":"application/x-shar" , ".shtml":"magnus-internal/parsed-html" , ".shw":"application/presentations" , ".si6":"image/si6" , ".si7":"image/vnd.stiwap.sis" , ".si9":"image/vnd.lgtwap.sis" , ".sis":"application/vnd.symbian.install" , ".sit":"application/x-stuffit" , ".skd":"application/x-Koan" , ".skm":"application/x-Koan" , ".skp":"application/x-Koan" , ".skt":"application/x-Koan" , ".slc":"application/x-salsa" , ".smd":"audio/x-smd" , ".smi":"application/smil" , ".smil":"application/smil" , ".smp":"application/studiom" , ".smz":"audio/x-smd" , ".snd":"audio/basic" , ".spc":"application/x-pkcs7-certificates" , ".spl":"application/futuresplash" , ".spr":"application/x-sprite" , ".sprite":"application/x-sprite" , ".sdp":"application/sdp" , ".spt":"application/x-spt" , ".src":"application/x-wais-source" , ".sst":"application/vnd.ms-pkicertstore" , ".stk":"application/hyperstudio" , ".stl":"application/vnd.ms-pkistl" , ".stm":"text/html" , ".svg":"image/svg+xml" , ".sv4cpio":"application/x-sv4cpio" , ".sv4crc":"application/x-sv4crc" , ".svf":"image/vnd" , ".svg":"image/svg+xml" , ".svh":"image/svh" , ".svr":"x-world/x-svr" , ".swf":"application/x-shockwave-flash" , ".swfl":"application/x-shockwave-flash" , ".t":"application/x-troff" , ".tad":"application/octet-stream" , ".talk":"text/x-speech" , ".tar":"application/x-tar" , ".taz":"application/x-tar" , ".tbp":"application/x-timbuktu" , ".tbt":"application/x-timbuktu" , ".tcl":"application/x-tcl" , ".tex":"application/x-tex" , ".texi":"application/x-texinfo" , ".texinfo":"application/x-texinfo" , ".tgz":"application/x-compressed" , ".thm":"application/vnd.eri.thm" , ".tif":"image/tiff" , ".tiff":"image/tiff" , ".tki":"application/x-tkined" , ".tkined":"application/x-tkined" , ".toc":"application/toc" , ".toy":"image/toy" , ".tr":"application/x-troff" , ".trk":"x-lml/x-gps" , ".trm":"application/x-msterminal" , ".tsi":"audio/tsplayer" , ".tsp":"application/dsptype" , ".tsv":"text/tab-separated-values" , ".ttf":"application/octet-stream" , ".ttz":"application/t-time" , ".txt":"text/plain" , ".uls":"text/iuls" , ".ult":"audio/x-mod" , ".ustar":"application/x-ustar" , ".uu":"application/x-uuencode" , ".uue":"application/x-uuencode" , ".vcd":"application/x-cdlink" , ".vcf":"text/x-vcard" , ".vdo":"video/vdo" , ".vib":"audio/vib" , ".viv":"video/vivo" , ".vivo":"video/vivo" , ".vmd":"application/vocaltec-media-desc" , ".vmf":"application/vocaltec-media-file" , ".vmi":"application/x-dreamcast-vms-info" , ".vms":"application/x-dreamcast-vms" , ".vox":"audio/voxware" , ".vqe":"audio/x-twinvq-plugin" , ".vqf":"audio/x-twinvq" , ".vql":"audio/x-twinvq" , ".vre":"x-world/x-vream" , ".vrml":"x-world/x-vrml" , ".vrt":"x-world/x-vrt" , ".vrw":"x-world/x-vream" , ".vts":"workbook/formulaone" , ".wav":"audio/x-wav" , ".wax":"audio/x-ms-wax" , ".wbmp":"image/vnd.wap.wbmp" , ".wcm":"application/vnd.ms-works" , ".wdb":"application/vnd.ms-works" , ".web":"application/vnd.xara" , ".wi":"image/wavelet" , ".wis":"application/x-InstallShield" , ".wks":"application/vnd.ms-works" , ".wm":"video/x-ms-wm" , ".wma":"audio/x-ms-wma" , ".wmd":"application/x-ms-wmd" , ".wmf":"application/x-msmetafile" , ".wml":"text/vnd.wap.wml" , ".wmlc":"application/vnd.wap.wmlc" , ".wmls":"text/vnd.wap.wmlscript" , ".wmlsc":"application/vnd.wap.wmlscriptc" , ".wmlscript":"text/vnd.wap.wmlscript" , ".wmv":"audio/x-ms-wmv" , ".wmx":"video/x-ms-wmx" , ".wmz":"application/x-ms-wmz" , ".wpng":"image/x-up-wpng" , ".wps":"application/vnd.ms-works" , ".wpt":"x-lml/x-gps" , ".wri":"application/x-mswrite" , ".wrl":"x-world/x-vrml" , ".wrz":"x-world/x-vrml" , ".ws":"text/vnd.wap.wmlscript" , ".wsc":"application/vnd.wap.wmlscriptc" , ".wv":"video/wavelet" , ".wvx":"video/x-ms-wvx" , ".wxl":"application/x-wxl" , ".x-gzip":"application/x-gzip" , ".xaf":"x-world/x-vrml" , ".xar":"application/vnd.xara" , ".xbm":"image/x-xbitmap" , ".xdm":"application/x-xdma" , ".xdma":"application/x-xdma" , ".xdw":"application/vnd.fujixerox.docuworks" , ".xht":"application/xhtml+xml" , ".xhtm":"application/xhtml+xml" , ".xhtml":"application/xhtml+xml" , ".xla":"application/vnd.ms-excel" , ".xlc":"application/vnd.ms-excel" , ".xll":"application/x-excel" , ".xlm":"application/vnd.ms-excel" , ".xls":"application/vnd.ms-excel" , ".xlsx":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" , ".xlt":"application/vnd.ms-excel" , ".xlw":"application/vnd.ms-excel" , ".xm":"audio/x-mod" , ".xml":"text/plain", ".xml":"application/xml", ".xmz":"audio/x-mod" , ".xof":"x-world/x-vrml" , ".xpi":"application/x-xpinstall" , ".xpm":"image/x-xpixmap" , ".xsit":"text/xml" , ".xsl":"text/xml" , ".xul":"text/xul" , ".xwd":"image/x-xwindowdump" , ".xyz":"chemical/x-pdb" , ".yz1":"application/x-yz1" , ".z":"application/x-compress" , ".zac":"application/x-zaurus-zac" , ".zip":"application/zip" , ".json":"application/json"&#125; model/getmime.js 123456789101112exports.getMime=function(extname)&#123; /*获取后缀名的方法*/ switch (extname)&#123; case '.html': return 'text/html'; case '.css': return 'text/css'; case '.js': return 'text/javascript'; default: return 'text/html'; &#125;&#125; model/getmimefromfile_bac.js 1234567891011121314151617exports.getMime=function(fs,extname)&#123; /*获取后缀名的方法*/ //.html console.log('1'); fs.readFile('./mime.json',function(err,data)&#123; if(err)&#123; console.log('mime.json文件不存在'); return false; &#125; //console.log(data.toString()); var Mimes=JSON.parse(data.toString()); //console.log(Mimes[extname]); console.log('2'); return Mimes[extname] || 'text/html'; &#125;) console.log('3');&#125;// 1 3 undefined model/getmimefromfile.js 1234567exports.getMime=function(fs,extname)&#123; /*获取后缀名的方法*/ //把读取数据改成同步 var data=fs.readFileSync('./mime.json'); //Sync解决异步问题 //console.log(data.toString()); 转换成json字符串 var Mimes=JSON.parse(data.toString()); /*把json字符串转换成json对象*/ return Mimes[extname] || 'text/html';&#125;]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[08_Arrow_Function]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-08-Arrow-Function%2F</url>
    <content type="text"><![CDATA[08-Arrow Function 箭头函数 1、 Arrow Function 123function sayHi() &#123; console.log('Hello world')&#125; 1234const sayHi = user =&gt; &#123; console.log('Hello world ' + user)&#125;sayHi('danny'); 2、 fix ‘this’ problem (function在对象里叫method) 12345678var person = &#123; name: 'Danny', gender: 'male', testing: function() &#123; console.log(this) &#125;&#125;person.testing() 1&#123; name: 'Danny', gender: 'male', testing: [Function: testing] &#125; ES6: this returns to person object 12345678910var person = &#123; name: 'Danny', gender: 'male', testing: function() &#123; (() =&gt; &#123; console.log(this) &#125;)() &#125;&#125;person.testing() 3、arrow function不能来做constructor 12345678910111213141516171819function Person(first, last) &#123; this.firstName = first; this.lastName = last;&#125;class Person &#123; constructor(first, last) &#123; this.firstName = first; this.lastName = last; &#125;&#125;let Person = (first, last) =&gt; &#123; // wrong this.firstName = first, this.lastName = last&#125;var danny = new Person('danny', 'huang')console.log('danny', danny)]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[07_Array_Cardio]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-07-Array-Cardio%2F</url>
    <content type="text"><![CDATA[07-Array Cardio处理Array forEach map Filter Reduce 1234567891011121314151617181920212223242526272829303132const users = [ &#123; id: 1, name: 'Allison', age: 4, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 1, gender: 'male' &#125;, &#123; id: 3, name: 'Irene', age: 35, gender: 'female' &#125;, &#123; id: 4, name: 'Danny', age: 32, gender: 'male' &#125;, &#123; id: 5, name: 'Alin', age: 25, gender: 'female' &#125;,] 1、forEach： log each name 123users.forEach((user) =&gt; &#123; console.log(user.name)&#125;) 12345AllisonDerekIreneDannyAlin 把每个user age乘以2 1234users.forEach((user, index) =&gt; &#123; return users[index].age = user.age * 2&#125;)console.log('users', users) 12345users [ &#123; id: 1, name: 'Allison', age: 8, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 2, gender: 'male' &#125;, &#123; id: 3, name: 'Irene', age: 70, gender: 'female' &#125;, &#123; id: 4, name: 'Danny', age: 64, gender: 'male' &#125;, &#123; id: 5, name: 'Alin', age: 50, gender: 'female' &#125; ] 2、map log username 1users.map(user =&gt; console.log(user.name))//只有一个参数不需要(),只有一行不需要&#123;&#125; 12345AllisonDerekIreneDannyAlin 把每个user age乘以2 12345678910let doubled = users.map((user) =&gt; &#123; let tempObj = &#123;&#125; // tempObj不能直接=，要复制，因为tempObj是reference tempObj = &#123;...user&#125; tempObj.age = user.age * 2 return tempObj&#125;)console.log('doubled', doubled)console.log('users', users)// map won't change original array// foreach will change original array 12345678910doubled [ &#123; id: 1, name: 'Allison', age: 8, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 2, gender: 'male' &#125;, &#123; id: 3, name: 'Irene', age: 70, gender: 'female' &#125;, &#123; id: 4, name: 'Danny', age: 64, gender: 'male' &#125;, &#123; id: 5, name: 'Alin', age: 50, gender: 'female' &#125; ]users [ &#123; id: 1, name: 'Allison', age: 4, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 1, gender: 'male' &#125;, &#123; id: 3, name: 'Irene', age: 35, gender: 'female' &#125;, &#123; id: 4, name: 'Danny', age: 32, gender: 'male' &#125;, &#123; id: 5, name: 'Alin', age: 25, gender: 'female' &#125; ] map不会改变原来的array，但是forEach会改变原来的array。 3、Filter 只要age低于18 123456let kids = users.filter((user) =&gt; &#123; let tempObj = &#123;&#125; tempObj = &#123;...user&#125; return tempObj.age &lt; 18&#125;)console.log('kids',kids); 12kids [ &#123; id: 1, name: 'Allison', age: 4, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 1, gender: 'male' &#125; ] Only female 123456let female = users.filter((user) =&gt; &#123; let tempObj = &#123;&#125; tempObj = &#123;...user&#125; return tempObj.gender === 'female'&#125;)console.log('female', female) 123female [ &#123; id: 1, name: 'Allison', age: 4, gender: 'female' &#125;, &#123; id: 3, name: 'Irene', age: 35, gender: 'female' &#125;, &#123; id: 5, name: 'Alin', age: 25, gender: 'female' &#125; ] 4、Reduce 最常用就是把数组中的数字加在一起 123456789let totalAge = users.reduce((acc, obj) =&gt; &#123; return acc + obj.age&#125;, 0) //第一个值acc设为0// 0 + 4 = 4// 4 + 1 = 5// 5 + 35 = 40// 40 + 32 = 72// 72 + 25 = 97console.log(totalAge); //97]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[06_Promise]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-06-Promise%2F</url>
    <content type="text"><![CDATA[06-Node.js Promise处理异步 一、同步与异步 Async = 非同步 sync = 同步 synchronous = one at a time 第一个执行完才执行下一个 Asynchronous = more one at a time 执行了就马上换下一个指令 二、Async Actions click、Ajax、Setlnterval 解决方法：callback、Promise、Async await 1、callback callbak是一个function里面的function 12345var proveIt = function()&#123; alert('you triggered'+this.id);&#125;document.getElementById('clicker').addEventListener('click',proveIt);// click之后就执行proveIt这个function 2、Promise ES6 return resolve or reject ES6 Promise的实例，会确保Promise一实例化后就固定住状态，要不就是“已实现”，要不就是“已拒绝”。 123456789const promise = new Promise(function(resplve,reject)&#123; resolve(value); // 成功时 reject(reason); // 失败时&#125;);promise.then(function(value)&#123; // 已实现时&#125;,function(reason)&#123; // 已拒绝时&#125;); Examples: SetInterval 1234567891011121314// console.log(Math.floor(Math.random()*100)+1);// console.log(Math.random());function logWord(word)&#123; setTimeout(function()&#123; console.log(word); &#125;,Math.floor(Math.random()*100)+1);&#125;function logAll()&#123; logWord('1'); logWord('2'); logWord('3');&#125;logAll();//每一次结果都不一样，因为是异步 SetInterval是异步的，所以它执行了第一个指令就会马上执行下一个，所以顺序不会固定。 (1) 解决方法：callback 1234567891011121314function logWord(word,callback)&#123; setTimeout(function()&#123; console.log(word); callback(); &#125;,Math.floor(Math.random()*100+1));&#125;function logAll()&#123; logWord('1',function()&#123; logWord('2',function()&#123; logWord('3',function()&#123;&#125;) &#125;) &#125;)&#125;logAll(); Callbak Hell：callback要debug建议用console.log callback一直callback下去，如果中间哪个环节错了，很难让人debug。 (2) 解决方法：Promise 1234567891011121314151617function logWord(word)&#123; return new Promise(function(resolve,reject)&#123; setTimeout(function()&#123; console.log(word); resolve(); &#125;,Math.floor(Math.random()*100+1)); &#125;);&#125;function logAll()&#123; logWord('1') .then(function()&#123; return logWord('2'); &#125;).then(function()&#123; return logWord('3'); &#125;)&#125;logAll(); Promise可以写得更简洁一点，ES6有一个箭头函数，所以还可以这么写： 12345function logAll()&#123; logWord('1') .then(()=&gt;logWord('2')) .then(()=&gt;logWord('3'))&#125;]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[05_Fs_Module]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-05-Fs-Module%2F</url>
    <content type="text"><![CDATA[05-Node.js fs模块 fs.stat 检测是文件还是目录 fs.mkdir 创建目录 fs.writeFile 创建写入文件 fs.appendFile 追加文件 fs.readFile 读取文件 fs.readdir 读取目录 fs.rename 重命名 fs.rmdir 删除目录 fs.unlink 删除文件 fs.createReadStream 从文件流中读取数据 fs.createWriteStream 写入文件 管道流 1、fs.stat 检测是文件还是目录 12345678910const fs = require('fs') fs .stat('hello.js',(error,stats) =&gt;&#123; if(error)&#123; console.log(error) &#125;else&#123; console.log(stats) console.log(`文件：$&#123;stats.isFile()&#125;`) console.log(`目录：$&#123;stats.isDirectory()&#125;`) &#125; &#125;) 12345678910111213141516171819202122&gt; node testStats &#123; dev: 315831262, mode: 33206, nlink: 1, uid: 0, gid: 0, rdev: 0, blksize: undefined, ino: 2533274790764158, size: 17, blocks: undefined, atimeMs: 1553754246606.595, mtimeMs: 1553754257410.068, ctimeMs: 1553754257410.068, birthtimeMs: 1553754246606.595, atime: 2019-03-28T06:24:06.607Z, mtime: 2019-03-28T06:24:17.410Z, ctime: 2019-03-28T06:24:17.410Z, birthtime: 2019-03-28T06:24:06.607Z &#125;文件：true目录：false 2、fs.mkdir 创建目录 123456789const fs = require ('fs') fs.mkdir('logs', (error) =&gt; &#123; if(error)&#123; console.log(error) &#125;else&#123; console.log('成功创建目录：logs') &#125;&#125;) // 创建logs目录（在同一目录下） 3、fs.writeFile 创建写入文件 如果不存在就创建，已经存在会覆盖 123456789const fs = require ('fs') fs.writeFile('logs/hello.log','您好~\n',(error)=&gt;&#123; if(error)&#123; console .log(error) &#125;else&#123; console .log('成功写入文件') &#125; &#125;) // 在logs目录下创建了hello.log文件，内容为'您好~' 4、fs.appendFile 追加文件 如果文件不存在就创建，如果存在就追加内容 123456789const fs = require ('fs') fs.appendFile('logs/hello.log','hello~\n',(error)=&gt;&#123; if(error)&#123; console .log(error) &#125;else&#123; console .log('成功写入文件') &#125; &#125;) // 在logs目下的hello.log文件中追加内容'hello~' 5、fs.readFile 读取文件 12345678const fs = require ('fs') fs.readFile('logs/hello.log','utf8',(error,data)=&gt;&#123; if(error)&#123; console .log(error) &#125;else&#123; console .log(data) &#125;&#125;) 123&gt;node test您好~hello~ 6、fs.readdir 读取目录 拿到一个文件夹下面的所有目录和文件 12345678const fs = require('fs') fs.readdir('logs',(error,files)=&gt;&#123; if(error)&#123; console.log(error) &#125;else&#123; console.log(files) &#125;&#125;) 12&gt; node test[ 'hello.log' ] 7、fs.rename 重命名 123456789const fs = reuiure('fs');fs.rename('logs/hello.log','logs/haha.log',function(err)&#123; if(err)&#123; console.log(err); return false; &#125; console.log('重命名成功');&#125;)// logs目录下的hello.log文件重命名为haha.log 可以用作剪切功能 123456789const fs = require('fs');fs.rename('html/css/basic.css','html/style.css',function(err)&#123; if(err)&#123; console.log(err); return false; &#125; console.log('剪切成功');&#125;)// html/css目录下的basic.css被剪切到style.css中（basic.css不见了，style.css存在，但内容变为原来basic.css中的内容） 8、fs.rmdir 删除目录 12345678910const fs = require('fs');const fs = require('fs');fs.rmdir('logs',(error)=&gt;&#123; if(error) &#123; console.log(error) &#125;else&#123; console.log('成功的删除了目录：logs') &#125; &#125;)// 只有当logs目录下为空（没有任何文件和目录时才可被删除) 9、fs.unlink 删除文件 123456789const fs = require('fs');var file = 'haha.log';fs.unlink(`logs/$&#123;file&#125;`,(error)=&gt;&#123; if(error)&#123; console.log(error) &#125;else&#123; console.log(`成功的删除了文件: $&#123;file&#125;`) &#125; &#125;) 12&gt;node test成功的删除了文件: haha.log 10、fs.createReadStream 以文件流的方式读取数据 12345678910111213141516171819const fs = require ('fs') var fileReadStream = fs.createReadStream('data.json') let count =0; var data =''; // 处理事件流：data、end、errorfileReadStream.on('data',(chunk)=&gt;&#123; console.log(`$&#123; ++ count &#125; 接收到：$&#123;chunk.length&#125;`); data +=chunk &#125;) fileReadStream .on('end',()=&gt;&#123; console.log('--- 结束 ---'); console.log( count ); console.log( data );&#125;) fileReadStream.on('error',(error)=&gt;&#123; console.log(error) &#125;) 12345678910111213141516const fs = require('fs');var readStream = fs.createReadStream('input.txt');var data = ''; // 保存数据var count = 0;// 处理事件流：data、end、errorreadStream.on('data',function(chunk)&#123; data+=chunk; count++;&#125;);readStream.on('end',function(chunk)&#123; console.log(count); // 用文件流的方式读取，文件比较小的时候读取一次就读完了；文件比较大的时候，要读取多次 console.log(data);&#125;)readStream.on('error',function(err)&#123; console.log(err);&#125;) 11、fs.createWriteStream 以文件流的方式写入文件 1234567891011121314const fs = require('fs');var data = '我是从数据库获取的数据，我要保存进文件里\n';// 创建一个可写入的流，写入到文件output.txtvar writeStream = fs.createWriteStream('output.txt');for(let i=0;i&lt;100;i++)&#123; writeStream.write(data,'utf8'); // 写入数据&#125;writeStream.end(); // 标记写入完成writeStream.on('finish',function()&#123; // finish与end配对才有用 console.log('写入完成');&#125;)writeStream.on('error',function()&#123; console.log('写入失败');&#125;) 12、readStream.pipe(writeStream) 以管道流的方式读取文件和写入文件 管道提供了一个输出流到输入流的机制。通常我们用于从一个流中获取数据并将数据传 递到另外一个流中。 我们把文件比作装水的桶，而水就是文件里的内容，我们用一根管子(pipe)连接两个桶使得水从一个 桶(source)流入另一个桶(dest)，这样就慢慢的实现了大文件的复制过程。 以下实例我们通过读取一个文件内容并将内容写入到另外一个文件中。 12345678const fs = require('fs');// 创建一个可读流var readStream = fs.createReadStream('input.txt');// 创建一个可写流var writeStream = fs.createWriteStream('output.txt');// 管道读写操作:读取input.txt文件内容，并将内容写入到output.txt文件中readStream.pipe(writeStream);console.log('程序执行完毕'); 练习 1、判断服务器上面有没有upload目录，如果没有的话就创建这个目录(一般用于图片上传，要上传到一个目录，如果不存在就要创建)： 1234567891011121314151617const fs = require('fs');fs.stat('upload',function(err,stats)&#123; if(err)&#123; // 目录不存在 --&gt; 如果不存在就要执行创建操作 // console.log(err); // return false; fs.mkdir('upload',function(error)&#123; if(error)&#123; console.log(error); return false; &#125; console.log('创建成功'); //如果没有此目录就创建此目录 &#125;); &#125;else&#123; console.log('目录已经存在'); console.log(stats.isDirectory()); &#125;&#125;); 12345&gt; node test创建成功&gt; node test目录已经存在true 2、找出html目录下面的所有目录并打印出来： 1234567891011121314151617const fs = require('fs');fs.readdir('html',function(err,files)&#123; if(err)&#123; console.log(err); &#125;else&#123; //拿到html目录下的所有文件和目录 // console.log(files); // 判断是目录还是文件 for(let i=0;i&lt;files.length;i++)&#123; // for循环遍历所有目录文件 console.log(files[i]); // 这里打印，files[i]就是存在的 fs.stat(files[i],function(error,stats)&#123; //判断是目录还是文件 // fs.stat是异步，先打印一下files[i] console.log(files[i]); //undefined // 你没法在这里拿到files[i],这是错误的写法 &#125;) &#125; &#125;&#125;); 正确写法：匿名自执行函数 123456789101112131415161718192021var filesArr = [];fs.readdir('html',function(err,files)&#123; if(err)&#123; console.log(err); return false; &#125;else&#123; // 判断是目录还是文件夹 console.log(files); // 数组：包含目录下所有目录和文件 (function getFile(i)&#123; if(i==files.length)&#123; console.log(filesArr); // 打印出所有的目录 return false; &#125; fs.stat('html/'+files[i],function(error,stats)&#123; if(stats.isDirectory())&#123; // 如果是目录 filesArr.push(files[i]); // 就保存数据 &#125; getFile(i+1); // 递归调用 &#125;) &#125;)(0) // 立即执行函数 &#125;&#125;) 解决异步问题 nodejs 是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高，nodejs的每一个api都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。 我们经常使用的File的readFile事件就是一个并发事件。 123456console.log("1");fs.readFile("mime.json",function (err,data) &#123; console.log(data); console.log('2');&#125;);console.log("3"); 代码的执行顺序是1-3-2；但是我们很多时候会需要1-2-3的方式去执行方法，这个时候我们可以通过以下三种方式去解决这个问题： 1、将readFile改成同步方法。即readFile–&gt;readFileSync 12const fsSync = fs.readFileSync('./mime.json');const mimeObj = JSON.parse(fsSync.toString()); 2、通过回调的方式解决 123456789101112console.log("1");function getMime(callback)&#123; fs.readFile("mime.json",function (err,data) &#123; // console.log(data.toString()); callback(data.toString()) ; console.log("2"); &#125;);&#125;getMime(function (result) &#123; console.log(result); console.log("3");&#125;); 3、nodejs 有多个内置的事件，我们可以通过引入events模块，并通过实例化eventEmitter类来绑定和监听事件，通过事件驱动的方式解决异步的问题，也可以说成是广播或者订阅。 广播和接收广播 ---- 订阅和通知： 1234567891011const events = require("events");const eventEmitter = new events.EventEmitter();//监听广播eventEmitter.on('to_parent',function () &#123; //接受到了广播事件 console.log("接受到了广播事件")&#125;);setTimeout(function () &#123; console.log("开始广播"); eventEmitter.emit("to_parent","发送数据");&#125;,2000); 在readFIle中这样使用： 12345678910111213console.log("1");function getMime()&#123; fs.readFile("mime.json",function (err,data) &#123; eventEmitter.emit("to_parent",data); console.log("2"); &#125;);&#125;getMime();eventEmitter.on('to_parent',function (data) &#123; //接受到了广播事件 console.log("接受到了广播事件") console.log("3");&#125;); 4、使用Promise方法—略 Promise 是一种对异步操作的封装，可以通过独立的接口添加在异步操作执行成功、失败时执行的方法。主流的规范是 Promises/A+。 Promise中有几个状态： pending: 初始状态, 非 fulfilled 或 rejected； fulfilled: 成功的操作，为表述方便，fulfilled 使用 resolved 代替； rejected: 失败的操作。 pending可以转化为fulfilled或rejected并且只能转化一次，也就是说如果pending转化到fulfilled状态，那么就不能再转化到rejected。并且fulfilled和rejected状态只能由pending转化而来，两者之间不能互相转换。 Promise的基本语法 Promise实例必须实现then这个方法 then()必须可以接收两个函数作为参数 then()返回的必须是一个Promise实例 5、async/await方法]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[04_npm]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-04-npm%2F</url>
    <content type="text"><![CDATA[04-包与npm、第三方模块安装、package.json、cnpm 一、包与 NPM 1、包 Nodejs 中除了它自己提供的核心模块外，我们可以自定义模块，也可以使用第三方的模块。Nodejs 中第三方模块由包组成，可以通过包来对一组具有相互依赖关系的模块进行统一管理。 完全符合 CommonJs 规范的包目录一般包含如下这些文件。 • package.json :包描述文件。 • bin :用于存放可执行二进制文件的目录。 • lib :用于存放 JavaScript 代码的目录。 • doc :用于存放文档的目录。 在 NodeJs 中通过 NPM 命令来下载第三方的模块（包）。 123npm i silly-datetime –save var sd = require('silly-datetime'); sd.format(new Date(), 'YYYY-MM-DD HH:mm'); 2、NPM介绍 npm是世界上最大的开放源代码的生态系统。我们可以通过npm下载各种各样的包， 这些源代码（包）我们可以在 https://www.npmjs.com 找到。 npm 是随同 NodeJS 一起安装的包管理工具，能解决 NodeJS 代码部署上的很多问题， 常见的使用场景有以下几种： 允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。(silly-datetime) 允许用户从 NPM 服务器下载并安装别人编写的命令行程序(工具)到本地使用。 （supervisor） 允许用户将自己编写的包或命令行程序上传到 NPM 服务器供别人使用。 二、NPM 命令详解。 123456npm -v // 查看npm版本npm install moduleName //安装模块 npm uninstall moudleName //卸载模块 npm list //查看当前目录下已安装的node包npm info jquery //查看jquery的版本 npm install jquery@1.8.0 //指定版本安装 三、package.json 1、创建 package.json 12npm init npm init –yes //yes表示一路默认创建，还有 -f表示force 2、package.json 文件就是一个JSON对象，该对象的每一个成员就是当前项目的一项设置。 123456789101112131415&#123; &quot;name&quot;: &quot;test&quot;, //项目名称&quot;version&quot;: &quot;1.0.0&quot;, //项目版本号&quot;description&quot;: &quot;test&quot;, &quot;main&quot;: &quot;main.js&quot;, &quot;keywords&quot;: [ &quot;test&quot; ], &quot;author&quot;: &quot;wade&quot;, &quot;license&quot;: &quot;MIT&quot;, &quot;dependencies&quot;: &#123; &quot;express&quot;: &quot;^4.10.1&quot; &#125;, &quot;devDependencies&quot;: &#123; &quot;jslint&quot;: &quot;^0.6.5&quot; &#125; &#125; 必须字段： 12name //项目名称version //项目版本号 可选字段 1234title //标题author //是一个人contributors //是一组人homepage // 3、安装模块并把模块写入 package.json(依赖) 123npm install babel-cli --save-dev npm install 模块 --save npm install 模块 --save-dev 12npm install -d 就是npm install --save-devnpm insatll -s 就是npm install --save Dependencies一词的中文意思是依赖和附属的意思，而dev则是develop（开发）的简写。 所以它们的区别在 package.json 文件里面体现出来的就是，使用 --save-dev 安装的插件，被写入到 devDependencies 域里面去，而使用 --save 安装的插件，则是被写入到 dependencies 区块里面去。 package.json 文件里面的 devDependencies 和 dependencies 对象有什么区别呢？devDependencies 里面的插件只用于开发环境，不用于生产环境，而 dependencies 是需要发布到生产环境的。 使用 npm i 安装package.json里的依赖时，两部分的包都会pull下来。 比如： 我们写一个项目要依赖于jQuery，没有这个包的依赖运行就会报错，这时候就把这个依赖写入dependencies ； 而我们使用的一些构建工具比如glup、webpack这些只是在开发中使用的包，上线以后就和他们没关系了，所以将它写入devDependencies。]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[03_user_defined_module]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-03-user-defined-module%2F</url>
    <content type="text"><![CDATA[03-CommonJS和Nodejs模块、自定义模块 一、什么是 CommonJs？ JavaScript 是一个强大的面向对象语言，它有很多快速高效的解释器。然而， JavaScript 标准定义的 API 是为了构建基于浏览器的应用程序。并没有制定一个用于更广泛的应用程序的标准库。CommonJS 规范的提出,主要是为了弥补当前 JavaScript 没有标准的缺陷。它的终 极目标就是：提供一个类似 Python，Ruby 和 Java 语言的标准库,而不只是停留在小脚本程序的阶段。用 CommonJS API 编写出的应用，不仅可以利用 JavaScript 开发客户端应用，而且还可以编写以下应用。 •服务器端 JavaScript 应用程序。 （nodejs） •命令行工具。 •桌面图形界面应用程序。 CommonJS 就是模块化的标准，nodejs就是 CommonJS（模块化）的实现。 二、Nodejs 中的模块化 Node 应用由模块组成，采用 CommonJS 模块规范。 1、 在 Node中，模块分为两类: 一类是 Node 提供的模块,称为核心模块；另一类是用户编写的模块，称为文件模块。 • 核心模块部分在 Node 源代码的编译过程中，编译进了二进制执行文件。在 Node 进程启动时，部分核心模块就被直接加载进内存中，所以这部分核心模块引入时，文件定位和编译执行这两个步骤可以省略掉，并且在路径分析中优先判断，所以它的加载速度是最快的。 如：HTTP 模块 、URL 模块、Fs模块都是 nodejs 内置的核心模块，可以直接引入使用。 • 文件模块则是在运行时动态加载，需要完整的路径分析、文件定位、编译执行过程、 速度相比核心模块稍微慢一些，但是用的非常多。这些模块需要我们自己定义。接下来我们看一下 nodejs 中的自定义模块。 2、CommonJS（Nodejs）中自定义模块的规定： （1）我们可以把公共的功能抽离成为一个单独的 js 文件作为一个模块，默认情况下面这 个模块里面的方法或者属性，外面是没法访问的。如果要让外部可以访问模块里面的方法或 者属性，就必须在模块里面通过exports或者module.exports暴露属性或者方法。 （2）在需要使用这些模块的文件中，通过require的方式引入这个模块。这个时候就可以 使用模块里面暴露的属性和方法。 3、 定义使用模块： tools.js 1234567891011121314// 定义一个 tools.js 的模块 // 模块定义 var tools = &#123; sayHello: function() &#123; return 'hello NodeJS'; &#125;, add: function(x, y) &#123; return x + y; &#125; &#125;; // 模块接口的暴露 // module.exports = tools ; exports.sayHello = tools.sayHello; exports.add = tools.add; 1234var http = require ('http'); // 引入自定义的 tools.js 模块 var tools= require ('./tools'); tools.sayHello(); //使用模块 两种方法：方法一 12345module.exports = tools;-----------------------var tools = require('./tools');tools.sayHello();tools.add(); ​ 方法二 123456exports.sayHello = tools.sayHello;exports.add = tools.add;---------------------------------var tools = require('./tools');tools.sayHello();tools.add(); 由此想到的构造一个模块的方法： 12345678910111213141516171819var tools = &#123; tools01:&#123; hello:function()&#123; console.log('hello'); &#125;, elaine:function()&#123; console.log('elaine'); &#125; &#125;, tools02 :&#123; hi:function()&#123; console.log('hi'); &#125;, hongkong:function()&#123; console.log('hongkong'); &#125; &#125;&#125;module.exports = tools; 123var tools = require('./01');tools.tools01.hello();tools.tools02.hi(); 三、npm init 生成 package.json 1npm init -y]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[02_http_module]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-02-http-module%2F</url>
    <content type="text"><![CDATA[02-Node.js—http模块、url模块、nodemon工具 一、Node.js创建第一个应用 1、引入http模块 1var http = require("http"); 2、创建服务器 接下来我们使用 http.createServer() 方法创建服务器，并使用 listen 方法绑定 8888 端口。 函数通过 request, response 参数来接收和响应数据。 server.js 1234567891011var http = require('http'); http.createServer(function (request, response) &#123; // 发送 HTTP 头部 // HTTP 状态值: 200 : OK //设置 HTTP 头部，状态码是 200，文件类型是 html，字符集是 utf8 response.writeHead(200,&#123;"Content-Type":"text/html;charset=UTF-8"&#125;); // 发送响应数据 "Hello World" res.end("哈哈哈哈，我买了一个 iPhone" + (1+2+3) + "s"); &#125;).listen(8888); // 终端打印如下信息 console.log('Server running at http://127.0.0.1:8888/'); 3、运行程序 用命令行切换到程序对应目录。通过 node 命令运行程序。 1node server.js 浏览器运行 : 127.0.0.1:8888 我们本地写一个 js，打死都不能直接拖入浏览器运行，但是有了 node，我 们任何一个 js 文件，都可以通过 node 来运行。也就是说，node 就是一个 js 的执行环境。 二、HTTP 模块、URL 模块 1234567891011//引用模块 var http = require("http"); //创建一个服务器，回调函数表示接收到请求之后做的事情 var server = http.createServer(function(req,res)&#123; //req 参数表示请求，res 表示响应 console.log("服务器接收到了请求" + req.url); res.end(); //End方法使Web服务器停止处理脚本并返回当前结果 &#125;); //监听端口 server.listen(3000,"127.0.0.1"); 设置一个响应头： 1res.writeHead(200,&#123;"Content-Type":"text/html;charset=UTF8"&#125;); 我们现在来看一下 req 里面能够使用的东西。 最关键的就是 req.url 属性，表示用户的请求 URL 地址。所有的路由设计，都是通过 req.url 来实现的。 我们比较关心的不是拿到 URL，而是识别这个 URL。 识别 URL，用到了下面的 url 模块 ： 123url.parse() //解析URL url.format(urlObject) //是上面 url.parse()操作的逆向操作 url.resolve(from, to) //添加或者替换地址 123456789101112131415//https://user:pass@sub.host.com:8080/p/a/t/h?query=string#hashUrl &#123; protocol: 'https:', // 协议 slashes: true, auth: 'user:pass', // 用户名密码 host: 'sub.host.com:8080', // host主机名 port: '8080', // 端口号 hostname: 'sub.host.com', // 主机名不带端口号 hash: '#hash', // 哈希值 search: '?query=string',// 查询字符串 query: 'query=string', // 请求参数 pathname: '/p/a/t/h', // 路径名 path: '/p/a/t/h?query=string', // 带查询的路径名 href: 'https://user:pass@sub.host.com:8080/p/a/t/h?query=string#hash' // 原字符串本身&#125; 1、url.parse() 例子1 1234567891011var http = require('http');http.createServer(function(req,res)&#123; console.log(req.url); res.writeHead(200,&#123;"Content-Type":"text/html;charset=UTF-8"&#125;); res.write('Hello World.'); res.end();&#125;).listen(8888);console.log('Server running at http://127.0.0.1:8888/');//输入localhost:8888 得到: / /favicon.ico//输入localhost:8888/news 得到: /news /favicon.ico//输入localhost:8888/news?aid=123 得到: /news?aid=123 /favicon.ico 例子2 12345678910111213var http = require('http');var url = require('url');http.createServer(function(req,res)&#123;// 输入localhost:8888/news?aid=123&amp;cid=3 拿到aid和cid// req.url 获取浏览器url输入的信息// url.parse()第二个参数是true的时候，表示把get传值转换成对象 console.log(url.parse(req.url,true).query.aid); // 获取url的get传值 console.log(url.parse(req.url,true).query.cid); // 获取url的get传值 res.writeHead(200,&#123;"Content-Type":"text/html;charset=UTF-8"&#125;); res.write('Hello World.'); res.end();&#125;).listen(8888);console.log('Server running at http://127.0.0.1:8888/'); 2、url.format(urlObject) 一般用不着 3、url.resolve() 12&gt;url.resolve(&apos;http://example.com/&apos;,&apos;/one&apos;);&apos;http://example.com/one&apos; 三、Nodejs自启动工具nodemon 1、全局安装nodemon 1npm install -g nodemon 2、使用 以前要么是 node app，要么是npm start，有了nodemon以后，启动程序直接进入根目录，nodemon就可以了。 修改文件后，会自动重启。]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[01_nodejs_introduction]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-01-nodejs-introduction%2F</url>
    <content type="text"><![CDATA[01-Node.js介绍 😊Node.js 是一个 Javascript 运行环境(runtime)。它让 JavaScript 可以开发后端程序，实现几乎其他后端语言实现的所有功能，可以与 PHP、JSP、Python、Ruby 等后端语言平起平坐。 Nodejs 是基于 V8 引擎，V8 是 Google 发布的开源 JavaScript 引擎，本身就是用于 Chrome 浏览器 的 JS 解释部分，但是 Ryan Dahl 这哥们，鬼才般的，把这个 V8 搬到了服务器上，用于做服务器的软件。 短短几年的时间，Node 取得了巨大的成功。在企业界，Node 的应用也越来越广泛，2016 年 nodeJS 官方的调查报告。2016 年全球有 350 万开发者使用 nodeJS,相比去年保持了 100%的增长率。像 Yahoo、Microsoft 这样的大公司，有好多应用已经迁移到 Node 了。国内的阿里巴巴、网易、腾讯、新浪、百度等公司的很多线上产品也纷纷改用 Node 开发，并取得了很好的效果。据统计很多 A 轮、 B 轮的创业公司更喜欢使用 NodeJs 开发。 一、Node.js的优势 Node 打破了过去 JavaScript 只能在浏览器中运行的局面。前后端编程环境统一，可以大大降低开发成本。 超强的高并发能力：Node.js 的首要目标是提供一种简单的、用于创建高性能服务器及可在该服务器中运行的各种应用程序的开发工具。 在 Java、PHP 或者.net 等服务器端语言中，会为每一个客户端连接创建一个新的线程。而每个线程需要耗费大约 2MB 内存。也就是说，理论上，一个 8GB 内存的服务器可以同时连接的最大用户数为 4000 个左右。要让 Web 应用程序支持更多的用户，就需要增加服务器的数量，而 Web 应用程序的硬件成本当然就上升了。 Node.js 不为每个客户连接创建一个新的线程，而仅仅使用一个线程。当有用户连接了，就触发一个 内部事件，通过非阻塞 I/O、事件驱动机制，让 Node.js 程序宏观上也是并行的。使用 Node.js，一个 8GB 内存的服务器，可以同时处理超过 4 万用户的连接。 实现高性能服务器 ：严格地说，Node.js 是一个用于开发各种Web 服务器的开发工具。在 Node.js 服务器中，运行的是高性能 V8 JavaScript 脚本语言，该语言是一种可以运行在服务器端的 JavaScript 脚本语言。 那么，什么是 V8 JavaScript 脚本语言呢？该语言是一种被 V8 JavaScript 引擎所解析并执行的脚本语言。V8 JavaScript 引擎是由 Google 公司使用 C++语言开发的一种高性能 JavaScript 引擎，该引擎并不局限于在浏览 器中运行。Node.js 将其转用在了服务器中，并且为其提供了许多附加的具有各种不同用途的 API。例如， 在一个服务器中，经常需要处理各种二进制数据。在 JavaScript 脚本语言中，只具有非常有限的对二进制数 据的处理能力，而 Node.js 所提供的 Buffer 类则提供了丰富的对二进制数据的处理能力。 另外，在V8 JavaScript 引擎内部使用一种全新的编译技术。这意味着开发者编写的高端的 JavaScript 脚本代 码与开发者编写的低端的C语言具有非常相近的执行效率，这也是Node.js 服务器可以提供的一个重要特性。 开发周期短、开发成本低、学习成本低：Node.js 自身哲学，是花最小的硬件成本，追求更高的并发，更高的处理性能。 二、Node.js适合做什么？ 前后端编程语言环境统一。这类代表是雅虎。雅虎开放了 Cocktai 框架，利用自己深厚的前端沉淀，将 YUI3 这个前端框架的能力借助 Node 延伸到服务器端，使得使用者摆脱了日常工作中一边写 JavaScript—边写 PHP 所帯来的上下文交换负担。 Node带来的高性能 I/0 用于实时应用。Voxer 将 Node应用在实时语音上。国内腾讯的朋友网将 Node 应用在长连接中，以提供实时功能，花瓣网、蘑菇街等公司通过 socket.io 实现实时通知的功能。 并行 I/0 使得使用者可以更高效地利用分布式环境。阿里巴巴 eBay 是这方面的典型。 阿里巴巴的NodeFox和eBay的ql.io都是借用Node 并行 I/O 的能力，更高效地使用已有的数据。 并行 I/O •有效利用稳定接口提升Web渲染能力。雪球财经和 Linkedln 的移动版网站均是这种案例，撇弃同步等待式的顺序请求，大胆采用并行丨/〇，加速数据的获取进而提升 Web 的渲染速度。 云计算平台提供 Node 支持。微软将 Node 引入 Azure 的开发中，阿里云、百度均纷纷 在云服务器上提供 Node 应用托管服务，Joyent 更是云计算中提供 Node 支持的代表。这类平台看重 JavaScript 带来的开发上的优势，以及低资源占用、高性能的特点。 游戏开发领域。游戏领域对实时和并发有很高的要求，网易开源了 pomelo 实时框架， 可以应用在游戏和高实时应用中。 工具类应用。过去依赖 java 或其他语言构建的前端工具类应用，纷纷被一些前端工程 师用 Node 重写，用前端熟悉的语言为前端构建熟悉的工具。 三、Node.js环境搭建 Node.js 和 Java 非常像，跨平台的。不管是 Linux 还是 windows 编程是完全一致的（有一些不一样，比如路径的表述）。Linux 版本的 Node.js 环境和 windows 环境是不一样的，但是编程语言一样。 安装完成后，win+R:cmd—&gt;输入node --version (记得配置path) 四、Node.js开发工具配置 工欲善其事必先利其器，我选择的是VSCode，因为它强大的插件。微软有 Visual Studio这个宇宙最强IDE，Visual Studio Code 自然也不会弱(宇宙最强编辑器)，下面介绍一些VSCode中好用的插件： 1、代码片段(Snippet)插件 当你要从事更加前沿的开发的时候，你就需要一些额外的代码片段插件来辅助你编写ES6/ES7代码。 VS Code JavaScript(ES6) snippets：它是如今最流行的，安装了超过120万的插件。该插件为JavaScript、TypeScript、HTML、React和Vue提供了ES6语法支持。 JavaScript Snippet Pack：JavaScript代码片段集合。 Atom JavaScript Snippet：从Atom移植过来的JavaScript代码片段。 JavaScript Snippets：ES6代码片段，并且包含Mocha、Jasmine和其它BDD测试框架的代码片段。 2、语法插件 VS Code自带的针对JavaScript的语法高亮已经相当不错。你可以安装不同的主题来改变代码的颜色。不过，如果你想要更好的可读性，可以安装代码高亮插件。这里有一些推荐： JavaScript Atom Grammar：该插件将Visual Studio Code自带的JavaScript语法替换成了Atom编辑器的版本。 Babel JavaScript：支持 ES201x JavaScript、React、FlowType和GraphQL代码的语法高亮。 DotENV：如果你使用Node，你需要它。DotEnv提供.env文件的语法高亮。 3、码风格检查插件 为了保证整个团队代码格式的一致性，使用一个代码风格检查工具可以做到。ESLint是最流行的一个工具，因为它支持非常多的代码风格，包括标准的、Google和Airbnb。下面列出一些推荐的插件： ESLint：这个是最流行的代码风格检查插件，有超过670万的安装量。你可以在.eslintrc.json中配置。 JSHint：JSHint的代码风格检查插件。在项目的根目录下面，用.jshintrcfile配置。 JavaScript Standard Style: 一个无需配置的自带非常严格规则的代码风格检查插件。它强制要求你所有代码要遵循标准规则。 JSLint：JSLint的代码风格检查插件。 如果你想要了解各个插件的优缺点，可以看看这篇博客JavaScript代码风格检查插件大评比。 4、Node插件 每一个JavaScript项目至少需要安装一个Node包。这里推荐一些针对Node的插件： npm：使用package.json来验证已经安装的模块，确保已经安装的模块版本号正确，标记那些安装了但是没有在package.json列出来的包，以及那些还没有安装的包。 Node.js Modules IntelliSense：为JavaScript和TypeScript模块自动补全import语句。 Path IntelliSense：虽然并不是真的和Node相关，这个插件可以自动补全文件名，可以在输入时对本地文件进行智能提示。 Node exec：运行你执行当前的Node文件或者选中的部分代码。 View Node Package：通过此插件可以快速查看一个Node包的源代码。 Node Readme：快速打开npm包文档。 Search node_modules：搜索node_modules里面的代码，标准的搜索是不会包含该文件夹的。 Import Cost：显示引入的包的大小 5、代码格式化插件 你也许会发现，有时后复制粘贴完一段代码后，缩进的格式变乱，需要一行一行的调整十分麻烦。这个时候，你肯定想要一个代码格式化工具。 Beautify：安装量超过230万，Beautify是jsBeautifier的插件，支持JavaScript、JSON、CSS和HTML一键格式化。 Prettier Code Formatter：安装量超过150万，支持JavaScript、TypeScript和CSS的格式化，使用Prettier(一个深受大家喜爱的格式化插件)。 JS Refactor：提供了许多重构JavaScript 代码的方法，例如提取代码中的变量和方法，将函数转换为使用箭头函数或模板字面量和将函数导出。 JavaScript Booster：一个非常棒的重构工具，比如将var替换为const或则let，移除无用的else语句，将变量声明和变量初始化合并。应该说很大程度上受到Webstorm的启发。 6、浏览器插件 除非你直接在控制台写JavaScript代码，大多数时候是在浏览器中执行的。也就是说，每一次代码更新，你都需要刷新页面来重写载入代码。如果一直手动操作，是很繁琐的。我们可以用插件来替代。 Debugger for Chrome：你只需要在代码编辑器中设置断点，在浏览器中会在断点处暂停。 Live Server：在本地开发环境中，实时重新加载(reload)页面。 Preview on Web Server：提供web服务器和实时预览。 PHP Server：对于仅需要在客户端运行JavaScript 代码做测试非常有用。 Rest Client：你不需要使用浏览器或则一个CURL程序来测试REST API，通过Rest Client可以在编辑器内交互式运行HTTP请求。 7、框架插件 对于大多数项目，为了节省开发时间，你往往会使用一个合适的开发框架来快速开发。在VS Code上，大多数框架都有相应的插件支持。但是依然有很多框架并没有对应的插件。 Angular 6：超过220万的安装量，支持TypeScript、HTML、Angular Material ngRx、RxJS和Flex Layout。并且有172个Angular的代码片段。 Angular v5 snippets：超过270万的安装量，提供 TypeScript、RxJS、HTML和Docker文件的代码片段。 React Native/React/Redux snippets for es6/es7：为这些框架提供ES6/ES7语法的代码片段。 React Native Tools：提供智能提示、命令行工具和Debugging功能。 Vetur：为Vue框架提供语法高亮、代码片段、Emmet、格式化、代码风格检查、智能提示、调试帮助等。有非常详细的文档: vetur。 Ember：为Ember提供命令工具和智能提示。安装后，所有的ember cli命令都可以使用。 Cordova Tools：为Cordova插件和Ionic框架提供支持。提供代码智能提示、调试辅助以及其他特性。 jQuery Code Snippets：提供超过130个jQuery代码片段。 8、测试插件 在软件开发中，测试是必可不少的一个环节，特别是那些要上线到生产环境的项目。你可以看看我们这篇讲测试的文章: JavaScript Testing: Unit vs Functional vs Integration Tests。下面是一些流行的测试插件： Mocha sidebar：使用Mocha库来提供测试支持。使用该插件可以直接在代码中运行测试并将提示错误。 ES6 Mocha Snippets：提供ES6语法的 Mocha代码片段。充分利用箭头函数，尽量不使用大括号来保持代码的简洁，可配置允许使用分号。 Jasmine Code Snippets：Jasmine测试框架的代码片段。 Protractor Snippets：Protractor框架的端到端(end-to-end)测试片段，支持JavaScript和Typescript。 Node TDD：为Node和JavaScript项目提供test-driven development支持。在代码更新的时候可以自动触发代码的测试。 9、其它很酷的插件 我把它们分类到awesome类别，是因为它们真的很酷。 Quokka.js：一个很棒的调试工具，可以为您正在编写的代码提供实时反馈,能够预览变量的函数和计算值结果。请查看文档：文档 Paste as JSON：快速将JSON数据转换为JavaScript代码。 Code Metrics：这是一个用来计算JavaScript和TypeScript代码复杂度的插件。 10、插件包 VS Code的插件市场有一个类型叫插件包。它实际上已一个相互关联的插件的集合，方便一起安装，协同使用。 Nodejs Extension Pack：包含了ESLint、npm、JavaScript(ES6)代码片段、node_modules搜索、NPM智能提示和文件路径智能提示。 VS Code for Node.js – Development Pack ：NPM智能提示，ESLint，Chrome调试器，Code Metrics，Docker和导入包的开销计算。 Vue.js Extension Pack：包含大约12个VS Code插件，有些在本文没有提到，比如auto-rename-tag和auto-close-tag。 Ionic Extesion Pack：包含许多用于Ionic、Angular、RxJS、Cordova和HTML开发的插件。 11、VSCode 拓展插件推荐——提高 Node 和 Vue开发效率 Auto Close Tag 自动闭合HTML标签 Auto Rename Tag 修改HTML标签时，自动修改匹配的标签 Bookmarks 添加行书签 Can I Use HTML5、CSS3、SVG的浏览器兼容性检查 Code Runner 运行选中代码段（支持大量语言，包括Node） CodeBing 在VSCode中弹出浏览器并搜索，可编辑搜索引擎 Color Highlight 颜色值在代码中高亮显示 Color Picker 拾色器 Document This 注释文档生成 EditorConfig for VS Code EditorConfig插件 Emoji 在代码中输入emoji ESLint ESLint插件，高亮提示 File Peek 根据路径字符串，快速定位到文件 Font-awesome codes for html FontAwesome提示代码段 ftp-sync 同步文件到ftp Git Blame 在状态栏显示当前行的Git信息 Git History(git log) 查看git log GitLens 显示文件最近的commit和作者，显示当前行commit信息 Guides 高亮缩进基准线 Gulp Snippets Gulp代码段 HTML CSS Class Completion CSS class提示 HTML CSS Support css提示（支持vue） HTMLHint HTML格式提示 Indenticator 缩进高亮 JavaScript (ES6) code snippets ES6语法代码段 language-stylus Stylus语法高亮和提示 Lodash Lodash代码段 markdownlint Markdown格式提示 MochaSnippets Mocha代码段 Node modules resolve 快速导航到Node模块 npm 运行npm命令 npm Intellisense 导入模块时，提示已安装模块名称 Output Colorizer 彩色输出信息 Partial Diff 对比两段代码或文件 Path Autocomplete 路径完成提示 Path Intellisense 另一个路径完成提示 Prettify JSON 格式化JSON Project Manager 快速切换项目 REST Client 发送REST风格的HTTP请求 Settings Sync VSCode设置同步到Gist String Manipulation 字符串转换处理（驼峰、大写开头、下划线等等） Test Spec Generator 测试用例生成（支持chai、should、jasmine） TODO Parser Todo管理 Version Lens package.json文件显示模块当前版本和最新版本 vetur 目前比较好的Vue语法高亮 View Node Package 快速打开选中模块的主页和代码仓库 vscode-icons 文件图标，方便定位文件 VSCode Great Icons 文件图标拓展 VueHelper Vue2代码段（包括Vue2 api、vue-router2、vuex2） 附录：VSCode首选项配置 123456789101112131415161718192021222324252627282930313233&#123; &quot;editor.tabSize&quot;: 2, &quot;files.associations&quot;: &#123; &quot;*.vue&quot;: &quot;vue&quot; &#125;, &quot;eslint.autoFixOnSave&quot;: true, &quot;eslint.options&quot;: &#123; &quot;extensions&quot;: [ &quot;.js&quot;, &quot;.vue&quot; ] &#125;, &quot;eslint.validate&quot;: [ &quot;javascript&quot;, &quot;javascriptreact&quot;, &quot;vue&quot;, &quot;vue-html&quot; ], &quot;search.exclude&quot;: &#123; &quot;**/node_modules&quot;: true, &quot;**/bower_components&quot;: true, &quot;**/dist&quot;: true &#125;, &quot;emmet.syntaxProfiles&quot;: &#123; &quot;javascript&quot;: &quot;jsx&quot;, &quot;vue&quot;: &quot;html&quot;, &quot;vue-html&quot;: &quot;html&quot; &#125;, &quot;extensions.autoUpdate&quot;: true, &quot;editor.renderWhitespace&quot;: &quot;boundary&quot;, &quot;editor.cursorBlinking&quot;: &quot;smooth&quot;, &quot;workbench.welcome.enabled&quot;: true&#125; VS Code能够如此流行的一个原因就是拥有大量的高质量插件。它前所未有的提高了编码的效率。比如ESLint助你减少代码失误，Debugger for Chrome让你更加方便去Debugging。Node.js的智能引入提示让你可以让你正确引入所需模块，Live Server和 REST Client可以让你省去频繁切换到外部工具的麻烦。希望介绍的这些插件可以帮助你提高工作效率。]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
</search>
