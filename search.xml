<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[01_common_commands]]></title>
    <url>%2F2019%2F04%2F22%2Fhexo-01-common-commands%2F</url>
    <content type="text"><![CDATA[01-hexo常用命令手册 生成hexo静态博客 新建elaine文件夹 hexo init npm install hexo g hexo s #本地预览 与Github关联 Github上新建 github名字.github.io 的仓库 在elaine_config.yml中设置：将type设置为git（替换成你自己的信息），然后 hexo g、hexo d 1234deploy: type: git repo: git@github.com:ElaineXHZhong/ElaineXHZhong.github.io.git branch: master 用next主题： 将next的解压缩文件放在elaine\themes下面 将elaine下的_config.yml文件修改： theme: next 用live2d动画： 将elaine下的_config.yml文件添加： 12345678910111213141516live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false log: false model: use: live2d-widget-model-tororo display: position: right width: 150 height: 300 mobile: show: true 添加菜单项： 在hexo下运行git: hexo n page ‘about’，（会在source下面出现about文件夹，修改里面的.md文件） 修改themes下的next里的_config.yml文件，添加： 123menu: home: / || home about: /about/ || user 修改： 1language: zh-Hans 修改themes下的next下的languages下的zh-Hans.yml： 123menu: home: 首页 about: 关于 添加分类： hexo n page ‘categories’（source下出现categories文件夹，修改里面的.md文件）：（添加type: “categories”） 123title: categoriesdate: 2019-04-20 23:39:03type: "categories" 以后每次 hexo n articleName（source下面的_posts会出现相应文章），在文章.md文件中编辑： 12345// 方式1categories: 编程// 方式2categories: -编程 然后修改elaine下的_config.yml： 12345# Category &amp; Tagdefault_category: uncategorizedcategory_map: 编程: programming # 分类名称：访问路径tag_map: 就可以把该文章分类到‘programming’类； 标签的设置也是一样的： 12345678910---title: jQuery对表单的操作及更多应用date: 2017-05-26 12:12:57categories: - web前端tags:- jQuery- 表格- 表单验证--- 至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了tags: xxx的文章才会被收录到首页的“标签”中。 两个的设置几乎一模一样！ 所以我们可以打开scaffolds/post.md文件，在tages:上面加入categories:,保存后，之后执行hexo new 文章名命令生成的文件，页面里就有categories:项了： 1234title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;categories: tags: 异地同步博客：决定博客显示内容的只有一个Public目录，而public目录又是可以动态生成的（hexo g，根据_config.yml，source目录和themes目录下的文件生成），只要在不同电脑上同步可以生成Public目录的文件即可。以下文件以及目录是必须要同步的： source themes _config.yml db.json package.json .deploy_git]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hello-world]]></title>
    <url>%2F2019%2F04%2F22%2Fhexo-00-hello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new "My New Post" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: [Deployment](]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[12_Router]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-12-Router%2F</url>
    <content type="text"><![CDATA[12- Node.js路由封装 01router.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445//引入http模块var http=require('http');var url=require('url');var ejs=require('ejs');var fs=require('fs');//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); //获取get 还是post请求 var method=req.method.toLowerCase(); //console.log(method); var pathname=url.parse(req.url,true).pathname; if(pathname=='/login')&#123; /*显示登录页面*/ ejs.renderFile('views/form.ejs',&#123; &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;else if(pathname=='/dologin' &amp;&amp;method=='get')&#123; /*执行登录的操作*/ //get获取数据 console.log(url.parse(req.url,true).query); res.end('dologin'); &#125;else if(pathname=='/dologin' &amp;&amp;method=='post')&#123; /*执行登录的操作*/ var postStr=''; req.on('data',function(chunk)&#123; postStr+=chunk; &#125;) req.on('end',function(err,chunk)&#123; //res.end(postStr); console.log(postStr); fs.appendFile('login.txt',postStr+'\n',function(err)&#123; if(err)&#123; console.log(err); return; &#125; console.log('写入数据成功'); &#125;) res.end("&lt;script&gt;alert('登录成功');history.back();&lt;/script&gt;") &#125;) &#125;else&#123; ejs.renderFile('views/index.ejs',&#123; &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;&#125;).listen(8001); 02router.js 123456789101112131415161718//引入http模块var http=require('http');var url=require('url');var model=require('./model/model.js');//model['login']('111','22');////路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); var pathname=url.parse(req.url).pathname.replace('/',''); if(pathname!='favicon.ico') &#123; try &#123; model[pathname](req, res); &#125; catch (err) &#123; model['home'](req, res); &#125; &#125; //console.log(pathname);&#125;).listen(8001); 03demo.js 12345678910111213141516171819202122//index.jsvar route = require('./model/http-route.js');var app = route();var http = require('http');var server = http.createServer(app);app.get('/', function (req, res) &#123; res.send('é¦–é¡µ');&#125;);app.get('/login', function (req, res) &#123; res.send('login');&#125;);app.get('/register', function (req, res) &#123; res.send('register');&#125;);app.post('/test', function (req, res) &#123; console.log('POST', req.query); res.send(req.query);&#125;);server.listen(8080, function () &#123; console.log('listen ' + server.address().port);&#125;);]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[11_Get_Post]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-11-Get-Post%2F</url>
    <content type="text"><![CDATA[11-GET、POST、EJS、静态文件托管 一、静态文件托管 和静态web服务是一样的，只不过对静态 web 服务器做一个封装。 二、路由 官方解释： 路由（Routing）是由一个 URI（或者叫路径）和一个特定的 HTTP 方法（GET、POST 等）组成 的，涉及到应用如何响应客户端对某个网站节点的访问。 非官方解释： 路由指的就是针对不同请求的 URL，处理不同的业务逻辑。 三、认识EJS模块引擎 我们学的 EJS 是后台模板，可以把我们数据库和文件读取的数据显示到 Html 页面上面。它 是一个第三方模块，需要通过 npm 安装。 1npm install ejs –save 123ejs.renderFile(filename, data, options, function(err, str)&#123; // str =&gt; Rendered HTML string &#125;); EJS 常用标签 &lt;% %&gt;流程控制标签 &lt;%= %&gt;输出标签（原文输出 HTML 标签） &lt;%- %&gt;输出标签（HTML 会被浏览器解析） 123456&lt;a href="&lt;%= url %&gt;"&gt;&lt;img src="&lt;%= imageURL %&gt;" alt=""&gt;&lt;/a&gt;&lt;ul&gt;&lt;ul&gt; &lt;% for(var i = 0 ; i &lt; news.length ; i++)&#123; %&gt; &lt;li&gt;&lt;%= news[i] %&gt;&lt;/li&gt; &lt;% &#125; %&gt; &lt;/ul&gt; 四、Get、Post 超文本传输协议（HTTP）的设计目的是保证客户端机器与服务器之间的通信。 在客户端和服务器之间进行请求-响应时，两种最常被用到的方法是：GET 和 POST。 GET - 从指定的资源请求数据。（一般用于获取数据） POST - 向指定的资源提交要被处理的数据。（一般用于提交数据） 123获取 GET 传值： var urlinfo= url .parse(req.url,true); urlinfo.query(); 123456789101112获取 POST 传值： var postData = ''; // 数据块接收中 req.on('data', function (postDataChunk) &#123; postData += postDataChunk; &#125;); // 数据接收完毕，执行回调函数 req.on('end', function () &#123; try &#123; postData = JSON.parse(postData); &#125;catch(e)&#123; &#125; req.query = postData; console.log(querystring .parse(postData)); &#125;); 例子： 00services1.js 123456789//引入http模块var http=require('http');//引入扩展名的方法是在文件里面获取到的。var router=require('./model/router.js');//console.log(mimeModel.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //router.statics(req,res,'static'); console.log(req.url);&#125;).listen(8001); 00services2.js 12345678910111213141516//引入http模块var http=require('http');var url=require('url');//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; var pathname=url.parse(req.url).pathname; if(pathname=='/login')&#123; res.end('login'); &#125;else if(pathname=='/register')&#123; res.end('register'); &#125;else if(pathname=='/order')&#123; res.end('order'); &#125;else&#123; res.end('index'); &#125;&#125;).listen(8001); 00services3.js 123456789101112131415161718192021222324252627282930313233//引入http模块var http=require('http');var url=require('url');var ejs=require('ejs');//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); var pathname=url.parse(req.url).pathname; if(pathname=='/login')&#123; var data='你好我是后台数据'; var list=[ '1111', '2222', '3333', ]; //把数据库的数据渲染到模板上面 ejs.renderFile('views/login.ejs',&#123; msg:data, list:list &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;else&#123; var msg='这是注册页面，也是注册的路由'; var h="&lt;h2&gt;这是一个h2&lt;/h2&gt;" ejs.renderFile('views/register.ejs',&#123; msg:msg, h:h &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;&#125;).listen(8001); get_post.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445//引入http模块var http=require('http');var url=require('url');var ejs=require('ejs');var fs=require('fs');//路由:指的就是针对不同请求的 URL，处理不同的业务逻辑。http.createServer(function(req,res)&#123; res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); //获取get 还是post请求 var method=req.method.toLowerCase(); //console.log(method); var pathname=url.parse(req.url,true).pathname; if(pathname=='/login')&#123; /*显示登录页面*/ ejs.renderFile('views/form.ejs',&#123; &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;else if(pathname=='/dologin' &amp;&amp;method=='get')&#123; /*执行登录的操作*/ //get获取数据 console.log(url.parse(req.url,true).query); res.end('dologin'); &#125;else if(pathname=='/dologin' &amp;&amp;method=='post')&#123; /*执行登录的操作*/ var postStr=''; req.on('data',function(chunk)&#123; postStr+=chunk; &#125;) req.on('end',function(err,chunk)&#123; //res.end(postStr); console.log(postStr); fs.appendFile('login.txt',postStr+'\n',function(err)&#123; if(err)&#123; console.log(err); return; &#125; console.log('写入数据成功'); &#125;) res.end("&lt;script&gt;alert('登录成功');history.back();&lt;/script&gt;") &#125;) &#125;else&#123; ejs.renderFile('views/index.ejs',&#123; &#125;,function(err,data)&#123; res.end(data); &#125;) &#125;&#125;).listen(8001); login.txt 12username=zhangsan&amp;password=123username=zhangsan222&amp;password=3333 model/router.js 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');//获取文件类型的方法 私有function getMime(extname,callback)&#123; /*获取后缀名的方法*/ fs.readFile('./mime.json',function(err,data)&#123; if(err)&#123; console.log('mime.json文件不存在'); return false; &#125; //console.log(data.toString()); var Mimes=JSON.parse(data.toString()); var result= Mimes[extname] || 'text/html'; callback(result) &#125;)&#125;exports.statics=function(req,res,staticpath)&#123; var pathname=url.parse(req.url).pathname; /*获取url的值*/ if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile(staticpath+'/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile(staticpath+'/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ getMime(extname,function(mime)&#123; res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125;); &#125; &#125;) &#125;&#125;]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[10_Callback_Event]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-10-Callback-Event%2F</url>
    <content type="text"><![CDATA[10-Nodejs回调和事件驱动 一、 Node.js的单线程、非阻塞 I/O、事件驱动 在 Java、PHP 或者.net 等服务器端语言中，会为每一个客户端连接创建一个新的线程。 而每个线程需要耗费大约 2MB 内存。也就是说，理论上，一个 8GB 内存的服务器可以同时 连接的最大用户数为 4000 个左右。要让Web应用程序支持更多的用户，就需要增加服务器 的数量，而 Web 应用程序的硬件成本当然就上升了。 Node.js 不为每个客户连接创建一个新的线程，而仅仅使用一个线程。当有用户连接了， 就触发一个内部事件，通过非阻塞 I/O、事件驱动机制，让 Node.js 程序宏观上也是并行的。 使用 Node.js，一个 8GB 内存的服务器，可以同时处理超过4 万用户的连接。 二、Node.js回调处理异步 错误的写法： 123456789function getData ()&#123; // 模拟请求数据 var result=''; setTimeout (function()&#123; result='这是请求到的数据' &#125;,200); return result; &#125; console .log( getData ()); /* 异步导致请求不到数据 */ 正确的写法： 1234567891011function getData (callback)&#123; // 模拟请求数据 var result=''; setTimeout (function()&#123; result='这是请求到的数据'; callback(result); &#125;,200); &#125; getData (function( data )&#123; console.log(data) ; &#125;) 错误的写法：(非阻塞) 12345678910111213141516171819202122var fs=require('fs');//非阻塞io//console.log('1');////fs.readFile('mime.json',function(err,data)&#123;// //console.log(data);// console.log('2');//&#125;)////console.log('3');function getMime()&#123; //1 fs.readFile('mime.json',function(err,data)&#123; //console.log(data.toString()); return data;//3 &#125;) //2 //return '123';&#125;console.log(getMime()); /*有问题*/ 正确的写法：(回调函数) 1234567891011var fs=require('fs');function getMime(callback)&#123; fs.readFile('mime.json',function(err,data)&#123; //console.log(data.toString()); //return data; callback(data); &#125;)&#125;getMime(function(result)&#123; console.log(result.toString());&#125;) 三、Node.js events 模块处理异步 Node.js 事件循环: Node.js 是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高。Node.js 的每一个 API 都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。Node.js 有多个内置的事件，我们可以通过引入 events 模块，并通过实例化 EventEmitter 类来绑定和监听事件。 1234567891011// 引入events模块 var events = require ('events'); var EventEmitter =new events.EventEmitter(); /* 实例化事件对象 */ // 广播和接收广播(也就是事件驱动)EventEmitter.on('to_parent',function()&#123; // 监听to_parent的广播 //on监听一个广播 console.log('接收到了to_parent这个广播事件'); &#125;) setTimeout(function()&#123; // 过1秒后触发一个定时器(一个广播) console.log('开始广播了...'); EventEmitter.emit('to_parent','你要发送的数据'); /* 发送广播 */ //emit触发一个广播&#125;,1000) 程序流程：进来后监听to_parent这个广播（还没有执行），等到1秒后emit广播了以后，它才会监听到这个事件。可以在on里面console.log(data)来得到要发送的数据。 12345678var events = require('events');var EventEmitter = new events.EventEmitter();EventEmitter.on('to_parent',function(data)&#123; console.log(data); // 这个data就是下面emit发送的数据&#125;)setTimeout(function()&#123; EventEmitter.emit('to_parent','要发送的数据');&#125;) 注意看下面广播事件的顺序： 12345678910111213141516171819var events=require('events');var EventEmitter=new events.EventEmitter();EventEmitter.on('to_mime',function(data)&#123; console.log(data);&#125;)//监听to_parent的广播EventEmitter.on('to_parent',function(data)&#123; //console.log('接收到了这个广播事件'); console.log(data); EventEmitter.emit('to_mime','给mime发送的数据')&#125;)setTimeout(function()&#123; console.log('开始广播...'); //广播to_parent事件 EventEmitter.emit('to_parent','发送的数据')&#125;,1000);//开始广播...//发送的数据//给mime发送的数据 首先，开始广播，打印出’开始广播…’，因为首先监听广播，它只监听但是不会执行回调函数；当通过EventEmitter.emit()广播以后，EventEmitter.on()就接收到了广播，才会触发里面的回调函数；在回调函数里又广播了一次 。 Node.js事件驱动获取数据： 12345678910111213var fs=require('fs');var events=require('events');var EventEmitter=new events.EventEmitter();function getMime(callback)&#123; fs.readFile('mime.json',function(err,data)&#123; EventEmitter.emit('data',data) &#125;)&#125;getMime();/*执行方法*///监听广播数据EventEmitter.on('data',function(mime)&#123; console.log(mime.toString());&#125;)]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[09_Create_Server]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-09-Create-Server%2F</url>
    <content type="text"><![CDATA[09-利用http模块、url模块、path模块创建一个web服务器 一、Node.js 创建的第一个应用 123456789101112//1. 引入http 模块 const http = require ('http'); //2. 用http模块创建服务 http.createServer(function(req,res)&#123; // 发送HTTP头部 // HTTP状态值:200 : OK // 设置HTTP头部，状态码是200，文件类型是html，字符集是utf-8 res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write('你好 nodejs'); res.write('我是第一个 nodejs 程序'); res.end(); /* 结束响应 */ &#125;).listen(8001); 二、WEB 服务器介绍 Web 服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，可以向浏览器等Web 客户端提供文档，也可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。目前最主流的三个 Web 服务器是 Apache Nginx IIS。 静态服务器：就是不支持动态页面和支持数据库的服务器空间，这样的服务器一般就只能放文件或者静态的页面，一般也就是html结尾或者htm结尾的页面。 1234567891011121314151617181920212223242526272829303132333435363738var http = require('http');var fs = require('fs');var path = require('path');var url = require('url');var mimeModel = require('./model/getmime.js');console.log(mimeModel.getMime('.html'));http.createServer(function(req,res)&#123; // req.url能拿到浏览器的输入地址 // var pathname = req.url; var pathname = url.parse(req.url).pathname; var extname = path.extname(pathname); var mime = mimeModel.getMime(extname); // 获取文件类型 if(pathname=='/')&#123; pathname = 'json/index.html'; // 默认加载的首页 &#125; if(pathname!='/favicon.ico')&#123; //过滤favicon.ico请求 console.log(pathname); fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; console.log('404'); fs.readFile('static/json/404.html',function(err,data404)&#123; if(err)&#123; console.log(err); &#125;else&#123; // res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data404); res.end(); &#125; &#125;) &#125;else&#123; res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); &#125; &#125;) &#125;&#125;).listen(8888); 00services1.js 1234567891011121314151617181920212223242526//引入http模块var http=require('http');//fs模块var fs=require('fs');http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css var pathname=req.url; if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); &#125;else&#123; /*返回这个文件*/ res.writeHead(200,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125; &#125;) &#125;&#125;).listen(8001); 00services2.js 1234567891011121314151617181920212223242526272829303132333435363738394041//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*/var mimeModel=require('./model/getmime.js');//console.log(mime.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css var pathname=req.url; if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile('static/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ var mime=mimeModel.getMime(extname); /*获取文件类型*/ res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125; &#125;) &#125;&#125;).listen(8001); 00services3.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');var mimeModel=require('./model/getmime.js');//console.log(mime.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css //xxx.json?214214124 var pathname=url.parse(req.url).pathname; console.log(pathname); if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile('static/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ var mime=mimeModel.getMime(extname); /*获取文件类型*/ res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125; &#125;) &#125;&#125;).listen(8001); 00services4.js 1234567891011//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');var mimeModel=require('./model/getmimefromfile.js');//console.log(); //获取文件类型console.log(mimeModel.getMime(fs, '.css')); 00services5.js 12345678910111213141516171819202122232425262728293031323334353637383940414243444546//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');//引入扩展名的方法是在文件里面获取到的。var mimeModel=require('./model/getmimefromfile.js');//console.log(mimeModel.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css //xxx.json?214214124 var pathname=url.parse(req.url).pathname; console.log(pathname); if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile('static/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ var mime=mimeModel.getMime(fs,extname); /*获取文件类型*/ res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); res.write(data); res.end(); /*结束响应*/ &#125; &#125;) &#125;&#125;).listen(8002); 00services6.js 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950//引入http模块var http=require('http');//fs模块var fs=require('fs');//path模块var path=require('path'); /*nodejs自带的模块*///url模块var url=require('url');var events=require('events');var EventEmitter=new events.EventEmitter();var mimeModel=require('./model/getmimefromfile_events.js');//引入扩展名的方法是在文件里面获取到的。//console.log(mimeModel.getMime('.css')); //获取文件类型http.createServer(function(req,res)&#123; //http://localhost:8001/news.html /news.html //http://localhost:8001/index.html /index.html //css/dmb.bottom.css //xxx.json?214214124 var pathname=url.parse(req.url).pathname; console.log(pathname); if(pathname=='/')&#123; pathname='/index.html'; /*默认加载的首页*/ &#125; //获取文件的后缀名 var extname=path.extname(pathname); if(pathname!='/favicon.ico')&#123; /*过滤请求favicon.ico*/ //console.log(pathname); //文件操作获取 static下面的index.html fs.readFile('static/'+pathname,function(err,data)&#123; if(err)&#123; /*么有这个文件*/ console.log('404'); fs.readFile('static/404.html',function(error,data404)&#123; if(error)&#123; console.log(error); &#125; res.writeHead(404,&#123;"Content-Type":"text/html;charset='utf-8'"&#125;); res.write(data404); res.end(); /*结束响应*/ &#125;) &#125;else&#123; /*返回这个文件*/ mimeModel.getMime(fs,EventEmitter,extname); /*调用获取数据的方法*/ EventEmitter.on('to_mime',function(mime)&#123; res.writeHead(200,&#123;"Content-Type":""+mime+";charset='utf-8'"&#125;); //res.write(data); res.end(data); /*结束响应*/ &#125;) &#125; &#125;) &#125;&#125;).listen(8002); mime.json 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484&#123; ".323":"text/h323" , ".3gp":"video/3gpp" , ".aab":"application/x-authoware-bin" , ".aam":"application/x-authoware-map" , ".aas":"application/x-authoware-seg" , ".acx":"application/internet-property-stream" , ".ai":"application/postscript" , ".aif":"audio/x-aiff" , ".aifc":"audio/x-aiff" , ".aiff":"audio/x-aiff" , ".als":"audio/X-Alpha5" , ".amc":"application/x-mpeg" , ".ani":"application/octet-stream" , ".apk":"application/vnd.android.package-archive" , ".asc":"text/plain" , ".asd":"application/astound" , ".asf":"video/x-ms-asf" , ".asn":"application/astound" , ".asp":"application/x-asap" , ".asr":"video/x-ms-asf" , ".asx":"video/x-ms-asf" , ".au":"audio/basic" , ".avb":"application/octet-stream" , ".avi":"video/x-msvideo" , ".awb":"audio/amr-wb" , ".axs":"application/olescript" , ".bas":"text/plain" , ".bcpio":"application/x-bcpio" , ".bin ":"application/octet-stream" , ".bld":"application/bld" , ".bld2":"application/bld2" , ".bmp":"image/bmp" , ".bpk":"application/octet-stream" , ".bz2":"application/x-bzip2" , ".c":"text/plain" , ".cal":"image/x-cals" , ".cat":"application/vnd.ms-pkiseccat" , ".ccn":"application/x-cnc" , ".cco":"application/x-cocoa" , ".cdf":"application/x-cdf" , ".cer":"application/x-x509-ca-cert" , ".cgi":"magnus-internal/cgi" , ".chat":"application/x-chat" , ".class":"application/octet-stream" , ".clp":"application/x-msclip" , ".cmx":"image/x-cmx" , ".co":"application/x-cult3d-object" , ".cod":"image/cis-cod" , ".conf":"text/plain" , ".cpio":"application/x-cpio" , ".cpp":"text/plain" , ".cpt":"application/mac-compactpro" , ".crd":"application/x-mscardfile" , ".crl":"application/pkix-crl" , ".crt":"application/x-x509-ca-cert" , ".csh":"application/x-csh" , ".csm":"chemical/x-csml" , ".csml":"chemical/x-csml" , ".css":"text/css" , ".cur":"application/octet-stream" , ".dcm":"x-lml/x-evm" , ".dcr":"application/x-director" , ".dcx":"image/x-dcx" , ".der":"application/x-x509-ca-cert" , ".dhtml":"text/html" , ".dir":"application/x-director" , ".dll":"application/x-msdownload" , ".dmg":"application/octet-stream" , ".dms":"application/octet-stream" , ".doc":"application/msword" , ".docx":"application/vnd.openxmlformats-officedocument.wordprocessingml.document" , ".dot":"application/msword" , ".dvi":"application/x-dvi" , ".dwf":"drawing/x-dwf" , ".dwg":"application/x-autocad" , ".dxf":"application/x-autocad" , ".dxr":"application/x-director" , ".ebk":"application/x-expandedbook" , ".emb":"chemical/x-embl-dl-nucleotide" , ".embl":"chemical/x-embl-dl-nucleotide" , ".eps":"application/postscript" , ".epub":"application/epub+zip" , ".eri":"image/x-eri" , ".es":"audio/echospeech" , ".esl":"audio/echospeech" , ".etc":"application/x-earthtime" , ".etx":"text/x-setext" , ".evm":"x-lml/x-evm" , ".evy":"application/envoy" , ".exe":"application/octet-stream" , ".fh4":"image/x-freehand" , ".fh5":"image/x-freehand" , ".fhc":"image/x-freehand" , ".fif":"application/fractals" , ".flr":"x-world/x-vrml" , ".flv":"flv-application/octet-stream" , ".fm":"application/x-maker" , ".fpx":"image/x-fpx" , ".fvi":"video/isivideo" , ".gau":"chemical/x-gaussian-input" , ".gca":"application/x-gca-compressed" , ".gdb":"x-lml/x-gdb" , ".gif":"image/gif" , ".gps":"application/x-gps" , ".gtar":"application/x-gtar" , ".gz":"application/x-gzip" , ".h":"text/plain" , ".hdf":"application/x-hdf" , ".hdm":"text/x-hdml" , ".hdml":"text/x-hdml" , ".hlp":"application/winhlp" , ".hqx":"application/mac-binhex40" , ".hta":"application/hta" , ".htc":"text/x-component" , ".htm":"text/html" , ".html":"text/html" , ".hts":"text/html" , ".htt":"text/webviewhtml" , ".ice":"x-conference/x-cooltalk" , ".ico":"image/x-icon" , ".ief":"image/ief" , ".ifm":"image/gif" , ".ifs":"image/ifs" , ".iii":"application/x-iphone" , ".imy":"audio/melody" , ".ins":"application/x-internet-signup" , ".ips":"application/x-ipscript" , ".ipx":"application/x-ipix" , ".isp":"application/x-internet-signup" , ".it":"audio/x-mod" , ".itz":"audio/x-mod" , ".ivr":"i-world/i-vrml" , ".j2k":"image/j2k" , ".jad":"text/vnd.sun.j2me.app-descriptor" , ".jam":"application/x-jam" , ".jar":"application/java-archive" , ".java":"text/plain" , ".jfif":"image/pipeg" , ".jnlp":"application/x-java-jnlp-file" , ".jpe":"image/jpeg" , ".jpeg":"image/jpeg" , ".jpg":"image/jpeg" , ".jpz":"image/jpeg" , ".js":"application/x-javascript" , ".jwc":"application/jwc" , ".kjx":"application/x-kjx" , ".lak":"x-lml/x-lak" , ".latex":"application/x-latex" , ".lcc":"application/fastman" , ".lcl":"application/x-digitalloca" , ".lcr":"application/x-digitalloca" , ".lgh":"application/lgh" , ".lha":"application/octet-stream" , ".lml":"x-lml/x-lml" , ".lmlpack":"x-lml/x-lmlpack" , ".log":"text/plain" , ".lsf":"video/x-la-asf" , ".lsx":"video/x-la-asf" , ".lzh":"application/octet-stream" , ".m13":"application/x-msmediaview" , ".m14":"application/x-msmediaview" , ".m15":"audio/x-mod" , ".m3u":"audio/x-mpegurl" , ".m3url":"audio/x-mpegurl" , ".m4a":"audio/mp4a-latm" , ".m4b":"audio/mp4a-latm" , ".m4p":"audio/mp4a-latm" , ".m4u":"video/vnd.mpegurl" , ".m4v":"video/x-m4v" , ".ma1":"audio/ma1" , ".ma2":"audio/ma2" , ".ma3":"audio/ma3" , ".ma5":"audio/ma5" , ".man":"application/x-troff-man" , ".map":"magnus-internal/imagemap" , ".mbd":"application/mbedlet" , ".mct":"application/x-mascot" , ".mdb":"application/x-msaccess" , ".mdz":"audio/x-mod" , ".me":"application/x-troff-me" , ".mel":"text/x-vmel" , ".mht":"message/rfc822" , ".mhtml":"message/rfc822" , ".mi":"application/x-mif" , ".mid":"audio/mid" , ".midi":"audio/midi" , ".mif":"application/x-mif" , ".mil":"image/x-cals" , ".mio":"audio/x-mio" , ".mmf":"application/x-skt-lbs" , ".mng":"video/x-mng" , ".mny":"application/x-msmoney" , ".moc":"application/x-mocha" , ".mocha":"application/x-mocha" , ".mod":"audio/x-mod" , ".mof":"application/x-yumekara" , ".mol":"chemical/x-mdl-molfile" , ".mop":"chemical/x-mopac-input" , ".mov":"video/quicktime" , ".movie":"video/x-sgi-movie" , ".mp2":"video/mpeg" , ".mp3":"audio/mpeg" , ".mp4":"video/mp4" , ".mpa":"video/mpeg" , ".mpc":"application/vnd.mpohun.certificate" , ".mpe":"video/mpeg" , ".mpeg":"video/mpeg" , ".mpg":"video/mpeg" , ".mpg4":"video/mp4" , ".mpga":"audio/mpeg" , ".mpn":"application/vnd.mophun.application" , ".mpp":"application/vnd.ms-project" , ".mps":"application/x-mapserver" , ".mpv2":"video/mpeg" , ".mrl":"text/x-mrml" , ".mrm":"application/x-mrm" , ".ms":"application/x-troff-ms" , ".msg":"application/vnd.ms-outlook" , ".mts":"application/metastream" , ".mtx":"application/metastream" , ".mtz":"application/metastream" , ".mvb":"application/x-msmediaview" , ".mzv":"application/metastream" , ".nar":"application/zip" , ".nbmp":"image/nbmp" , ".nc":"application/x-netcdf" , ".ndb":"x-lml/x-ndb" , ".ndwn":"application/ndwn" , ".nif":"application/x-nif" , ".nmz":"application/x-scream" , ".nokia-op-logo":"image/vnd.nok-oplogo-color" , ".npx":"application/x-netfpx" , ".nsnd":"audio/nsnd" , ".nva":"application/x-neva1" , ".nws":"message/rfc822" , ".oda":"application/oda" , ".ogg":"audio/ogg" , ".oom":"application/x-AtlasMate-Plugin" , ".p10":"application/pkcs10" , ".p12":"application/x-pkcs12" , ".p7b":"application/x-pkcs7-certificates" , ".p7c":"application/x-pkcs7-mime" , ".p7m":"application/x-pkcs7-mime" , ".p7r":"application/x-pkcs7-certreqresp" , ".p7s":"application/x-pkcs7-signature" , ".pac":"audio/x-pac" , ".pae":"audio/x-epac" , ".pan":"application/x-pan" , ".pbm":"image/x-portable-bitmap" , ".pcx":"image/x-pcx" , ".pda":"image/x-pda" , ".pdb":"chemical/x-pdb" , ".pdf":"application/pdf" , ".pfr":"application/font-tdpfr" , ".pfx":"application/x-pkcs12" , ".pgm":"image/x-portable-graymap" , ".pict":"image/x-pict" , ".pko":"application/ynd.ms-pkipko" , ".pm":"application/x-perl" , ".pma":"application/x-perfmon" , ".pmc":"application/x-perfmon" , ".pmd":"application/x-pmd" , ".pml":"application/x-perfmon" , ".pmr":"application/x-perfmon" , ".pmw":"application/x-perfmon" , ".png":"image/png" , ".pnm":"image/x-portable-anymap" , ".pnz":"image/png" , ".pot,":"application/vnd.ms-powerpoint" , ".ppm":"image/x-portable-pixmap" , ".pps":"application/vnd.ms-powerpoint" , ".ppt":"application/vnd.ms-powerpoint" , ".pptx":"application/vnd.openxmlformats-officedocument.presentationml.presentation" , ".pqf":"application/x-cprplayer" , ".pqi":"application/cprplayer" , ".prc":"application/x-prc" , ".prf":"application/pics-rules" , ".prop":"text/plain" , ".proxy":"application/x-ns-proxy-autoconfig" , ".ps":"application/postscript" , ".ptlk":"application/listenup" , ".pub":"application/x-mspublisher" , ".pvx":"video/x-pv-pvx" , ".qcp":"audio/vnd.qcelp" , ".qt":"video/quicktime" , ".qti":"image/x-quicktime" , ".qtif":"image/x-quicktime" , ".r3t":"text/vnd.rn-realtext3d" , ".ra":"audio/x-pn-realaudio" , ".ram":"audio/x-pn-realaudio" , ".rar":"application/octet-stream" , ".ras":"image/x-cmu-raster" , ".rc":"text/plain" , ".rdf":"application/rdf+xml" , ".rf":"image/vnd.rn-realflash" , ".rgb":"image/x-rgb" , ".rlf":"application/x-richlink" , ".rm":"audio/x-pn-realaudio" , ".rmf":"audio/x-rmf" , ".rmi":"audio/mid" , ".rmm":"audio/x-pn-realaudio" , ".rmvb":"audio/x-pn-realaudio" , ".rnx":"application/vnd.rn-realplayer" , ".roff":"application/x-troff" , ".rp":"image/vnd.rn-realpix" , ".rpm":"audio/x-pn-realaudio-plugin" , ".rt":"text/vnd.rn-realtext" , ".rte":"x-lml/x-gps" , ".rtf":"application/rtf" , ".rtg":"application/metastream" , ".rtx":"text/richtext" , ".rv":"video/vnd.rn-realvideo" , ".rwc":"application/x-rogerwilco" , ".s3m":"audio/x-mod" , ".s3z":"audio/x-mod" , ".sca":"application/x-supercard" , ".scd":"application/x-msschedule" , ".sct":"text/scriptlet" , ".sdf":"application/e-score" , ".sea":"application/x-stuffit" , ".setpay":"application/set-payment-initiation" , ".setreg":"application/set-registration-initiation" , ".sgm":"text/x-sgml" , ".sgml":"text/x-sgml" , ".sh":"application/x-sh" , ".shar":"application/x-shar" , ".shtml":"magnus-internal/parsed-html" , ".shw":"application/presentations" , ".si6":"image/si6" , ".si7":"image/vnd.stiwap.sis" , ".si9":"image/vnd.lgtwap.sis" , ".sis":"application/vnd.symbian.install" , ".sit":"application/x-stuffit" , ".skd":"application/x-Koan" , ".skm":"application/x-Koan" , ".skp":"application/x-Koan" , ".skt":"application/x-Koan" , ".slc":"application/x-salsa" , ".smd":"audio/x-smd" , ".smi":"application/smil" , ".smil":"application/smil" , ".smp":"application/studiom" , ".smz":"audio/x-smd" , ".snd":"audio/basic" , ".spc":"application/x-pkcs7-certificates" , ".spl":"application/futuresplash" , ".spr":"application/x-sprite" , ".sprite":"application/x-sprite" , ".sdp":"application/sdp" , ".spt":"application/x-spt" , ".src":"application/x-wais-source" , ".sst":"application/vnd.ms-pkicertstore" , ".stk":"application/hyperstudio" , ".stl":"application/vnd.ms-pkistl" , ".stm":"text/html" , ".svg":"image/svg+xml" , ".sv4cpio":"application/x-sv4cpio" , ".sv4crc":"application/x-sv4crc" , ".svf":"image/vnd" , ".svg":"image/svg+xml" , ".svh":"image/svh" , ".svr":"x-world/x-svr" , ".swf":"application/x-shockwave-flash" , ".swfl":"application/x-shockwave-flash" , ".t":"application/x-troff" , ".tad":"application/octet-stream" , ".talk":"text/x-speech" , ".tar":"application/x-tar" , ".taz":"application/x-tar" , ".tbp":"application/x-timbuktu" , ".tbt":"application/x-timbuktu" , ".tcl":"application/x-tcl" , ".tex":"application/x-tex" , ".texi":"application/x-texinfo" , ".texinfo":"application/x-texinfo" , ".tgz":"application/x-compressed" , ".thm":"application/vnd.eri.thm" , ".tif":"image/tiff" , ".tiff":"image/tiff" , ".tki":"application/x-tkined" , ".tkined":"application/x-tkined" , ".toc":"application/toc" , ".toy":"image/toy" , ".tr":"application/x-troff" , ".trk":"x-lml/x-gps" , ".trm":"application/x-msterminal" , ".tsi":"audio/tsplayer" , ".tsp":"application/dsptype" , ".tsv":"text/tab-separated-values" , ".ttf":"application/octet-stream" , ".ttz":"application/t-time" , ".txt":"text/plain" , ".uls":"text/iuls" , ".ult":"audio/x-mod" , ".ustar":"application/x-ustar" , ".uu":"application/x-uuencode" , ".uue":"application/x-uuencode" , ".vcd":"application/x-cdlink" , ".vcf":"text/x-vcard" , ".vdo":"video/vdo" , ".vib":"audio/vib" , ".viv":"video/vivo" , ".vivo":"video/vivo" , ".vmd":"application/vocaltec-media-desc" , ".vmf":"application/vocaltec-media-file" , ".vmi":"application/x-dreamcast-vms-info" , ".vms":"application/x-dreamcast-vms" , ".vox":"audio/voxware" , ".vqe":"audio/x-twinvq-plugin" , ".vqf":"audio/x-twinvq" , ".vql":"audio/x-twinvq" , ".vre":"x-world/x-vream" , ".vrml":"x-world/x-vrml" , ".vrt":"x-world/x-vrt" , ".vrw":"x-world/x-vream" , ".vts":"workbook/formulaone" , ".wav":"audio/x-wav" , ".wax":"audio/x-ms-wax" , ".wbmp":"image/vnd.wap.wbmp" , ".wcm":"application/vnd.ms-works" , ".wdb":"application/vnd.ms-works" , ".web":"application/vnd.xara" , ".wi":"image/wavelet" , ".wis":"application/x-InstallShield" , ".wks":"application/vnd.ms-works" , ".wm":"video/x-ms-wm" , ".wma":"audio/x-ms-wma" , ".wmd":"application/x-ms-wmd" , ".wmf":"application/x-msmetafile" , ".wml":"text/vnd.wap.wml" , ".wmlc":"application/vnd.wap.wmlc" , ".wmls":"text/vnd.wap.wmlscript" , ".wmlsc":"application/vnd.wap.wmlscriptc" , ".wmlscript":"text/vnd.wap.wmlscript" , ".wmv":"audio/x-ms-wmv" , ".wmx":"video/x-ms-wmx" , ".wmz":"application/x-ms-wmz" , ".wpng":"image/x-up-wpng" , ".wps":"application/vnd.ms-works" , ".wpt":"x-lml/x-gps" , ".wri":"application/x-mswrite" , ".wrl":"x-world/x-vrml" , ".wrz":"x-world/x-vrml" , ".ws":"text/vnd.wap.wmlscript" , ".wsc":"application/vnd.wap.wmlscriptc" , ".wv":"video/wavelet" , ".wvx":"video/x-ms-wvx" , ".wxl":"application/x-wxl" , ".x-gzip":"application/x-gzip" , ".xaf":"x-world/x-vrml" , ".xar":"application/vnd.xara" , ".xbm":"image/x-xbitmap" , ".xdm":"application/x-xdma" , ".xdma":"application/x-xdma" , ".xdw":"application/vnd.fujixerox.docuworks" , ".xht":"application/xhtml+xml" , ".xhtm":"application/xhtml+xml" , ".xhtml":"application/xhtml+xml" , ".xla":"application/vnd.ms-excel" , ".xlc":"application/vnd.ms-excel" , ".xll":"application/x-excel" , ".xlm":"application/vnd.ms-excel" , ".xls":"application/vnd.ms-excel" , ".xlsx":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" , ".xlt":"application/vnd.ms-excel" , ".xlw":"application/vnd.ms-excel" , ".xm":"audio/x-mod" , ".xml":"text/plain", ".xml":"application/xml", ".xmz":"audio/x-mod" , ".xof":"x-world/x-vrml" , ".xpi":"application/x-xpinstall" , ".xpm":"image/x-xpixmap" , ".xsit":"text/xml" , ".xsl":"text/xml" , ".xul":"text/xul" , ".xwd":"image/x-xwindowdump" , ".xyz":"chemical/x-pdb" , ".yz1":"application/x-yz1" , ".z":"application/x-compress" , ".zac":"application/x-zaurus-zac" , ".zip":"application/zip" , ".json":"application/json"&#125; model/getmime.js 123456789101112exports.getMime=function(extname)&#123; /*获取后缀名的方法*/ switch (extname)&#123; case '.html': return 'text/html'; case '.css': return 'text/css'; case '.js': return 'text/javascript'; default: return 'text/html'; &#125;&#125; model/getmimefromfile_bac.js 1234567891011121314151617exports.getMime=function(fs,extname)&#123; /*获取后缀名的方法*/ //.html console.log('1'); fs.readFile('./mime.json',function(err,data)&#123; if(err)&#123; console.log('mime.json文件不存在'); return false; &#125; //console.log(data.toString()); var Mimes=JSON.parse(data.toString()); //console.log(Mimes[extname]); console.log('2'); return Mimes[extname] || 'text/html'; &#125;) console.log('3');&#125;// 1 3 undefined model/getmimefromfile.js 1234567exports.getMime=function(fs,extname)&#123; /*获取后缀名的方法*/ //把读取数据改成同步 var data=fs.readFileSync('./mime.json'); //Sync解决异步问题 //console.log(data.toString()); 转换成json字符串 var Mimes=JSON.parse(data.toString()); /*把json字符串转换成json对象*/ return Mimes[extname] || 'text/html';&#125;]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[08_Arrow_Function]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-08-Arrow-Function%2F</url>
    <content type="text"><![CDATA[08-Arrow Function 箭头函数 1、 Arrow Function 123function sayHi() &#123; console.log('Hello world')&#125; 1234const sayHi = user =&gt; &#123; console.log('Hello world ' + user)&#125;sayHi('danny'); 2、 fix ‘this’ problem (function在对象里叫method) 12345678var person = &#123; name: 'Danny', gender: 'male', testing: function() &#123; console.log(this) &#125;&#125;person.testing() 1&#123; name: 'Danny', gender: 'male', testing: [Function: testing] &#125; ES6: this returns to person object 12345678910var person = &#123; name: 'Danny', gender: 'male', testing: function() &#123; (() =&gt; &#123; console.log(this) &#125;)() &#125;&#125;person.testing() 3、arrow function不能来做constructor 12345678910111213141516171819function Person(first, last) &#123; this.firstName = first; this.lastName = last;&#125;class Person &#123; constructor(first, last) &#123; this.firstName = first; this.lastName = last; &#125;&#125;let Person = (first, last) =&gt; &#123; // wrong this.firstName = first, this.lastName = last&#125;var danny = new Person('danny', 'huang')console.log('danny', danny)]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[07_Array_Cardio]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-07-Array-Cardio%2F</url>
    <content type="text"><![CDATA[07-Array Cardio处理Array forEach map Filter Reduce 1234567891011121314151617181920212223242526272829303132const users = [ &#123; id: 1, name: 'Allison', age: 4, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 1, gender: 'male' &#125;, &#123; id: 3, name: 'Irene', age: 35, gender: 'female' &#125;, &#123; id: 4, name: 'Danny', age: 32, gender: 'male' &#125;, &#123; id: 5, name: 'Alin', age: 25, gender: 'female' &#125;,] 1、forEach： log each name 123users.forEach((user) =&gt; &#123; console.log(user.name)&#125;) 12345AllisonDerekIreneDannyAlin 把每个user age乘以2 1234users.forEach((user, index) =&gt; &#123; return users[index].age = user.age * 2&#125;)console.log('users', users) 12345users [ &#123; id: 1, name: 'Allison', age: 8, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 2, gender: 'male' &#125;, &#123; id: 3, name: 'Irene', age: 70, gender: 'female' &#125;, &#123; id: 4, name: 'Danny', age: 64, gender: 'male' &#125;, &#123; id: 5, name: 'Alin', age: 50, gender: 'female' &#125; ] 2、map log username 1users.map(user =&gt; console.log(user.name))//只有一个参数不需要(),只有一行不需要&#123;&#125; 12345AllisonDerekIreneDannyAlin 把每个user age乘以2 12345678910let doubled = users.map((user) =&gt; &#123; let tempObj = &#123;&#125; // tempObj不能直接=，要复制，因为tempObj是reference tempObj = &#123;...user&#125; tempObj.age = user.age * 2 return tempObj&#125;)console.log('doubled', doubled)console.log('users', users)// map won't change original array// foreach will change original array 12345678910doubled [ &#123; id: 1, name: 'Allison', age: 8, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 2, gender: 'male' &#125;, &#123; id: 3, name: 'Irene', age: 70, gender: 'female' &#125;, &#123; id: 4, name: 'Danny', age: 64, gender: 'male' &#125;, &#123; id: 5, name: 'Alin', age: 50, gender: 'female' &#125; ]users [ &#123; id: 1, name: 'Allison', age: 4, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 1, gender: 'male' &#125;, &#123; id: 3, name: 'Irene', age: 35, gender: 'female' &#125;, &#123; id: 4, name: 'Danny', age: 32, gender: 'male' &#125;, &#123; id: 5, name: 'Alin', age: 25, gender: 'female' &#125; ] map不会改变原来的array，但是forEach会改变原来的array。 3、Filter 只要age低于18 123456let kids = users.filter((user) =&gt; &#123; let tempObj = &#123;&#125; tempObj = &#123;...user&#125; return tempObj.age &lt; 18&#125;)console.log('kids',kids); 12kids [ &#123; id: 1, name: 'Allison', age: 4, gender: 'female' &#125;, &#123; id: 2, name: 'Derek', age: 1, gender: 'male' &#125; ] Only female 123456let female = users.filter((user) =&gt; &#123; let tempObj = &#123;&#125; tempObj = &#123;...user&#125; return tempObj.gender === 'female'&#125;)console.log('female', female) 123female [ &#123; id: 1, name: 'Allison', age: 4, gender: 'female' &#125;, &#123; id: 3, name: 'Irene', age: 35, gender: 'female' &#125;, &#123; id: 5, name: 'Alin', age: 25, gender: 'female' &#125; ] 4、Reduce 最常用就是把数组中的数字加在一起 123456789let totalAge = users.reduce((acc, obj) =&gt; &#123; return acc + obj.age&#125;, 0) //第一个值acc设为0// 0 + 4 = 4// 4 + 1 = 5// 5 + 35 = 40// 40 + 32 = 72// 72 + 25 = 97console.log(totalAge); //97]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[06_Promise]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-06-Promise%2F</url>
    <content type="text"><![CDATA[06-Node.js Promise处理异步 一、同步与异步 Async = 非同步 sync = 同步 synchronous = one at a time 第一个执行完才执行下一个 Asynchronous = more one at a time 执行了就马上换下一个指令 二、Async Actions click、Ajax、Setlnterval 解决方法：callback、Promise、Async await 1、callback callbak是一个function里面的function 12345var proveIt = function()&#123; alert('you triggered'+this.id);&#125;document.getElementById('clicker').addEventListener('click',proveIt);// click之后就执行proveIt这个function 2、Promise ES6 return resolve or reject ES6 Promise的实例，会确保Promise一实例化后就固定住状态，要不就是“已实现”，要不就是“已拒绝”。 123456789const promise = new Promise(function(resplve,reject)&#123; resolve(value); // 成功时 reject(reason); // 失败时&#125;);promise.then(function(value)&#123; // 已实现时&#125;,function(reason)&#123; // 已拒绝时&#125;); Examples: SetInterval 1234567891011121314// console.log(Math.floor(Math.random()*100)+1);// console.log(Math.random());function logWord(word)&#123; setTimeout(function()&#123; console.log(word); &#125;,Math.floor(Math.random()*100)+1);&#125;function logAll()&#123; logWord('1'); logWord('2'); logWord('3');&#125;logAll();//每一次结果都不一样，因为是异步 SetInterval是异步的，所以它执行了第一个指令就会马上执行下一个，所以顺序不会固定。 (1) 解决方法：callback 1234567891011121314function logWord(word,callback)&#123; setTimeout(function()&#123; console.log(word); callback(); &#125;,Math.floor(Math.random()*100+1));&#125;function logAll()&#123; logWord('1',function()&#123; logWord('2',function()&#123; logWord('3',function()&#123;&#125;) &#125;) &#125;)&#125;logAll(); Callbak Hell：callback要debug建议用console.log callback一直callback下去，如果中间哪个环节错了，很难让人debug。 (2) 解决方法：Promise 1234567891011121314151617function logWord(word)&#123; return new Promise(function(resolve,reject)&#123; setTimeout(function()&#123; console.log(word); resolve(); &#125;,Math.floor(Math.random()*100+1)); &#125;);&#125;function logAll()&#123; logWord('1') .then(function()&#123; return logWord('2'); &#125;).then(function()&#123; return logWord('3'); &#125;)&#125;logAll(); Promise可以写得更简洁一点，ES6有一个箭头函数，所以还可以这么写： 12345function logAll()&#123; logWord('1') .then(()=&gt;logWord('2')) .then(()=&gt;logWord('3'))&#125;]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[05_Fs_Module]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-05-Fs-Module%2F</url>
    <content type="text"><![CDATA[05-Node.js fs模块 fs.stat 检测是文件还是目录 fs.mkdir 创建目录 fs.writeFile 创建写入文件 fs.appendFile 追加文件 fs.readFile 读取文件 fs.readdir 读取目录 fs.rename 重命名 fs.rmdir 删除目录 fs.unlink 删除文件 fs.createReadStream 从文件流中读取数据 fs.createWriteStream 写入文件 管道流 1、fs.stat 检测是文件还是目录 12345678910const fs = require('fs') fs .stat('hello.js',(error,stats) =&gt;&#123; if(error)&#123; console.log(error) &#125;else&#123; console.log(stats) console.log(`文件：$&#123;stats.isFile()&#125;`) console.log(`目录：$&#123;stats.isDirectory()&#125;`) &#125; &#125;) 12345678910111213141516171819202122&gt; node testStats &#123; dev: 315831262, mode: 33206, nlink: 1, uid: 0, gid: 0, rdev: 0, blksize: undefined, ino: 2533274790764158, size: 17, blocks: undefined, atimeMs: 1553754246606.595, mtimeMs: 1553754257410.068, ctimeMs: 1553754257410.068, birthtimeMs: 1553754246606.595, atime: 2019-03-28T06:24:06.607Z, mtime: 2019-03-28T06:24:17.410Z, ctime: 2019-03-28T06:24:17.410Z, birthtime: 2019-03-28T06:24:06.607Z &#125;文件：true目录：false 2、fs.mkdir 创建目录 123456789const fs = require ('fs') fs.mkdir('logs', (error) =&gt; &#123; if(error)&#123; console.log(error) &#125;else&#123; console.log('成功创建目录：logs') &#125;&#125;) // 创建logs目录（在同一目录下） 3、fs.writeFile 创建写入文件 如果不存在就创建，已经存在会覆盖 123456789const fs = require ('fs') fs.writeFile('logs/hello.log','您好~\n',(error)=&gt;&#123; if(error)&#123; console .log(error) &#125;else&#123; console .log('成功写入文件') &#125; &#125;) // 在logs目录下创建了hello.log文件，内容为'您好~' 4、fs.appendFile 追加文件 如果文件不存在就创建，如果存在就追加内容 123456789const fs = require ('fs') fs.appendFile('logs/hello.log','hello~\n',(error)=&gt;&#123; if(error)&#123; console .log(error) &#125;else&#123; console .log('成功写入文件') &#125; &#125;) // 在logs目下的hello.log文件中追加内容'hello~' 5、fs.readFile 读取文件 12345678const fs = require ('fs') fs.readFile('logs/hello.log','utf8',(error,data)=&gt;&#123; if(error)&#123; console .log(error) &#125;else&#123; console .log(data) &#125;&#125;) 123&gt;node test您好~hello~ 6、fs.readdir 读取目录 拿到一个文件夹下面的所有目录和文件 12345678const fs = require('fs') fs.readdir('logs',(error,files)=&gt;&#123; if(error)&#123; console.log(error) &#125;else&#123; console.log(files) &#125;&#125;) 12&gt; node test[ 'hello.log' ] 7、fs.rename 重命名 123456789const fs = reuiure('fs');fs.rename('logs/hello.log','logs/haha.log',function(err)&#123; if(err)&#123; console.log(err); return false; &#125; console.log('重命名成功');&#125;)// logs目录下的hello.log文件重命名为haha.log 可以用作剪切功能 123456789const fs = require('fs');fs.rename('html/css/basic.css','html/style.css',function(err)&#123; if(err)&#123; console.log(err); return false; &#125; console.log('剪切成功');&#125;)// html/css目录下的basic.css被剪切到style.css中（basic.css不见了，style.css存在，但内容变为原来basic.css中的内容） 8、fs.rmdir 删除目录 12345678910const fs = require('fs');const fs = require('fs');fs.rmdir('logs',(error)=&gt;&#123; if(error) &#123; console.log(error) &#125;else&#123; console.log('成功的删除了目录：logs') &#125; &#125;)// 只有当logs目录下为空（没有任何文件和目录时才可被删除) 9、fs.unlink 删除文件 123456789const fs = require('fs');var file = 'haha.log';fs.unlink(`logs/$&#123;file&#125;`,(error)=&gt;&#123; if(error)&#123; console.log(error) &#125;else&#123; console.log(`成功的删除了文件: $&#123;file&#125;`) &#125; &#125;) 12&gt;node test成功的删除了文件: haha.log 10、fs.createReadStream 以文件流的方式读取数据 12345678910111213141516171819const fs = require ('fs') var fileReadStream = fs.createReadStream('data.json') let count =0; var data =''; // 处理事件流：data、end、errorfileReadStream.on('data',(chunk)=&gt;&#123; console.log(`$&#123; ++ count &#125; 接收到：$&#123;chunk.length&#125;`); data +=chunk &#125;) fileReadStream .on('end',()=&gt;&#123; console.log('--- 结束 ---'); console.log( count ); console.log( data );&#125;) fileReadStream.on('error',(error)=&gt;&#123; console.log(error) &#125;) 12345678910111213141516const fs = require('fs');var readStream = fs.createReadStream('input.txt');var data = ''; // 保存数据var count = 0;// 处理事件流：data、end、errorreadStream.on('data',function(chunk)&#123; data+=chunk; count++;&#125;);readStream.on('end',function(chunk)&#123; console.log(count); // 用文件流的方式读取，文件比较小的时候读取一次就读完了；文件比较大的时候，要读取多次 console.log(data);&#125;)readStream.on('error',function(err)&#123; console.log(err);&#125;) 11、fs.createWriteStream 以文件流的方式写入文件 1234567891011121314const fs = require('fs');var data = '我是从数据库获取的数据，我要保存进文件里\n';// 创建一个可写入的流，写入到文件output.txtvar writeStream = fs.createWriteStream('output.txt');for(let i=0;i&lt;100;i++)&#123; writeStream.write(data,'utf8'); // 写入数据&#125;writeStream.end(); // 标记写入完成writeStream.on('finish',function()&#123; // finish与end配对才有用 console.log('写入完成');&#125;)writeStream.on('error',function()&#123; console.log('写入失败');&#125;) 12、readStream.pipe(writeStream) 以管道流的方式读取文件和写入文件 管道提供了一个输出流到输入流的机制。通常我们用于从一个流中获取数据并将数据传 递到另外一个流中。 我们把文件比作装水的桶，而水就是文件里的内容，我们用一根管子(pipe)连接两个桶使得水从一个 桶(source)流入另一个桶(dest)，这样就慢慢的实现了大文件的复制过程。 以下实例我们通过读取一个文件内容并将内容写入到另外一个文件中。 12345678const fs = require('fs');// 创建一个可读流var readStream = fs.createReadStream('input.txt');// 创建一个可写流var writeStream = fs.createWriteStream('output.txt');// 管道读写操作:读取input.txt文件内容，并将内容写入到output.txt文件中readStream.pipe(writeStream);console.log('程序执行完毕'); 练习 1、判断服务器上面有没有upload目录，如果没有的话就创建这个目录(一般用于图片上传，要上传到一个目录，如果不存在就要创建)： 1234567891011121314151617const fs = require('fs');fs.stat('upload',function(err,stats)&#123; if(err)&#123; // 目录不存在 --&gt; 如果不存在就要执行创建操作 // console.log(err); // return false; fs.mkdir('upload',function(error)&#123; if(error)&#123; console.log(error); return false; &#125; console.log('创建成功'); //如果没有此目录就创建此目录 &#125;); &#125;else&#123; console.log('目录已经存在'); console.log(stats.isDirectory()); &#125;&#125;); 12345&gt; node test创建成功&gt; node test目录已经存在true 2、找出html目录下面的所有目录并打印出来： 1234567891011121314151617const fs = require('fs');fs.readdir('html',function(err,files)&#123; if(err)&#123; console.log(err); &#125;else&#123; //拿到html目录下的所有文件和目录 // console.log(files); // 判断是目录还是文件 for(let i=0;i&lt;files.length;i++)&#123; // for循环遍历所有目录文件 console.log(files[i]); // 这里打印，files[i]就是存在的 fs.stat(files[i],function(error,stats)&#123; //判断是目录还是文件 // fs.stat是异步，先打印一下files[i] console.log(files[i]); //undefined // 你没法在这里拿到files[i],这是错误的写法 &#125;) &#125; &#125;&#125;); 正确写法：匿名自执行函数 123456789101112131415161718192021var filesArr = [];fs.readdir('html',function(err,files)&#123; if(err)&#123; console.log(err); return false; &#125;else&#123; // 判断是目录还是文件夹 console.log(files); // 数组：包含目录下所有目录和文件 (function getFile(i)&#123; if(i==files.length)&#123; console.log(filesArr); // 打印出所有的目录 return false; &#125; fs.stat('html/'+files[i],function(error,stats)&#123; if(stats.isDirectory())&#123; // 如果是目录 filesArr.push(files[i]); // 就保存数据 &#125; getFile(i+1); // 递归调用 &#125;) &#125;)(0) // 立即执行函数 &#125;&#125;) 解决异步问题 nodejs 是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高，nodejs的每一个api都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。 我们经常使用的File的readFile事件就是一个并发事件。 123456console.log("1");fs.readFile("mime.json",function (err,data) &#123; console.log(data); console.log('2');&#125;);console.log("3"); 代码的执行顺序是1-3-2；但是我们很多时候会需要1-2-3的方式去执行方法，这个时候我们可以通过以下三种方式去解决这个问题： 1、将readFile改成同步方法。即readFile–&gt;readFileSync 12const fsSync = fs.readFileSync('./mime.json');const mimeObj = JSON.parse(fsSync.toString()); 2、通过回调的方式解决 123456789101112console.log("1");function getMime(callback)&#123; fs.readFile("mime.json",function (err,data) &#123; // console.log(data.toString()); callback(data.toString()) ; console.log("2"); &#125;);&#125;getMime(function (result) &#123; console.log(result); console.log("3");&#125;); 3、nodejs 有多个内置的事件，我们可以通过引入events模块，并通过实例化eventEmitter类来绑定和监听事件，通过事件驱动的方式解决异步的问题，也可以说成是广播或者订阅。 广播和接收广播 ---- 订阅和通知： 1234567891011const events = require("events");const eventEmitter = new events.EventEmitter();//监听广播eventEmitter.on('to_parent',function () &#123; //接受到了广播事件 console.log("接受到了广播事件")&#125;);setTimeout(function () &#123; console.log("开始广播"); eventEmitter.emit("to_parent","发送数据");&#125;,2000); 在readFIle中这样使用： 12345678910111213console.log("1");function getMime()&#123; fs.readFile("mime.json",function (err,data) &#123; eventEmitter.emit("to_parent",data); console.log("2"); &#125;);&#125;getMime();eventEmitter.on('to_parent',function (data) &#123; //接受到了广播事件 console.log("接受到了广播事件") console.log("3");&#125;); 4、使用Promise方法—略 Promise 是一种对异步操作的封装，可以通过独立的接口添加在异步操作执行成功、失败时执行的方法。主流的规范是 Promises/A+。 Promise中有几个状态： pending: 初始状态, 非 fulfilled 或 rejected； fulfilled: 成功的操作，为表述方便，fulfilled 使用 resolved 代替； rejected: 失败的操作。 pending可以转化为fulfilled或rejected并且只能转化一次，也就是说如果pending转化到fulfilled状态，那么就不能再转化到rejected。并且fulfilled和rejected状态只能由pending转化而来，两者之间不能互相转换。 Promise的基本语法 Promise实例必须实现then这个方法 then()必须可以接收两个函数作为参数 then()返回的必须是一个Promise实例 5、async/await方法]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[04_npm]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-04-npm%2F</url>
    <content type="text"><![CDATA[04-包与npm、第三方模块安装、package.json、cnpm 一、包与 NPM 1、包 Nodejs 中除了它自己提供的核心模块外，我们可以自定义模块，也可以使用第三方的模块。Nodejs 中第三方模块由包组成，可以通过包来对一组具有相互依赖关系的模块进行统一管理。 完全符合 CommonJs 规范的包目录一般包含如下这些文件。 • package.json :包描述文件。 • bin :用于存放可执行二进制文件的目录。 • lib :用于存放 JavaScript 代码的目录。 • doc :用于存放文档的目录。 在 NodeJs 中通过 NPM 命令来下载第三方的模块（包）。 123npm i silly-datetime –save var sd = require('silly-datetime'); sd.format(new Date(), 'YYYY-MM-DD HH:mm'); 2、NPM介绍 npm是世界上最大的开放源代码的生态系统。我们可以通过npm下载各种各样的包， 这些源代码（包）我们可以在 https://www.npmjs.com 找到。 npm 是随同 NodeJS 一起安装的包管理工具，能解决 NodeJS 代码部署上的很多问题， 常见的使用场景有以下几种： 允许用户从 NPM 服务器下载别人编写的第三方包到本地使用。(silly-datetime) 允许用户从 NPM 服务器下载并安装别人编写的命令行程序(工具)到本地使用。 （supervisor） 允许用户将自己编写的包或命令行程序上传到 NPM 服务器供别人使用。 二、NPM 命令详解。 123456npm -v // 查看npm版本npm install moduleName //安装模块 npm uninstall moudleName //卸载模块 npm list //查看当前目录下已安装的node包npm info jquery //查看jquery的版本 npm install jquery@1.8.0 //指定版本安装 三、package.json 1、创建 package.json 12npm init npm init –yes //yes表示一路默认创建，还有 -f表示force 2、package.json 文件就是一个JSON对象，该对象的每一个成员就是当前项目的一项设置。 123456789101112131415&#123; &quot;name&quot;: &quot;test&quot;, //项目名称&quot;version&quot;: &quot;1.0.0&quot;, //项目版本号&quot;description&quot;: &quot;test&quot;, &quot;main&quot;: &quot;main.js&quot;, &quot;keywords&quot;: [ &quot;test&quot; ], &quot;author&quot;: &quot;wade&quot;, &quot;license&quot;: &quot;MIT&quot;, &quot;dependencies&quot;: &#123; &quot;express&quot;: &quot;^4.10.1&quot; &#125;, &quot;devDependencies&quot;: &#123; &quot;jslint&quot;: &quot;^0.6.5&quot; &#125; &#125; 必须字段： 12name //项目名称version //项目版本号 可选字段 1234title //标题author //是一个人contributors //是一组人homepage // 3、安装模块并把模块写入 package.json(依赖) 123npm install babel-cli --save-dev npm install 模块 --save npm install 模块 --save-dev 12npm install -d 就是npm install --save-devnpm insatll -s 就是npm install --save Dependencies一词的中文意思是依赖和附属的意思，而dev则是develop（开发）的简写。 所以它们的区别在 package.json 文件里面体现出来的就是，使用 --save-dev 安装的插件，被写入到 devDependencies 域里面去，而使用 --save 安装的插件，则是被写入到 dependencies 区块里面去。 package.json 文件里面的 devDependencies 和 dependencies 对象有什么区别呢？devDependencies 里面的插件只用于开发环境，不用于生产环境，而 dependencies 是需要发布到生产环境的。 使用 npm i 安装package.json里的依赖时，两部分的包都会pull下来。 比如： 我们写一个项目要依赖于jQuery，没有这个包的依赖运行就会报错，这时候就把这个依赖写入dependencies ； 而我们使用的一些构建工具比如glup、webpack这些只是在开发中使用的包，上线以后就和他们没关系了，所以将它写入devDependencies。]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[03_user_defined_module]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-03-user-defined-module%2F</url>
    <content type="text"><![CDATA[03-CommonJS和Nodejs模块、自定义模块 一、什么是 CommonJs？ JavaScript 是一个强大的面向对象语言，它有很多快速高效的解释器。然而， JavaScript 标准定义的 API 是为了构建基于浏览器的应用程序。并没有制定一个用于更广泛的应用程序的标准库。CommonJS 规范的提出,主要是为了弥补当前 JavaScript 没有标准的缺陷。它的终 极目标就是：提供一个类似 Python，Ruby 和 Java 语言的标准库,而不只是停留在小脚本程序的阶段。用 CommonJS API 编写出的应用，不仅可以利用 JavaScript 开发客户端应用，而且还可以编写以下应用。 •服务器端 JavaScript 应用程序。 （nodejs） •命令行工具。 •桌面图形界面应用程序。 CommonJS 就是模块化的标准，nodejs就是 CommonJS（模块化）的实现。 二、Nodejs 中的模块化 Node 应用由模块组成，采用 CommonJS 模块规范。 1、 在 Node中，模块分为两类: 一类是 Node 提供的模块,称为核心模块；另一类是用户编写的模块，称为文件模块。 • 核心模块部分在 Node 源代码的编译过程中，编译进了二进制执行文件。在 Node 进程启动时，部分核心模块就被直接加载进内存中，所以这部分核心模块引入时，文件定位和编译执行这两个步骤可以省略掉，并且在路径分析中优先判断，所以它的加载速度是最快的。 如：HTTP 模块 、URL 模块、Fs模块都是 nodejs 内置的核心模块，可以直接引入使用。 • 文件模块则是在运行时动态加载，需要完整的路径分析、文件定位、编译执行过程、 速度相比核心模块稍微慢一些，但是用的非常多。这些模块需要我们自己定义。接下来我们看一下 nodejs 中的自定义模块。 2、CommonJS（Nodejs）中自定义模块的规定： （1）我们可以把公共的功能抽离成为一个单独的 js 文件作为一个模块，默认情况下面这 个模块里面的方法或者属性，外面是没法访问的。如果要让外部可以访问模块里面的方法或 者属性，就必须在模块里面通过exports或者module.exports暴露属性或者方法。 （2）在需要使用这些模块的文件中，通过require的方式引入这个模块。这个时候就可以 使用模块里面暴露的属性和方法。 3、 定义使用模块： tools.js 1234567891011121314// 定义一个 tools.js 的模块 // 模块定义 var tools = &#123; sayHello: function() &#123; return 'hello NodeJS'; &#125;, add: function(x, y) &#123; return x + y; &#125; &#125;; // 模块接口的暴露 // module.exports = tools ; exports.sayHello = tools.sayHello; exports.add = tools.add; 1234var http = require ('http'); // 引入自定义的 tools.js 模块 var tools= require ('./tools'); tools.sayHello(); //使用模块 两种方法：方法一 12345module.exports = tools;-----------------------var tools = require('./tools');tools.sayHello();tools.add(); ​ 方法二 123456exports.sayHello = tools.sayHello;exports.add = tools.add;---------------------------------var tools = require('./tools');tools.sayHello();tools.add(); 由此想到的构造一个模块的方法： 12345678910111213141516171819var tools = &#123; tools01:&#123; hello:function()&#123; console.log('hello'); &#125;, elaine:function()&#123; console.log('elaine'); &#125; &#125;, tools02 :&#123; hi:function()&#123; console.log('hi'); &#125;, hongkong:function()&#123; console.log('hongkong'); &#125; &#125;&#125;module.exports = tools; 123var tools = require('./01');tools.tools01.hello();tools.tools02.hi(); 三、npm init 生成 package.json 1npm init -y]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[02_http_module]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-02-http-module%2F</url>
    <content type="text"><![CDATA[02-Node.js—http模块、url模块、nodemon工具 一、Node.js创建第一个应用 1、引入http模块 1var http = require("http"); 2、创建服务器 接下来我们使用 http.createServer() 方法创建服务器，并使用 listen 方法绑定 8888 端口。 函数通过 request, response 参数来接收和响应数据。 server.js 1234567891011var http = require('http'); http.createServer(function (request, response) &#123; // 发送 HTTP 头部 // HTTP 状态值: 200 : OK //设置 HTTP 头部，状态码是 200，文件类型是 html，字符集是 utf8 response.writeHead(200,&#123;"Content-Type":"text/html;charset=UTF-8"&#125;); // 发送响应数据 "Hello World" res.end("哈哈哈哈，我买了一个 iPhone" + (1+2+3) + "s"); &#125;).listen(8888); // 终端打印如下信息 console.log('Server running at http://127.0.0.1:8888/'); 3、运行程序 用命令行切换到程序对应目录。通过 node 命令运行程序。 1node server.js 浏览器运行 : 127.0.0.1:8888 我们本地写一个 js，打死都不能直接拖入浏览器运行，但是有了 node，我 们任何一个 js 文件，都可以通过 node 来运行。也就是说，node 就是一个 js 的执行环境。 二、HTTP 模块、URL 模块 1234567891011//引用模块 var http = require("http"); //创建一个服务器，回调函数表示接收到请求之后做的事情 var server = http.createServer(function(req,res)&#123; //req 参数表示请求，res 表示响应 console.log("服务器接收到了请求" + req.url); res.end(); //End方法使Web服务器停止处理脚本并返回当前结果 &#125;); //监听端口 server.listen(3000,"127.0.0.1"); 设置一个响应头： 1res.writeHead(200,&#123;"Content-Type":"text/html;charset=UTF8"&#125;); 我们现在来看一下 req 里面能够使用的东西。 最关键的就是 req.url 属性，表示用户的请求 URL 地址。所有的路由设计，都是通过 req.url 来实现的。 我们比较关心的不是拿到 URL，而是识别这个 URL。 识别 URL，用到了下面的 url 模块 ： 123url.parse() //解析URL url.format(urlObject) //是上面 url.parse()操作的逆向操作 url.resolve(from, to) //添加或者替换地址 123456789101112131415//https://user:pass@sub.host.com:8080/p/a/t/h?query=string#hashUrl &#123; protocol: 'https:', // 协议 slashes: true, auth: 'user:pass', // 用户名密码 host: 'sub.host.com:8080', // host主机名 port: '8080', // 端口号 hostname: 'sub.host.com', // 主机名不带端口号 hash: '#hash', // 哈希值 search: '?query=string',// 查询字符串 query: 'query=string', // 请求参数 pathname: '/p/a/t/h', // 路径名 path: '/p/a/t/h?query=string', // 带查询的路径名 href: 'https://user:pass@sub.host.com:8080/p/a/t/h?query=string#hash' // 原字符串本身&#125; 1、url.parse() 例子1 1234567891011var http = require('http');http.createServer(function(req,res)&#123; console.log(req.url); res.writeHead(200,&#123;"Content-Type":"text/html;charset=UTF-8"&#125;); res.write('Hello World.'); res.end();&#125;).listen(8888);console.log('Server running at http://127.0.0.1:8888/');//输入localhost:8888 得到: / /favicon.ico//输入localhost:8888/news 得到: /news /favicon.ico//输入localhost:8888/news?aid=123 得到: /news?aid=123 /favicon.ico 例子2 12345678910111213var http = require('http');var url = require('url');http.createServer(function(req,res)&#123;// 输入localhost:8888/news?aid=123&amp;cid=3 拿到aid和cid// req.url 获取浏览器url输入的信息// url.parse()第二个参数是true的时候，表示把get传值转换成对象 console.log(url.parse(req.url,true).query.aid); // 获取url的get传值 console.log(url.parse(req.url,true).query.cid); // 获取url的get传值 res.writeHead(200,&#123;"Content-Type":"text/html;charset=UTF-8"&#125;); res.write('Hello World.'); res.end();&#125;).listen(8888);console.log('Server running at http://127.0.0.1:8888/'); 2、url.format(urlObject) 一般用不着 3、url.resolve() 12&gt;url.resolve(&apos;http://example.com/&apos;,&apos;/one&apos;);&apos;http://example.com/one&apos; 三、Nodejs自启动工具nodemon 1、全局安装nodemon 1npm install -g nodemon 2、使用 以前要么是 node app，要么是npm start，有了nodemon以后，启动程序直接进入根目录，nodemon就可以了。 修改文件后，会自动重启。]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[01_nodejs_introduction]]></title>
    <url>%2F2019%2F04%2F22%2Fnodejs-01-nodejs-introduction%2F</url>
    <content type="text"><![CDATA[01-Node.js介绍 😊Node.js 是一个 Javascript 运行环境(runtime)。它让 JavaScript 可以开发后端程序，实现几乎其他后端语言实现的所有功能，可以与 PHP、JSP、Python、Ruby 等后端语言平起平坐。 Nodejs 是基于 V8 引擎，V8 是 Google 发布的开源 JavaScript 引擎，本身就是用于 Chrome 浏览器 的 JS 解释部分，但是 Ryan Dahl 这哥们，鬼才般的，把这个 V8 搬到了服务器上，用于做服务器的软件。 短短几年的时间，Node 取得了巨大的成功。在企业界，Node 的应用也越来越广泛，2016 年 nodeJS 官方的调查报告。2016 年全球有 350 万开发者使用 nodeJS,相比去年保持了 100%的增长率。像 Yahoo、Microsoft 这样的大公司，有好多应用已经迁移到 Node 了。国内的阿里巴巴、网易、腾讯、新浪、百度等公司的很多线上产品也纷纷改用 Node 开发，并取得了很好的效果。据统计很多 A 轮、 B 轮的创业公司更喜欢使用 NodeJs 开发。 一、Node.js的优势 Node 打破了过去 JavaScript 只能在浏览器中运行的局面。前后端编程环境统一，可以大大降低开发成本。 超强的高并发能力：Node.js 的首要目标是提供一种简单的、用于创建高性能服务器及可在该服务器中运行的各种应用程序的开发工具。 在 Java、PHP 或者.net 等服务器端语言中，会为每一个客户端连接创建一个新的线程。而每个线程需要耗费大约 2MB 内存。也就是说，理论上，一个 8GB 内存的服务器可以同时连接的最大用户数为 4000 个左右。要让 Web 应用程序支持更多的用户，就需要增加服务器的数量，而 Web 应用程序的硬件成本当然就上升了。 Node.js 不为每个客户连接创建一个新的线程，而仅仅使用一个线程。当有用户连接了，就触发一个 内部事件，通过非阻塞 I/O、事件驱动机制，让 Node.js 程序宏观上也是并行的。使用 Node.js，一个 8GB 内存的服务器，可以同时处理超过 4 万用户的连接。 实现高性能服务器 ：严格地说，Node.js 是一个用于开发各种Web 服务器的开发工具。在 Node.js 服务器中，运行的是高性能 V8 JavaScript 脚本语言，该语言是一种可以运行在服务器端的 JavaScript 脚本语言。 那么，什么是 V8 JavaScript 脚本语言呢？该语言是一种被 V8 JavaScript 引擎所解析并执行的脚本语言。V8 JavaScript 引擎是由 Google 公司使用 C++语言开发的一种高性能 JavaScript 引擎，该引擎并不局限于在浏览 器中运行。Node.js 将其转用在了服务器中，并且为其提供了许多附加的具有各种不同用途的 API。例如， 在一个服务器中，经常需要处理各种二进制数据。在 JavaScript 脚本语言中，只具有非常有限的对二进制数 据的处理能力，而 Node.js 所提供的 Buffer 类则提供了丰富的对二进制数据的处理能力。 另外，在V8 JavaScript 引擎内部使用一种全新的编译技术。这意味着开发者编写的高端的 JavaScript 脚本代 码与开发者编写的低端的C语言具有非常相近的执行效率，这也是Node.js 服务器可以提供的一个重要特性。 开发周期短、开发成本低、学习成本低：Node.js 自身哲学，是花最小的硬件成本，追求更高的并发，更高的处理性能。 二、Node.js适合做什么？ 前后端编程语言环境统一。这类代表是雅虎。雅虎开放了 Cocktai 框架，利用自己深厚的前端沉淀，将 YUI3 这个前端框架的能力借助 Node 延伸到服务器端，使得使用者摆脱了日常工作中一边写 JavaScript—边写 PHP 所帯来的上下文交换负担。 Node带来的高性能 I/0 用于实时应用。Voxer 将 Node应用在实时语音上。国内腾讯的朋友网将 Node 应用在长连接中，以提供实时功能，花瓣网、蘑菇街等公司通过 socket.io 实现实时通知的功能。 并行 I/0 使得使用者可以更高效地利用分布式环境。阿里巴巴 eBay 是这方面的典型。 阿里巴巴的NodeFox和eBay的ql.io都是借用Node 并行 I/O 的能力，更高效地使用已有的数据。 并行 I/O •有效利用稳定接口提升Web渲染能力。雪球财经和 Linkedln 的移动版网站均是这种案例，撇弃同步等待式的顺序请求，大胆采用并行丨/〇，加速数据的获取进而提升 Web 的渲染速度。 云计算平台提供 Node 支持。微软将 Node 引入 Azure 的开发中，阿里云、百度均纷纷 在云服务器上提供 Node 应用托管服务，Joyent 更是云计算中提供 Node 支持的代表。这类平台看重 JavaScript 带来的开发上的优势，以及低资源占用、高性能的特点。 游戏开发领域。游戏领域对实时和并发有很高的要求，网易开源了 pomelo 实时框架， 可以应用在游戏和高实时应用中。 工具类应用。过去依赖 java 或其他语言构建的前端工具类应用，纷纷被一些前端工程 师用 Node 重写，用前端熟悉的语言为前端构建熟悉的工具。 三、Node.js环境搭建 Node.js 和 Java 非常像，跨平台的。不管是 Linux 还是 windows 编程是完全一致的（有一些不一样，比如路径的表述）。Linux 版本的 Node.js 环境和 windows 环境是不一样的，但是编程语言一样。 安装完成后，win+R:cmd—&gt;输入node --version (记得配置path) 四、Node.js开发工具配置 工欲善其事必先利其器，我选择的是VSCode，因为它强大的插件。微软有 Visual Studio这个宇宙最强IDE，Visual Studio Code 自然也不会弱(宇宙最强编辑器)，下面介绍一些VSCode中好用的插件： 1、代码片段(Snippet)插件 当你要从事更加前沿的开发的时候，你就需要一些额外的代码片段插件来辅助你编写ES6/ES7代码。 VS Code JavaScript(ES6) snippets：它是如今最流行的，安装了超过120万的插件。该插件为JavaScript、TypeScript、HTML、React和Vue提供了ES6语法支持。 JavaScript Snippet Pack：JavaScript代码片段集合。 Atom JavaScript Snippet：从Atom移植过来的JavaScript代码片段。 JavaScript Snippets：ES6代码片段，并且包含Mocha、Jasmine和其它BDD测试框架的代码片段。 2、语法插件 VS Code自带的针对JavaScript的语法高亮已经相当不错。你可以安装不同的主题来改变代码的颜色。不过，如果你想要更好的可读性，可以安装代码高亮插件。这里有一些推荐： JavaScript Atom Grammar：该插件将Visual Studio Code自带的JavaScript语法替换成了Atom编辑器的版本。 Babel JavaScript：支持 ES201x JavaScript、React、FlowType和GraphQL代码的语法高亮。 DotENV：如果你使用Node，你需要它。DotEnv提供.env文件的语法高亮。 3、码风格检查插件 为了保证整个团队代码格式的一致性，使用一个代码风格检查工具可以做到。ESLint是最流行的一个工具，因为它支持非常多的代码风格，包括标准的、Google和Airbnb。下面列出一些推荐的插件： ESLint：这个是最流行的代码风格检查插件，有超过670万的安装量。你可以在.eslintrc.json中配置。 JSHint：JSHint的代码风格检查插件。在项目的根目录下面，用.jshintrcfile配置。 JavaScript Standard Style: 一个无需配置的自带非常严格规则的代码风格检查插件。它强制要求你所有代码要遵循标准规则。 JSLint：JSLint的代码风格检查插件。 如果你想要了解各个插件的优缺点，可以看看这篇博客JavaScript代码风格检查插件大评比。 4、Node插件 每一个JavaScript项目至少需要安装一个Node包。这里推荐一些针对Node的插件： npm：使用package.json来验证已经安装的模块，确保已经安装的模块版本号正确，标记那些安装了但是没有在package.json列出来的包，以及那些还没有安装的包。 Node.js Modules IntelliSense：为JavaScript和TypeScript模块自动补全import语句。 Path IntelliSense：虽然并不是真的和Node相关，这个插件可以自动补全文件名，可以在输入时对本地文件进行智能提示。 Node exec：运行你执行当前的Node文件或者选中的部分代码。 View Node Package：通过此插件可以快速查看一个Node包的源代码。 Node Readme：快速打开npm包文档。 Search node_modules：搜索node_modules里面的代码，标准的搜索是不会包含该文件夹的。 Import Cost：显示引入的包的大小 5、代码格式化插件 你也许会发现，有时后复制粘贴完一段代码后，缩进的格式变乱，需要一行一行的调整十分麻烦。这个时候，你肯定想要一个代码格式化工具。 Beautify：安装量超过230万，Beautify是jsBeautifier的插件，支持JavaScript、JSON、CSS和HTML一键格式化。 Prettier Code Formatter：安装量超过150万，支持JavaScript、TypeScript和CSS的格式化，使用Prettier(一个深受大家喜爱的格式化插件)。 JS Refactor：提供了许多重构JavaScript 代码的方法，例如提取代码中的变量和方法，将函数转换为使用箭头函数或模板字面量和将函数导出。 JavaScript Booster：一个非常棒的重构工具，比如将var替换为const或则let，移除无用的else语句，将变量声明和变量初始化合并。应该说很大程度上受到Webstorm的启发。 6、浏览器插件 除非你直接在控制台写JavaScript代码，大多数时候是在浏览器中执行的。也就是说，每一次代码更新，你都需要刷新页面来重写载入代码。如果一直手动操作，是很繁琐的。我们可以用插件来替代。 Debugger for Chrome：你只需要在代码编辑器中设置断点，在浏览器中会在断点处暂停。 Live Server：在本地开发环境中，实时重新加载(reload)页面。 Preview on Web Server：提供web服务器和实时预览。 PHP Server：对于仅需要在客户端运行JavaScript 代码做测试非常有用。 Rest Client：你不需要使用浏览器或则一个CURL程序来测试REST API，通过Rest Client可以在编辑器内交互式运行HTTP请求。 7、框架插件 对于大多数项目，为了节省开发时间，你往往会使用一个合适的开发框架来快速开发。在VS Code上，大多数框架都有相应的插件支持。但是依然有很多框架并没有对应的插件。 Angular 6：超过220万的安装量，支持TypeScript、HTML、Angular Material ngRx、RxJS和Flex Layout。并且有172个Angular的代码片段。 Angular v5 snippets：超过270万的安装量，提供 TypeScript、RxJS、HTML和Docker文件的代码片段。 React Native/React/Redux snippets for es6/es7：为这些框架提供ES6/ES7语法的代码片段。 React Native Tools：提供智能提示、命令行工具和Debugging功能。 Vetur：为Vue框架提供语法高亮、代码片段、Emmet、格式化、代码风格检查、智能提示、调试帮助等。有非常详细的文档: vetur。 Ember：为Ember提供命令工具和智能提示。安装后，所有的ember cli命令都可以使用。 Cordova Tools：为Cordova插件和Ionic框架提供支持。提供代码智能提示、调试辅助以及其他特性。 jQuery Code Snippets：提供超过130个jQuery代码片段。 8、测试插件 在软件开发中，测试是必可不少的一个环节，特别是那些要上线到生产环境的项目。你可以看看我们这篇讲测试的文章: JavaScript Testing: Unit vs Functional vs Integration Tests。下面是一些流行的测试插件： Mocha sidebar：使用Mocha库来提供测试支持。使用该插件可以直接在代码中运行测试并将提示错误。 ES6 Mocha Snippets：提供ES6语法的 Mocha代码片段。充分利用箭头函数，尽量不使用大括号来保持代码的简洁，可配置允许使用分号。 Jasmine Code Snippets：Jasmine测试框架的代码片段。 Protractor Snippets：Protractor框架的端到端(end-to-end)测试片段，支持JavaScript和Typescript。 Node TDD：为Node和JavaScript项目提供test-driven development支持。在代码更新的时候可以自动触发代码的测试。 9、其它很酷的插件 我把它们分类到awesome类别，是因为它们真的很酷。 Quokka.js：一个很棒的调试工具，可以为您正在编写的代码提供实时反馈,能够预览变量的函数和计算值结果。请查看文档：文档 Paste as JSON：快速将JSON数据转换为JavaScript代码。 Code Metrics：这是一个用来计算JavaScript和TypeScript代码复杂度的插件。 10、插件包 VS Code的插件市场有一个类型叫插件包。它实际上已一个相互关联的插件的集合，方便一起安装，协同使用。 Nodejs Extension Pack：包含了ESLint、npm、JavaScript(ES6)代码片段、node_modules搜索、NPM智能提示和文件路径智能提示。 VS Code for Node.js – Development Pack ：NPM智能提示，ESLint，Chrome调试器，Code Metrics，Docker和导入包的开销计算。 Vue.js Extension Pack：包含大约12个VS Code插件，有些在本文没有提到，比如auto-rename-tag和auto-close-tag。 Ionic Extesion Pack：包含许多用于Ionic、Angular、RxJS、Cordova和HTML开发的插件。 11、VSCode 拓展插件推荐——提高 Node 和 Vue开发效率 Auto Close Tag 自动闭合HTML标签 Auto Rename Tag 修改HTML标签时，自动修改匹配的标签 Bookmarks 添加行书签 Can I Use HTML5、CSS3、SVG的浏览器兼容性检查 Code Runner 运行选中代码段（支持大量语言，包括Node） CodeBing 在VSCode中弹出浏览器并搜索，可编辑搜索引擎 Color Highlight 颜色值在代码中高亮显示 Color Picker 拾色器 Document This 注释文档生成 EditorConfig for VS Code EditorConfig插件 Emoji 在代码中输入emoji ESLint ESLint插件，高亮提示 File Peek 根据路径字符串，快速定位到文件 Font-awesome codes for html FontAwesome提示代码段 ftp-sync 同步文件到ftp Git Blame 在状态栏显示当前行的Git信息 Git History(git log) 查看git log GitLens 显示文件最近的commit和作者，显示当前行commit信息 Guides 高亮缩进基准线 Gulp Snippets Gulp代码段 HTML CSS Class Completion CSS class提示 HTML CSS Support css提示（支持vue） HTMLHint HTML格式提示 Indenticator 缩进高亮 JavaScript (ES6) code snippets ES6语法代码段 language-stylus Stylus语法高亮和提示 Lodash Lodash代码段 markdownlint Markdown格式提示 MochaSnippets Mocha代码段 Node modules resolve 快速导航到Node模块 npm 运行npm命令 npm Intellisense 导入模块时，提示已安装模块名称 Output Colorizer 彩色输出信息 Partial Diff 对比两段代码或文件 Path Autocomplete 路径完成提示 Path Intellisense 另一个路径完成提示 Prettify JSON 格式化JSON Project Manager 快速切换项目 REST Client 发送REST风格的HTTP请求 Settings Sync VSCode设置同步到Gist String Manipulation 字符串转换处理（驼峰、大写开头、下划线等等） Test Spec Generator 测试用例生成（支持chai、should、jasmine） TODO Parser Todo管理 Version Lens package.json文件显示模块当前版本和最新版本 vetur 目前比较好的Vue语法高亮 View Node Package 快速打开选中模块的主页和代码仓库 vscode-icons 文件图标，方便定位文件 VSCode Great Icons 文件图标拓展 VueHelper Vue2代码段（包括Vue2 api、vue-router2、vuex2） 附录：VSCode首选项配置 123456789101112131415161718192021222324252627282930313233&#123; &quot;editor.tabSize&quot;: 2, &quot;files.associations&quot;: &#123; &quot;*.vue&quot;: &quot;vue&quot; &#125;, &quot;eslint.autoFixOnSave&quot;: true, &quot;eslint.options&quot;: &#123; &quot;extensions&quot;: [ &quot;.js&quot;, &quot;.vue&quot; ] &#125;, &quot;eslint.validate&quot;: [ &quot;javascript&quot;, &quot;javascriptreact&quot;, &quot;vue&quot;, &quot;vue-html&quot; ], &quot;search.exclude&quot;: &#123; &quot;**/node_modules&quot;: true, &quot;**/bower_components&quot;: true, &quot;**/dist&quot;: true &#125;, &quot;emmet.syntaxProfiles&quot;: &#123; &quot;javascript&quot;: &quot;jsx&quot;, &quot;vue&quot;: &quot;html&quot;, &quot;vue-html&quot;: &quot;html&quot; &#125;, &quot;extensions.autoUpdate&quot;: true, &quot;editor.renderWhitespace&quot;: &quot;boundary&quot;, &quot;editor.cursorBlinking&quot;: &quot;smooth&quot;, &quot;workbench.welcome.enabled&quot;: true&#125; VS Code能够如此流行的一个原因就是拥有大量的高质量插件。它前所未有的提高了编码的效率。比如ESLint助你减少代码失误，Debugger for Chrome让你更加方便去Debugging。Node.js的智能引入提示让你可以让你正确引入所需模块，Live Server和 REST Client可以让你省去频繁切换到外部工具的麻烦。希望介绍的这些插件可以帮助你提高工作效率。]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VB3.0]]></title>
    <url>%2F2019%2F04%2F22%2Fcoding-test-02-VB3%2F</url>
    <content type="text"><![CDATA[vb3.0 VB第三版修改 app.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114'use strict'var connection = require('./mysql');var express = require('express');var app = express();var fs = require('fs');var bodyParser = require('body-parser');var cors = require('cors');const path = require('path');var multer = require('multer');var https = require('https');var options = &#123; key:fs.readFileSync('./tbaproject_tk/tbaproject_tk.key'), ca:fs.readFileSync('./tbaproject_tk/AddTrustExternalCARoot.crt'), cert:fs.readFileSync('./tbaproject_tk/tbaproject_tk.crt'),&#125;https.createServer(options,app).listen(443, ()=&gt; &#123;console.log('Server running on https://localhost/');&#125;);app.use(bodyParser.json());app.use(bodyParser.urlencoded(&#123;extended:true&#125;));app.use(cors());app.all('*',function(req,res,next)&#123; res.header("Access-Control-Allow-Credentials", true); res.header("Access-Control-Allow-Origin", "*"); res.header("Access-Control-Allow-Headers", "application/json", "X-Requested-With"); res.header("Access-Control-Allow-Methods", "PUT,POST,GET,DELETE,OPTIONS"); res.header("Content-Type", "application/json;charset=utf-8"); next();&#125;);console.log('1');// onboaringapp.post('/user/onboarding',function(req,res)&#123; var email = req.body.email; console.log(email); var password = '123456'; if(!email)&#123; res.send('Wrong email!'); return; &#125; var json = &#123;&#125;; var sql01 = `select * from user where email = "$&#123;email&#125;"`; connection.query(sql01,function(err,result)&#123; if(err)&#123; throw err; &#125; if(result.length&gt;0)&#123; console.log('User already exists!'); json.message = 'User already exists!'; json.resultCode = 1; &#125;else&#123; console.log('Go to next...'); json.message = 'Go to next...'; json.resultCode = 0; var sql02 = `insert into user(email,password) values("$&#123;email&#125;","$&#123;password&#125;")`; connection.query(sql02,function(err,result)&#123; if(err)&#123; throw err; &#125; &#125;); &#125; res.send(JSON.stringify(json)); &#125;);&#125;);console.log('100');// upload imagevar storage01 = multer.diskStorage(&#123; destination: './images/', filename: function(req, file, cb) &#123; return cb(null, "" + file.originalname); &#125; &#125;);app.post("/user/image", multer(&#123; storage: storage01 &#125;).single('image'), function(req, res) &#123; console.log('Sign saved!'); var email = req.body.email; console.log(email); var path01 = path.join(__dirname,req.file.path); // var sql01 = `update user set image="$&#123;path01&#125;" where email="$&#123;email&#125;"`; var sql01 = `insert into images(image) values("$&#123;path01&#125;") `; connection.query(sql01,function(err,result)&#123; if(err)&#123; throw err; &#125; &#125;); return res.status(200).end('success'); &#125; );// upload audiovar storage02 = multer.diskStorage(&#123; destination: './audios/', filename: function(req, file, cb) &#123; return cb(null, "" + file.originalname); &#125; &#125;); app.post("/user/audio", multer(&#123; storage: storage02 &#125;).single('audio'), function(req, res) &#123; console.log('Audio saved!'); var email = req.body.email; var path01 = path.join(__dirname,req.file.path); // var sql01 = `update user set audio="$&#123;path01&#125;" where email="$&#123;email&#125;"`; var sql01 = `insert into audios(audio) values("$&#123;path01&#125;") `; connection.query(sql01,function(err,result)&#123; if(err)&#123; throw err; &#125; &#125;); return res.status(200).end('success'); &#125; );// app1.jsuse strict'var connection = require('./mysql');var express = require('express');var app = express();var fs = require('fs');var bodyParser = require('body-parser');var cors = require('cors');const path = require('path');var multer = require('multer');var https = require('https');var nodemailer = require('nodemailer');var request = require('request');var options = &#123; key:fs.readFileSync('/etc/apache2/ssl/tbaproject.com.key'), ca:fs.readFileSync('/etc/apache2/ssl/myCA.pem'), cert:fs.readFileSync('/etc/apache2/ssl/tbaproject.com.crt'),&#125;https.createServer(options,app).listen(443, ()=&gt; &#123;console.log('Server running on https://localhost/');&#125;);app.use(bodyParser.json());app.use(bodyParser.urlencoded(&#123;extended:true&#125;));app.use(cors());app.all('*',function(req,res,next)&#123; res.header("Access-Control-Allow-Credentials", true); res.header("Access-Control-Allow-Origin", "*"); res.header("Access-Control-Allow-Headers", "application/json", "X-Requested-With"); res.header("Access-Control-Allow-Methods", "PUT,POST,GET,DELETE,OPTIONS"); res.header("Content-Type", "application/json;charset=utf-8"); next();&#125;);// onboaringapp.post('/user/onboarding',function(req,res)&#123; var email = req.body.email; console.log(email); var password = '123456'; if(!email)&#123; res.send('No email!'); return; &#125; var json = &#123;&#125;; var sql01 = `select email from user where email = "$&#123;email&#125;"`; connection.query(sql01,function(err,result)&#123; if(err)&#123; throw err; &#125; if(result.length&gt;0)&#123; console.log('User already exists!'); json.message = 'User already exists!'; json.resultCode = 1; &#125;else&#123; console.log('Go to next...'); json.message = 'Go to next...'; json.resultCode = 0; var sql02 = `insert into user(email,password) values("$&#123;email&#125;","$&#123;password&#125;")`; connection.query(sql02,function(err,result)&#123; if(err)&#123; throw err; &#125; &#125;); &#125; res.send(JSON.stringify(json)); &#125;);&#125;);// upload imagevar storage01 = multer.diskStorage(&#123; destination: './images/', filename: function(req, file, cb) &#123; return cb(null, "" + file.originalname); &#125; &#125;);app.post("/user/image", multer(&#123; storage: storage01 &#125;).single('image'), function(req, res) &#123; console.log('Sign saved!'); var email = req.body.email; console.log(email); var path01 = path.join(__dirname,req.file.path); // var sql01 = `update user set image="$&#123;path01&#125;" where email="$&#123;email&#125;"`; var sql01 = `insert into images(image) values("$&#123;path01&#125;") `; // send path01 to python server------------------------------------------ var req = &#123; "request":&#123; "header":&#123;&#125;, "body":&#123; "imagePath":`"$&#123;path01&#125;"` &#125; &#125; &#125;; request(&#123; url:'', body:JSON.stringify(req), method:'POST', json:true, headers:&#123;"content-type":"application/json"&#125;, // body:JSON.stringify(requestData) &#125;,function(error,response,body)&#123; // if(!error&amp;response.statusCode == 200)&#123; // console.log(body); // &#125; &#125;); // ---------------------------------------------------------------------- connection.query(sql01,function(err,result)&#123; if(err)&#123; throw err; &#125; &#125;); return res.status(200).end('success'); &#125; );// upload audiovar storage02 = multer.diskStorage(&#123; destination: './audios/', filename: function(req, file, cb) &#123; return cb(null, "" + file.originalname); &#125; &#125;); app.post("/user/audio", multer(&#123; storage: storage02 &#125;).single('audio'), function(req, res) &#123; console.log('Audio saved!'); var email = req.body.email; var path01 = path.join(__dirname,req.file.path); // var sql01 = `update user set audio="$&#123;path01&#125;" where email="$&#123;email&#125;"`; var sql01 = `insert into audios(audio) values("$&#123;path01&#125;") `; // send path01 to python server------------------------------------------ var req = &#123; "request":&#123; "header":&#123;&#125;, "body":&#123; "audioPath":`"$&#123;path01&#125;"` &#125; &#125; &#125;; request(&#123; url:'', body:JSON.stringify(req), method:'POST', json:true, headers:&#123;"content-type":"application/json"&#125;, // body:JSON.stringify(requestData) &#125;,function(error,response,body)&#123; // if(!error&amp;response.statusCode == 200)&#123; // console.log(body); // &#125; &#125;); // ---------------------------------------------------------------------- connection.query(sql01,function(err,result)&#123; if(err)&#123; throw err; &#125; &#125;); return res.status(200).end('success'); &#125; );// loginapp.post('/user/login',function(req,res)&#123; var email = req.body.email; var password = req.body.password; console.log(email); console.log(password); if(!email)&#123; res.send('No email!'); return; &#125; if(!password)&#123; res.send('No password!'); return; &#125; var json = &#123;&#125;; var sql01 = `select email, password from user where email = "$&#123;email&#125;" and password = "$&#123;password&#125;"`; connection.query(sql01,function(err,result)&#123; if(err)&#123; throw err; &#125; if(result.length&gt;0)&#123; console.log('login'); json.message = 'login'; json.resultCode = 1; &#125;else&#123; console.log('Wrong email or password! Login failed.'); json.message = 'Wrong email or password! Login failed.'; json.resultCode = 0; &#125; res.send(JSON.stringify(json)); &#125;);&#125;);//submitapp.post('/user/submit',function(req,res)&#123; var email = req.body.email; console.log(email); if(!email)&#123; res.send('No email!'); return; &#125;// send activation email if(email)&#123; var transporter = nodemailer.createTransport(&#123; debug: true, host: 'localhost', port: 25, tls:&#123;rejectUnauthorized: false&#125;, &#125;); var options = &#123; from: 'ace@tbaproject.com', to: email, subject: 'Welcome to TBA!', text: 'Hello TBA', // html: '&lt;h2&gt;Text&lt;/h2&gt;&lt;a href="virtual_bank.html"&gt;Tbaprojec&lt;/a&gt;&lt;p&gt;text&lt;/p&gt;', html: fs.createReadStream(path.resolve(__dirname, 'virtual_bank.html')) // 流 &#125;; // send email transporter.sendMail(options, function(error, info)&#123; if(error)&#123; res.send("email sent fail\n" + error); console.log(error); &#125;else&#123; res.send("email sent\n" + info.response); console.log('訊息發送: ' + info.respons); &#125; &#125;); &#125;&#125;); email.js 12345678910111213141516171819202122232425var nodemailer = require('nodemailer');var transporter = nodemailer.createTransport(&#123; debug: true, host: 'localhost', port: 25, tls:&#123;rejectUnauthorized: false&#125;,&#125;);var options = &#123; from: 'ace@tbaproject.com', to: 'test@tbaproject.com', subject: 'Welcome to TBA!', text: 'Hello TBA', html: '&lt;h2&gt;TextTextTextTextText&lt;/h2&gt;&lt;a href="https://ithelp.ithome.com.tw/articles/10160766" title="Node.js 系列學習日誌"&gt;Node.js 系列學習日誌&lt;/a&gt; texttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttexttext&lt;/p&gt;',&#125;;transporter.sendMail(options, function(error, info)&#123; if(error)&#123; console.log(error); &#125;else&#123; console.log('訊息發送: ' + info.response); &#125;&#125;); mysql.js 123456789var mysql = require('mysql');const connection = mysql.createConnection(&#123; host:'localhost', user:'root', password:'xxxxxxxx', database:'virtual_bank'&#125;);connection.connect();module.exports = connection; virtual_bank.htmllt;!doctype html&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office"&gt; &lt;head&gt; &lt;!-- NAME: SELL PRODUCTS --&gt; &lt;!--[if gte mso 15]&gt; &lt;xml&gt; &lt;o:OfficeDocumentSettings&gt; &lt;o:AllowPNG/&gt; &lt;o:PixelsPerInch&gt;96&lt;/o:PixelsPerInch&gt; &lt;/o:OfficeDocumentSettings&gt; &lt;/xml&gt; &lt;![endif]--&gt; &lt;meta charset="UTF-8"&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt; &lt;title&gt;*|MC:SUBJECT|*&lt;/title&gt; &lt;style type="text/css"&gt; p&#123; margin:10px 0; padding:0; &#125; table&#123; border-collapse:collapse; &#125; h1,h2,h3,h4,h5,h6&#123; display:block; margin:0; padding:0; &#125; img,a img&#123; border:0; height:auto; outline:none; text-decoration:none; &#125; body,#bodyTable,#bodyCell&#123; height:100%; margin:0; padding:0; width:100%; &#125; .mcnPreviewText&#123; display:none !important; &#125; #outlook a&#123; padding:0; &#125; img&#123; -ms-interpolation-mode:bicubic; &#125; table&#123; mso-table-lspace:0pt; mso-table-rspace:0pt; &#125; .ReadMsgBody&#123; width:100%; &#125; .ExternalClass&#123; width:100%; &#125; p,a,li,td,blockquote&#123; mso-line-height-rule:exactly; &#125; a[href^=tel],a[href^=sms]&#123; color:inherit; cursor:default; text-decoration:none; &#125; p,a,li,td,body,table,blockquote&#123; -ms-text-size-adjust:100%; -webkit-text-size-adjust:100%; &#125; .ExternalClass,.ExternalClass p,.ExternalClass td,.ExternalClass div,.ExternalClass span,.ExternalClass font&#123; line-height:100%; &#125; a[x-apple-data-detectors]&#123; color:inherit !important; text-decoration:none !important; font-size:inherit !important; font-family:inherit !important; font-weight:inherit !important; line-height:inherit !important; &#125; .templateContainer&#123; max-width:600px !important; &#125; a.mcnButton&#123; display:block; &#125; .mcnImage,.mcnRetinaImage&#123; vertical-align:bottom; &#125; .mcnTextContent&#123; word-break:break-word; &#125; .mcnTextContent img&#123; height:auto !important; &#125; .mcnDividerBlock&#123; table-layout:fixed !important; &#125; /* @tab Page @section Heading 1 @style heading 1 */ h1&#123; /*@editable*/color:#222222; /*@editable*/font-family:Helvetica; /*@editable*/font-size:40px; /*@editable*/font-style:normal; /*@editable*/font-weight:bold; /*@editable*/line-height:150%; /*@editable*/letter-spacing:normal; /*@editable*/text-align:center; &#125; /* @tab Page @section Heading 2 @style heading 2 */ h2&#123; /*@editable*/color:#222222; /*@editable*/font-family:Helvetica; /*@editable*/font-size:34px; /*@editable*/font-style:normal; /*@editable*/font-weight:bold; /*@editable*/line-height:150%; /*@editable*/letter-spacing:normal; /*@editable*/text-align:left; &#125; /* @tab Page @section Heading 3 @style heading 3 */ h3&#123; /*@editable*/color:#444444; /*@editable*/font-family:Helvetica; /*@editable*/font-size:22px; /*@editable*/font-style:normal; /*@editable*/font-weight:bold; /*@editable*/line-height:150%; /*@editable*/letter-spacing:normal; /*@editable*/text-align:left; &#125; /* @tab Page @section Heading 4 @style heading 4 */ h4&#123; /*@editable*/color:#949494; /*@editable*/font-family:Georgia; /*@editable*/font-size:20px; /*@editable*/font-style:italic; /*@editable*/font-weight:normal; /*@editable*/line-height:125%; /*@editable*/letter-spacing:normal; /*@editable*/text-align:left; &#125; /* @tab Header @section Header Container Style */ #templateHeader&#123; /*@editable*/background-color:#F7F7F7; /*@editable*/background-image:none; /*@editable*/background-repeat:no-repeat; /*@editable*/background-position:center; /*@editable*/background-size:cover; /*@editable*/border-top:0; /*@editable*/border-bottom:0; /*@editable*/padding-top:45px; /*@editable*/padding-bottom:45px; &#125; /* @tab Header @section Header Interior Style */ .headerContainer&#123; /*@editable*/background-color:transparent; /*@editable*/background-image:none; /*@editable*/background-repeat:no-repeat; /*@editable*/background-position:center; /*@editable*/background-size:cover; /*@editable*/border-top:0; /*@editable*/border-bottom:0; /*@editable*/padding-top:0; /*@editable*/padding-bottom:0; &#125; /* @tab Header @section Header Text */ .headerContainer .mcnTextContent,.headerContainer .mcnTextContent p&#123; /*@editable*/color:#757575; /*@editable*/font-family:Helvetica; /*@editable*/font-size:16px; /*@editable*/line-height:150%; /*@editable*/text-align:left; &#125; /* @tab Header @section Header Link */ .headerContainer .mcnTextContent a,.headerContainer .mcnTextContent p a&#123; /*@editable*/color:#007C89; /*@editable*/font-weight:normal; /*@editable*/text-decoration:underline; &#125; /* @tab Body @section Body Container Style */ #templateBody&#123; /*@editable*/background-color:#FFFFFF; /*@editable*/background-image:none; /*@editable*/background-repeat:no-repeat; /*@editable*/background-position:center; /*@editable*/background-size:cover; /*@editable*/border-top:0; /*@editable*/border-bottom:0; /*@editable*/padding-top:36px; /*@editable*/padding-bottom:45px; &#125; /* @tab Body @section Body Interior Style */ .bodyContainer&#123; /*@editable*/background-color:transparent; /*@editable*/background-image:none; /*@editable*/background-repeat:no-repeat; /*@editable*/background-position:center; /*@editable*/background-size:cover; /*@editable*/border-top:0; /*@editable*/border-bottom:0; /*@editable*/padding-top:0; /*@editable*/padding-bottom:0; &#125; /* @tab Body @section Body Text */ .bodyContainer .mcnTextContent,.bodyContainer .mcnTextContent p&#123; /*@editable*/color:#757575; /*@editable*/font-family:Helvetica; /*@editable*/font-size:16px; /*@editable*/line-height:150%; /*@editable*/text-align:left; &#125; /* @tab Body @section Body Link */ .bodyContainer .mcnTextContent a,.bodyContainer .mcnTextContent p a&#123; /*@editable*/color:#007C89; /*@editable*/font-weight:normal; /*@editable*/text-decoration:underline; &#125; /* @tab Footer @section Footer Style */ #templateFooter&#123; /*@editable*/background-color:#333333; /*@editable*/background-image:none; /*@editable*/background-repeat:no-repeat; /*@editable*/background-position:center; /*@editable*/background-size:cover; /*@editable*/border-top:0; /*@editable*/border-bottom:0; /*@editable*/padding-top:45px; /*@editable*/padding-bottom:63px; &#125; /* @tab Footer @section Footer Interior Style */ .footerContainer&#123; /*@editable*/background-color:transparent; /*@editable*/background-image:none; /*@editable*/background-repeat:no-repeat; /*@editable*/background-position:center; /*@editable*/background-size:cover; /*@editable*/border-top:0; /*@editable*/border-bottom:0; /*@editable*/padding-top:0; /*@editable*/padding-bottom:0; &#125; /* @tab Footer @section Footer Text */ .footerContainer .mcnTextContent,.footerContainer .mcnTextContent p&#123; /*@editable*/color:#FFFFFF; /*@editable*/font-family:Helvetica; /*@editable*/font-size:12px; /*@editable*/line-height:150%; /*@editable*/text-align:center; &#125; /* @tab Footer @section Footer Link */ .footerContainer .mcnTextContent a,.footerContainer .mcnTextContent p a&#123; /*@editable*/color:#FFFFFF; /*@editable*/font-weight:normal; /*@editable*/text-decoration:underline; &#125; @media only screen and (min-width:768px)&#123; .templateContainer&#123; width:600px !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; body,table,td,p,a,li,blockquote&#123; -webkit-text-size-adjust:none !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; body&#123; width:100% !important; min-width:100% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnRetinaImage&#123; max-width:100% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnImage&#123; width:100% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnCartContainer,.mcnCaptionTopContent,.mcnRecContentContainer,.mcnCaptionBottomContent,.mcnTextContentContainer,.mcnBoxedTextContentContainer,.mcnImageGroupContentContainer,.mcnCaptionLeftTextContentContainer,.mcnCaptionRightTextContentContainer,.mcnCaptionLeftImageContentContainer,.mcnCaptionRightImageContentContainer,.mcnImageCardLeftTextContentContainer,.mcnImageCardRightTextContentContainer,.mcnImageCardLeftImageContentContainer,.mcnImageCardRightImageContentContainer&#123; max-width:100% !important; width:100% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnBoxedTextContentContainer&#123; min-width:100% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnImageGroupContent&#123; padding:9px !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnCaptionLeftContentOuter .mcnTextContent,.mcnCaptionRightContentOuter .mcnTextContent&#123; padding-top:9px !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnImageCardTopImageContent,.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent,.mcnCaptionBlockInner .mcnCaptionTopContent:last-child .mcnTextContent&#123; padding-top:18px !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnImageCardBottomImageContent&#123; padding-bottom:9px !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnImageGroupBlockInner&#123; padding-top:0 !important; padding-bottom:0 !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnImageGroupBlockOuter&#123; padding-top:9px !important; padding-bottom:9px !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnTextContent,.mcnBoxedTextContentColumn&#123; padding-right:18px !important; padding-left:18px !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcnImageCardLeftImageContent,.mcnImageCardRightImageContent&#123; padding-right:18px !important; padding-bottom:0 !important; padding-left:18px !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; .mcpreview-image-uploader&#123; display:none !important; width:100% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; /* @tab Mobile Styles @section Heading 1 @tip Make the first-level headings larger in size for better readability on small screens. */ h1&#123; /*@editable*/font-size:30px !important; /*@editable*/line-height:125% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; /* @tab Mobile Styles @section Heading 2 @tip Make the second-level headings larger in size for better readability on small screens. */ h2&#123; /*@editable*/font-size:26px !important; /*@editable*/line-height:125% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; /* @tab Mobile Styles @section Heading 3 @tip Make the third-level headings larger in size for better readability on small screens. */ h3&#123; /*@editable*/font-size:20px !important; /*@editable*/line-height:150% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; /* @tab Mobile Styles @section Heading 4 @tip Make the fourth-level headings larger in size for better readability on small screens. */ h4&#123; /*@editable*/font-size:18px !important; /*@editable*/line-height:150% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; /* @tab Mobile Styles @section Boxed Text @tip Make the boxed text larger in size for better readability on small screens. We recommend a font size of at least 16px. */ .mcnBoxedTextContentContainer .mcnTextContent,.mcnBoxedTextContentContainer .mcnTextContent p&#123; /*@editable*/font-size:14px !important; /*@editable*/line-height:150% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; /* @tab Mobile Styles @section Header Text @tip Make the header text larger in size for better readability on small screens. */ .headerContainer .mcnTextContent,.headerContainer .mcnTextContent p&#123; /*@editable*/font-size:16px !important; /*@editable*/line-height:150% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; /* @tab Mobile Styles @section Body Text @tip Make the body text larger in size for better readability on small screens. We recommend a font size of at least 16px. */ .bodyContainer .mcnTextContent,.bodyContainer .mcnTextContent p&#123; /*@editable*/font-size:16px !important; /*@editable*/line-height:150% !important; &#125;&#125; @media only screen and (max-width: 480px)&#123; /* @tab Mobile Styles @section Footer Text @tip Make the footer content text larger in size for better readability on small screens. */ .footerContainer .mcnTextContent,.footerContainer .mcnTextContent p&#123; /*@editable*/font-size:14px !important; /*@editable*/line-height:150% !important; &#125;&#125;&lt;/style&gt;&lt;/head&gt; &lt;body&gt; &lt;!--*|IF:MC_PREVIEW_TEXT|*--&gt; &lt;!--[if !gte mso 9]&gt;&lt;!----&gt;&lt;span class="mcnPreviewText" style="display:none; font-size:0px; line-height:0px; max-height:0px; max-width:0px; opacity:0; overflow:hidden; visibility:hidden; mso-hide:all;"&gt;*|MC_PREVIEW_TEXT|*&lt;/span&gt;&lt;!--&lt;![endif]--&gt; &lt;!--*|END:IF|*--&gt; &lt;center&gt; &lt;table align="center" border="0" cellpadding="0" cellspacing="0" height="100%" width="100%" id="bodyTable"&gt; &lt;tr&gt; &lt;td align="center" valign="top" id="bodyCell"&gt; &lt;!-- BEGIN TEMPLATE // --&gt; &lt;table border="0" cellpadding="0" cellspacing="0" width="100%"&gt; &lt;tr&gt; &lt;td align="center" valign="top" id="templateHeader" data-template-container&gt; &lt;!--[if (gte mso 9)|(IE)]&gt; &lt;table align="center" border="0" cellspacing="0" cellpadding="0" width="600" style="width:600px;"&gt; &lt;tr&gt; &lt;td align="center" valign="top" width="600" style="width:600px;"&gt; &lt;![endif]--&gt; &lt;table align="center" border="0" cellpadding="0" cellspacing="0" width="100%" class="templateContainer"&gt; &lt;tr&gt; &lt;td valign="top" class="headerContainer"&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnImageBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnImageBlockOuter"&gt; &lt;tr&gt; &lt;td valign="top" style="padding:9px" class="mcnImageBlockInner"&gt; &lt;table align="left" width="100%" border="0" cellpadding="0" cellspacing="0" class="mcnImageContentContainer" style="min-width:100%;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td class="mcnImageContent" valign="top" style="padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0; text-align:center;"&gt; &lt;img align="center" alt="" src="html_image/01.jpg" width="564" style="max-width:1439px; padding-bottom: 0; display: inline !important; vertical-align: bottom;" class="mcnImage"&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnTextBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnTextBlockOuter"&gt; &lt;tr&gt; &lt;td valign="top" class="mcnTextBlockInner" style="padding-top:9px;"&gt; &lt;!--[if mso]&gt; &lt;table align="left" border="0" cellspacing="0" cellpadding="0" width="100%" style="width:100%;"&gt; &lt;tr&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;td valign="top" width="600" style="width:600px;"&gt; &lt;![endif]--&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" style="max-width:100%; min-width:100%;" width="100%" class="mcnTextContentContainer"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign="top" class="mcnTextContent" style="padding-top:0; padding-right:18px; padding-bottom:9px; padding-left:18px;"&gt; &lt;h1&gt;Virtual Bank in Hong Kong&lt;/h1&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;!--[if mso]&gt; &lt;/td&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;/tr&gt; &lt;/table&gt; &lt;![endif]--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;!--[if (gte mso 9)|(IE)]&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;![endif]--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="center" valign="top" id="templateBody" data-template-container&gt; &lt;!--[if (gte mso 9)|(IE)]&gt; &lt;table align="center" border="0" cellspacing="0" cellpadding="0" width="600" style="width:600px;"&gt; &lt;tr&gt; &lt;td align="center" valign="top" width="600" style="width:600px;"&gt; &lt;![endif]--&gt; &lt;table align="center" border="0" cellpadding="0" cellspacing="0" width="100%" class="templateContainer"&gt; &lt;tr&gt; &lt;td valign="top" class="bodyContainer"&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnImageBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnImageBlockOuter"&gt; &lt;tr&gt; &lt;td valign="top" style="padding:9px" class="mcnImageBlockInner"&gt; &lt;table align="left" width="100%" border="0" cellpadding="0" cellspacing="0" class="mcnImageContentContainer" style="min-width:100%;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td class="mcnImageContent" valign="top" style="padding-right: 9px; padding-left: 9px; padding-top: 0; padding-bottom: 0; text-align:center;"&gt; &lt;img align="center" alt="" src="html_image/02.jpg" width="564" style="max-width:814px; padding-bottom: 0; display: inline !important; vertical-align: bottom;" class="mcnImage"&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnTextBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnTextBlockOuter"&gt; &lt;tr&gt; &lt;td valign="top" class="mcnTextBlockInner" style="padding-top:9px;"&gt; &lt;!--[if mso]&gt; &lt;table align="left" border="0" cellspacing="0" cellpadding="0" width="100%" style="width:100%;"&gt; &lt;tr&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;td valign="top" width="600" style="width:600px;"&gt; &lt;![endif]--&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" style="max-width:100%; min-width:100%;" width="100%" class="mcnTextContentContainer"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign="top" class="mcnTextContent" style="padding-top:0; padding-right:18px; padding-bottom:9px; padding-left:18px;"&gt; &lt;h3&gt;Welcome to the Virtual Bank, confirm you're human&lt;/h3&gt;&lt;p&gt;Since you've made it this far, we want to assume you're a real, live human. But we need to be super sure you aren't a robot.&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;!--[if mso]&gt; &lt;/td&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;/tr&gt; &lt;/table&gt; &lt;![endif]--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnButtonBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnButtonBlockOuter"&gt; &lt;tr&gt; &lt;td style="padding-top:0; padding-right:18px; padding-bottom:18px; padding-left:18px;" valign="top" align="center" class="mcnButtonBlockInner"&gt; &lt;table border="0" cellpadding="0" cellspacing="0" class="mcnButtonContentContainer" style="border-collapse: separate !important;border-radius: 3px;background-color: #009FC7;"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td align="center" valign="middle" class="mcnButtonContent" style="font-family: Helvetica; font-size: 18px; padding: 18px;"&gt; &lt;a class="mcnButton " title="I'm Not a Robot" href="" target="_blank" style="font-weight: bold;letter-spacing: -0.5px;line-height: 100%;text-align: center;text-decoration: none;color: #FFFFFF;"&gt;I'm Not a Robot&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnDividerBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnDividerBlockOuter"&gt; &lt;tr&gt; &lt;td class="mcnDividerBlockInner" style="min-width:100%; padding:18px;"&gt; &lt;table class="mcnDividerContent" border="0" cellpadding="0" cellspacing="0" width="100%" style="min-width:100%;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td&gt; &lt;span&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;!-- &lt;td class="mcnDividerBlockInner" style="padding: 18px;"&gt; &lt;hr class="mcnDividerContent" style="border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;" /&gt;--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnCaptionBlock"&gt; &lt;tbody class="mcnCaptionBlockOuter"&gt; &lt;tr&gt; &lt;td class="mcnCaptionBlockInner" valign="top" style="padding:9px;"&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" class="mcnCaptionBottomContent" width="282"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td class="mcnCaptionBottomImageContent" align="center" valign="top" style="padding:0 9px 9px 9px;"&gt; &lt;img alt="" src="html_image/03.jpg" width="264" style="max-width:1200px;" class="mcnImage"&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="mcnTextContent" valign="top" style="padding:0 9px 0 9px;" width="282"&gt; &lt;h4&gt;We are innovating&lt;/h4&gt;&lt;p&gt;Virtual bank combines the latest technology in artificial intelligence, predictive analytics and natural language to be a virtual financial assistant to clients.&lt;/p&gt;&lt;p&gt;&lt;a href="#"&gt;View our website&amp;nbsp;»&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table align="right" border="0" cellpadding="0" cellspacing="0" class="mcnCaptionBottomContent" width="282"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td class="mcnCaptionBottomImageContent" align="center" valign="top" style="padding:0 9px 9px 9px;"&gt; &lt;img alt="" src="html_image/04.png" width="264" style="max-width:675px;" class="mcnImage"&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="mcnTextContent" valign="top" style="padding:0 9px 0 9px;" width="282"&gt; &lt;h4&gt;Growing with clients&lt;/h4&gt;&lt;p&gt;Everything we do is based on what we hear from our clients: how they want to interact with us and how we can make their&amp;nbsp;financial lives better.&lt;/p&gt;&lt;p&gt;&lt;a href="#"&gt;See our service »&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;!--[if (gte mso 9)|(IE)]&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;![endif]--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="center" valign="top" id="templateFooter" data-template-container&gt; &lt;!--[if (gte mso 9)|(IE)]&gt; &lt;table align="center" border="0" cellspacing="0" cellpadding="0" width="600" style="width:600px;"&gt; &lt;tr&gt; &lt;td align="center" valign="top" width="600" style="width:600px;"&gt; &lt;![endif]--&gt; &lt;table align="center" border="0" cellpadding="0" cellspacing="0" width="100%" class="templateContainer"&gt; &lt;tr&gt; &lt;td valign="top" class="footerContainer"&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnFollowBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnFollowBlockOuter"&gt; &lt;tr&gt; &lt;td align="center" valign="top" style="padding:9px" class="mcnFollowBlockInner"&gt; &lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnFollowContentContainer" style="min-width:100%;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="center" style="padding-left:9px;padding-right:9px;"&gt; &lt;table border="0" cellpadding="0" cellspacing="0" width="100%" style="min-width:100%;" class="mcnFollowContent"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="center" valign="top" style="padding-top:9px; padding-right:9px; padding-left:9px;"&gt; &lt;table align="center" border="0" cellpadding="0" cellspacing="0"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="center" valign="top"&gt; &lt;!--[if mso]&gt; &lt;table align="center" border="0" cellspacing="0" cellpadding="0"&gt; &lt;tr&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;td align="center" valign="top"&gt; &lt;![endif]--&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" style="display:inline;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign="top" style="padding-right:10px; padding-bottom:9px;" class="mcnFollowContentItemContainer"&gt; &lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnFollowContentItem"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="left" valign="middle" style="padding-top:5px; padding-right:10px; padding-bottom:5px; padding-left:9px;"&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" width=""&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="center" valign="middle" width="24" class="mcnFollowIconContent"&gt; &lt;a href="http://www.facebook.com" target="_blank"&gt;&lt;img src="html_image/05.png" style="display:block;" height="24" width="24" class=""&gt;&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;!--[if mso]&gt; &lt;/td&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;td align="center" valign="top"&gt; &lt;![endif]--&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" style="display:inline;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign="top" style="padding-right:10px; padding-bottom:9px;" class="mcnFollowContentItemContainer"&gt; &lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnFollowContentItem"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="left" valign="middle" style="padding-top:5px; padding-right:10px; padding-bottom:5px; padding-left:9px;"&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" width=""&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="center" valign="middle" width="24" class="mcnFollowIconContent"&gt; &lt;a href="http://www.twitter.com/" target="_blank"&gt;&lt;img src="html_image/06.png" style="display:block;" height="24" width="24" class=""&gt;&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;!--[if mso]&gt; &lt;/td&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;td align="center" valign="top"&gt; &lt;![endif]--&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" style="display:inline;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign="top" style="padding-right:10px; padding-bottom:9px;" class="mcnFollowContentItemContainer"&gt; &lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnFollowContentItem"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="left" valign="middle" style="padding-top:5px; padding-right:10px; padding-bottom:5px; padding-left:9px;"&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" width=""&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="center" valign="middle" width="24" class="mcnFollowIconContent"&gt; &lt;a href="http://www.instagram.com/" target="_blank"&gt;&lt;img src="html_image/07.png" style="display:block;" height="24" width="24" class=""&gt;&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;!--[if mso]&gt; &lt;/td&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;td align="center" valign="top"&gt; &lt;![endif]--&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" style="display:inline;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign="top" style="padding-right:0; padding-bottom:9px;" class="mcnFollowContentItemContainer"&gt; &lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnFollowContentItem"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="left" valign="middle" style="padding-top:5px; padding-right:10px; padding-bottom:5px; padding-left:9px;"&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" width=""&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td align="center" valign="middle" width="24" class="mcnFollowIconContent"&gt; &lt;a href="http://mailchimp.com" target="_blank"&gt;&lt;img src="html_image/08.png" style="display:block;" height="24" width="24" class=""&gt;&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;!--[if mso]&gt; &lt;/td&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;/tr&gt; &lt;/table&gt; &lt;![endif]--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnDividerBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnDividerBlockOuter"&gt; &lt;tr&gt; &lt;td class="mcnDividerBlockInner" style="min-width:100%; padding:18px;"&gt; &lt;table class="mcnDividerContent" border="0" cellpadding="0" cellspacing="0" width="100%" style="min-width: 100%;border-top: 2px solid #505050;"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td&gt; &lt;span&gt;&lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;!-- &lt;td class="mcnDividerBlockInner" style="padding: 18px;"&gt; &lt;hr class="mcnDividerContent" style="border-bottom-color:none; border-left-color:none; border-right-color:none; border-bottom-width:0; border-left-width:0; border-right-width:0; margin-top:0; margin-right:0; margin-bottom:0; margin-left:0;" /&gt;--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;table border="0" cellpadding="0" cellspacing="0" width="100%" class="mcnTextBlock" style="min-width:100%;"&gt; &lt;tbody class="mcnTextBlockOuter"&gt; &lt;tr&gt; &lt;td valign="top" class="mcnTextBlockInner" style="padding-top:9px;"&gt; &lt;!--[if mso]&gt; &lt;table align="left" border="0" cellspacing="0" cellpadding="0" width="100%" style="width:100%;"&gt; &lt;tr&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;td valign="top" width="600" style="width:600px;"&gt; &lt;![endif]--&gt; &lt;table align="left" border="0" cellpadding="0" cellspacing="0" style="max-width:100%; min-width:100%;" width="100%" class="mcnTextContentContainer"&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td valign="top" class="mcnTextContent" style="padding-top:0; padding-right:18px; padding-bottom:9px; padding-left:18px;"&gt; &lt;em&gt;Copyright © *|CURRENT_YEAR|* *|LIST:COMPANY|*, All rights reserved.&lt;/em&gt;&lt;br&gt;*|IFNOT:ARCHIVE_PAGE|* *|LIST:DESCRIPTION|* &lt;br&gt; &lt;br&gt; &lt;strong&gt;Our mailing address is:&lt;/strong&gt; &lt;br&gt; *|HTML:LIST_ADDRESS_HTML|* *|END:IF|* &lt;br&gt; &lt;br&gt; Want to change how you receive these emails?&lt;br&gt; You can &lt;a href="*|UPDATE_PROFILE|*"&gt;update your preferences&lt;/a&gt; or &lt;a href="*|UNSUB|*"&gt;unsubscribe from this list&lt;/a&gt;. &lt;br&gt; &lt;br&gt; *|IF:REWARDS|* *|HTML:REWARDS|**|END:IF|* &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;!--[if mso]&gt; &lt;/td&gt; &lt;![endif]--&gt; &lt;!--[if mso]&gt; &lt;/tr&gt; &lt;/table&gt; &lt;![endif]--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;!--[if (gte mso 9)|(IE)]&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;![endif]--&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;!-- // END TEMPLATE --&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/center&gt; &lt;/body&gt;&lt;/html&gt; html_image(folder)]]></content>
      <categories>
        <category>coding_testing</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[server_connect]]></title>
    <url>%2F2019%2F04%2F22%2Fcoding-test-01server-connect%2F</url>
    <content type="text"><![CDATA[Nodejs server &amp;&amp; Python server nodejs server和python server之间用RESTful API通信，把前端上传图片的文件路径传给python server. Client.js (node.js server) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111var multer = require('multer');// var fs = require('fs');var path = require('path');var express = require('express');var app = express();// var request = require('request');app.get('/', function (req, res) &#123; res.send('Hello World');&#125;)var server = app.listen(8081, function () &#123; var host = server.address().address var port = server.address().port console.log("应用实例，访问地址为 http://%s:%s", host, port)&#125;)// upload imagevar storage01 = multer.diskStorage(&#123; destination: './images/', filename: function(req, file, cb) &#123; return cb(null, "" + file.originalname); &#125; &#125;);app.post("/user/image", multer(&#123; storage: storage01 &#125;).single('image'), function(req, res) &#123; console.log('Sign saved!'); var email = req.body.email; console.log(email); var path01 = path.join(__dirname,req.file.path); // console.log(path01);// var request = require('request'); var http = require('http'); var qs = require('querystring'); var opt = &#123; host:'127.0.0.1', port:'8888', method:'POST', path:'/', headers:&#123; 'content-type': "application/json" //'accept-encoding': 'gzip' &#125; &#125;; var body = ''; var req = http.request(opt, function(res) &#123; console.log("Got response: " + res.statusCode); res.on('data',function(d)&#123; body += d; &#125;); res.on('end', function()&#123; console.log(res.headers); console.log(body) &#125;); &#125;); req.on('error', function(e) &#123; console.log("Got error: " + e.message); &#125;); // var data = &#123;num:"1",num1:"123",type:"add"&#125;; var data = &#123;'path01':`'$&#123;path01&#125;'`&#125;; req.write(qs.stringify(data)); req.end();// return res.status(200).end('success');&#125;);// var request = require('request');// var http = require('http');// var qs = require('querystring');// var opt = &#123;// host:'127.0.0.1',// port:'8888',// method:'POST',// path:'/',// headers:&#123;// 'content-type': "application/json"// //'accept-encoding': 'gzip'// &#125;// &#125;;// var body = '';// var req = http.request(opt, function(res) &#123; // console.log("Got response: " + res.statusCode);// res.on('data',function(d)&#123;// body += d;// &#125;);// res.on('end', function()&#123;// console.log(res.headers);// console.log(body)// &#125;);// &#125;);// req.on('error', function(e) &#123;// console.log("Got error: " + e.message);// &#125;); // // var data = &#123;num:"1",num1:"123",type:"add"&#125;;// var data = &#123;'path01':'path01'&#125;; // req.write(qs.stringify(data));// req.end(); Server.js (python server) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107// var http = require("http"); // var url = require("url"); // var query = require("querystring"); // var server = function(request,response)&#123;// response.writeHead(200,&#123;"Content-Type":"text/json"&#125;);// var postdata = "";// request.addListener("data",function(postchunk)&#123;// postdata += postchunk; // &#125;)// request.addListener("end",function()&#123;// var params = query.parse(postdata);// console.log(params['path01'])// console.log(params['path01'])// // console.log(params['result']);// response.write(JSON.stringify(params));// response.end();// &#125;)// &#125;// http.createServer(server).listen(8888);// console.log("Server start!"); //---------------------//express.js 文件var express = require('express');var app = express();var server = app.listen(8888, function () &#123; var host = server.address().address var port = server.address().port console.log("应用实例，访问地址为 http://%s:%s", host, port)&#125;)app.post('/uploadFile',function(req,res)&#123; response.writeHead(200,&#123;"Content-Type":"text/json"&#125;); var postdata = ""; request.addListener("data",function(postchunk)&#123; postdata += postchunk; &#125;) request.addListener("end",function()&#123; var params = query.parse(postdata); console.log(params['path01']) console.log(params['path01']) // console.log(params['result']); response.write(JSON.stringify(params)); response.end(); &#125;)&#125;)//---------------------// var http = require("http"); //提供web服务// var url = require("url"); //解析GET请求 // var query = require("querystring"); //解析POST请求 // //服务// var server = function(request,response)&#123;// //定义报文头// response.writeHead(200,&#123;"Content-Type":"text/json"&#125;);// //判断是GET/POST请求// if(request.method == "GET")&#123;// var params = [];// params = url.parse(request.url,true).query;// params['result'] = compute(params);// response.write(JSON.stringify(params));// response.end();// &#125;else&#123;// var postdata = "";// request.addListener("data",function(postchunk)&#123;// postdata += postchunk; // &#125;) // //POST结束输出结果// request.addListener("end",function()&#123;// var params = query.parse(postdata);// console.log(params['path01'])// console.log(params['path01'])// params['result'] = compute(params);// // console.log(params['result']);// response.write(JSON.stringify(params));// response.end();// &#125;)// &#125;// &#125; // //计算// var compute = function(params)&#123;// switch(params['type'])&#123;// case "add": return parseFloat(params['num']) + parseFloat(params['num1']);break;// case "sub": return parseFloat(params['num']) - parseFloat(params['num1']);break;// case "mul": return parseFloat(params['num']) * parseFloat(params['num1']);break;// case "div": return parseFloat(params['num']) / parseFloat(params['num1']);break;// &#125;// &#125;; // http.createServer(server).listen(8888);// console.log("Server start!");]]></content>
      <categories>
        <category>coding_testing</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
</search>
